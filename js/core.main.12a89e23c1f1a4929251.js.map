{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Stores/connect.js","webpack:///./_common/lazy-load.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./Modules/Endpoint/Endpoint.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./_common/base/server_time.js","webpack:///./Services/logout.js","webpack:///./App/Components/Layout/Header/Components/Preloader/platform-switcher.jsx","webpack:///./Services/socket-general.js","webpack:///./_common/common_functions.js","webpack:///./_common/storage.js","webpack:///./_common/base/socket_base.js","webpack:////home/circleci/project/packages/translations/src/components/localize.jsx","webpack:////home/circleci/project/packages/translations/src/components/index.js","webpack:////home/circleci/project/packages/translations/src/i18next/i18next.js","webpack:///./_common/base/client_base.js","webpack:////home/circleci/project/packages/shared/src/utils/object/clone.js","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-info.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-item.jsx","webpack:///./Utils/Language/language.js","webpack:///./_common/base/network_monitor_base.js","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./_common/base/login.js","webpack:///./App/Containers/RealAccountSignup/helpers/constants.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Routes/helpers.js","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:////home/circleci/project/packages/shared/src/utils/storage/storage_events.js","webpack:////home/circleci/project/packages/shared/src/utils/routes/routes.js","webpack:////home/circleci/project/packages/shared/src/utils/platform/platform.js","webpack:////home/circleci/project/packages/shared/src/utils/config/config.js","webpack:////home/circleci/project/packages/shared/src/utils/object/object.js","webpack:////home/circleci/project/packages/shared/src/utils/currency/currency.js","webpack:////home/circleci/project/packages/shared/src/utils/screen/responsive.js","webpack:////home/circleci/project/packages/shared/src/utils/string/string_util.js","webpack:////home/circleci/project/packages/shared/src/utils/os/os_detect.js","webpack:////home/circleci/project/packages/shared/src/utils/route/route.js","webpack:////home/circleci/project/packages/shared/src/utils/date/date-time.js","webpack:////home/circleci/project/packages/shared/src/utils/url/url.js","webpack:////home/circleci/project/packages/shared/src/utils/digital-options/digital-options.js","webpack:///./App/Constants/app-config.js","webpack:////home/circleci/project/packages/components/src/components/icon/icon.jsx","webpack:////home/circleci/project/packages/components/src/components/icon/index.js","webpack:////home/circleci/project/packages/components/src/components/accordion/accordion.jsx","webpack:////home/circleci/project/packages/components/src/components/accordion/index.js","webpack:////home/circleci/project/packages/components/src/components/auto-height-wrapper/auto-height-wrapper.jsx","webpack:////home/circleci/project/packages/components/src/components/auto-height-wrapper/index.js","webpack:////home/circleci/project/packages/components/src/components/field/field.jsx","webpack:////home/circleci/project/packages/components/src/components/field/index.js","webpack:////home/circleci/project/packages/components/src/components/input/input.jsx","webpack:////home/circleci/project/packages/components/src/components/input/index.js","webpack:////home/circleci/project/packages/components/src/hooks/use-hover.js","webpack:////home/circleci/project/packages/components/src/components/themed-scrollbars/themed-scrollbars.jsx","webpack:////home/circleci/project/packages/components/src/components/dropdown-list/dropdown-list.jsx","webpack:////home/circleci/project/packages/components/src/components/dropdown-list/index.js","webpack:////home/circleci/project/packages/components/src/components/autocomplete/autocomplete.jsx","webpack:////home/circleci/project/packages/components/src/components/autocomplete/index.js","webpack:////home/circleci/project/packages/components/src/components/loading/loading.jsx","webpack:////home/circleci/project/packages/components/src/components/button/button_loading.jsx","webpack:////home/circleci/project/packages/components/src/components/button/button.jsx","webpack:////home/circleci/project/packages/components/src/components/button/index.js","webpack:////home/circleci/project/packages/components/src/components/button-link/button-link.jsx","webpack:////home/circleci/project/packages/components/src/components/button-link/index.js","webpack:////home/circleci/project/packages/components/src/components/button-toggle/button-highlight.jsx","webpack:////home/circleci/project/packages/components/src/components/button-toggle/button-highlight-wrapper.jsx","webpack:////home/circleci/project/packages/components/src/components/counter/counter.jsx","webpack:////home/circleci/project/packages/components/src/components/button-toggle/button-toggle.jsx","webpack:////home/circleci/project/packages/components/src/components/button-toggle/index.js","webpack:////home/circleci/project/packages/components/src/components/calendar/views/types.js","webpack:////home/circleci/project/packages/components/src/components/popover/popover.jsx","webpack:////home/circleci/project/packages/components/src/components/popover/index.js","webpack:////home/circleci/project/packages/components/src/components/calendar/helpers/constants.js","webpack:////home/circleci/project/packages/components/src/components/calendar/views/calendar-days.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/views/calendar-months.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/views/calendar-years.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/views/calendar-decades.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/views/views.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/views/index.js","webpack:////home/circleci/project/packages/components/src/components/calendar/calendar-body.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/calendar-button.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/calendar-footer.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/calendar-header.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/calendar.jsx","webpack:////home/circleci/project/packages/components/src/components/calendar/index.js","webpack:////home/circleci/project/packages/components/src/components/clipboard/clipboard.jsx","webpack:////home/circleci/project/packages/components/src/components/clipboard/index.js","webpack:////home/circleci/project/packages/components/src/components/checkbox/checkbox.jsx","webpack:////home/circleci/project/packages/components/src/components/checkbox/index.js","webpack:////home/circleci/project/packages/components/src/components/checklist/checklist.jsx","webpack:////home/circleci/project/packages/components/src/components/checklist/index.js","webpack:////home/circleci/project/packages/components/src/components/circular-progress/circular-progress.jsx","webpack:////home/circleci/project/packages/components/src/components/circular-progress/index.js","webpack:////home/circleci/project/packages/components/src/components/collapsible/utils.js","webpack:////home/circleci/project/packages/components/src/components/collapsible/arrow-button.jsx","webpack:////home/circleci/project/packages/components/src/components/collapsible/collapsible.jsx","webpack:////home/circleci/project/packages/components/src/components/collapsible/index.js","webpack:////home/circleci/project/packages/components/src/components/counter/index.js","webpack:////home/circleci/project/packages/components/src/components/composite-checkbox/composite-checkbox.jsx","webpack:////home/circleci/project/packages/components/src/components/composite-checkbox/index.js","webpack:////home/circleci/project/packages/components/src/components/date-picker/date-picker-input.jsx","webpack:////home/circleci/project/packages/components/src/components/date-picker/date-picker-calendar.jsx","webpack:////home/circleci/project/packages/components/src/components/date-picker/date-picker-native.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-wrapper/mobile-wrapper.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-wrapper/index.js","webpack:////home/circleci/project/packages/components/src/components/desktop-wrapper/desktop-wrapper.jsx","webpack:////home/circleci/project/packages/components/src/components/desktop-wrapper/index.js","webpack:////home/circleci/project/packages/components/src/components/date-picker/date-picker.jsx","webpack:////home/circleci/project/packages/components/src/components/date-picker/index.js","webpack:////home/circleci/project/packages/components/src/components/date-of-birth-picker/date-of-birth-picker.jsx","webpack:////home/circleci/project/packages/components/src/components/date-of-birth-picker/index.js","webpack:////home/circleci/project/packages/components/src/components/data-list/data-list-cell.jsx","webpack:////home/circleci/project/packages/components/src/components/data-list/data-list.jsx","webpack:////home/circleci/project/packages/components/src/components/data-list/index.js","webpack:////home/circleci/project/packages/components/src/components/data-table/table-cell.jsx","webpack:////home/circleci/project/packages/components/src/components/data-table/table-row-info.jsx","webpack:////home/circleci/project/packages/components/src/components/data-table/table-row.jsx","webpack:////home/circleci/project/packages/components/src/components/data-table/data-table.jsx","webpack:////home/circleci/project/packages/components/src/components/data-table/index.js","webpack:////home/circleci/project/packages/components/src/components/dialog/dialog.jsx","webpack:////home/circleci/project/packages/components/src/components/dialog/index.js","webpack:////home/circleci/project/packages/components/src/components/div100vh-container/div100vh-container.jsx","webpack:////home/circleci/project/packages/components/src/components/div100vh-container/index.js","webpack:////home/circleci/project/packages/components/src/components/drawer/drawer.jsx","webpack:////home/circleci/project/packages/components/src/components/drawer/index.js","webpack:////home/circleci/project/packages/components/src/components/dropdown/dropdown.js","webpack:////home/circleci/project/packages/components/src/components/dropdown/items.jsx","webpack:////home/circleci/project/packages/components/src/components/dropdown/native-select.jsx","webpack:////home/circleci/project/packages/components/src/components/dropdown/display-text.jsx","webpack:////home/circleci/project/packages/components/src/hooks/use-onclickoutside.js","webpack:////home/circleci/project/packages/components/src/hooks/use-onlongpress.js","webpack:////home/circleci/project/packages/components/src/components/dropdown/dropdown.jsx","webpack:////home/circleci/project/packages/components/src/components/dropdown/index.js","webpack:////home/circleci/project/packages/components/src/components/expansion-panel/expansion-panel.jsx","webpack:////home/circleci/project/packages/components/src/components/expansion-panel/index.js","webpack:////home/circleci/project/packages/components/src/components/fade-wrapper/fade-wrapper.jsx","webpack:////home/circleci/project/packages/components/src/components/file-dropzone/file-dropzone.jsx","webpack:////home/circleci/project/packages/components/src/components/file-dropzone/index.js","webpack:////home/circleci/project/packages/components/src/components/form-progress/form-progress.jsx","webpack:////home/circleci/project/packages/components/src/components/form-progress/index.js","webpack:////home/circleci/project/packages/components/src/components/form-submit-button/form-submit-button.jsx","webpack:////home/circleci/project/packages/components/src/components/form-submit-button/index.js","webpack:////home/circleci/project/packages/components/src/components/hint-box/hint-box.jsx","webpack:////home/circleci/project/packages/components/src/components/hint-box/index.js","webpack:////home/circleci/project/packages/components/src/components/icon-trade-types/icon-trade-types.jsx","webpack:////home/circleci/project/packages/components/src/components/label/label.jsx","webpack:////home/circleci/project/packages/components/src/components/label/index.js","webpack:////home/circleci/project/packages/components/src/components/linear-progress/linear-progress.jsx","webpack:////home/circleci/project/packages/components/src/components/linear-progress/linear-progress-container.jsx","webpack:////home/circleci/project/packages/components/src/components/loading/index.js","webpack:////home/circleci/project/packages/components/src/components/mobile-carousel/mobile-carousel.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-carousel/index.js","webpack:////home/circleci/project/packages/components/src/components/mobile-dialog/mobile-dialog.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-dialog/index.js","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/mobile-drawer-body.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/mobile-drawer-footer.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/mobile-drawer-subheader.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/mobile-drawer-item.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/mobile-drawer-submenu.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/mobile-drawer-submenu-section.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/mobile-drawer.jsx","webpack:////home/circleci/project/packages/components/src/components/mobile-drawer/index.js","webpack:////home/circleci/project/packages/components/src/components/modal/modal-body.jsx","webpack:////home/circleci/project/packages/components/src/components/modal/modal-footer.jsx","webpack:////home/circleci/project/packages/components/src/components/modal/modal.jsx","webpack:////home/circleci/project/packages/components/src/components/modal/index.js","webpack:////home/circleci/project/packages/components/src/components/money/money.jsx","webpack:////home/circleci/project/packages/components/src/components/money/index.js","webpack:////home/circleci/project/packages/components/src/components/multi-step/multi-step.jsx","webpack:////home/circleci/project/packages/components/src/components/multi-step/index.js","webpack:////home/circleci/project/packages/components/src/components/numpad/number-button.jsx","webpack:////home/circleci/project/packages/components/src/components/numpad/number-grid.jsx","webpack:////home/circleci/project/packages/components/src/components/numpad/step-input.jsx","webpack:////home/circleci/project/packages/components/src/components/numpad/numpad.jsx","webpack:////home/circleci/project/packages/components/src/components/numpad/index.js","webpack:////home/circleci/project/packages/components/src/components/page-error/page-error.jsx","webpack:////home/circleci/project/packages/components/src/components/page-error/index.js","webpack:////home/circleci/project/packages/components/src/components/page-overlay/page-overlay.jsx","webpack:////home/circleci/project/packages/components/src/components/page-overlay/index.js","webpack:////home/circleci/project/packages/components/src/components/password-input/password-input.jsx","webpack:////home/circleci/project/packages/components/src/components/password-input/index.js","webpack:////home/circleci/project/packages/components/src/components/password-meter/password-meter.jsx","webpack:////home/circleci/project/packages/components/src/components/password-meter/index.js","webpack:////home/circleci/project/packages/components/src/components/progress-bar/progress-bar.jsx","webpack:////home/circleci/project/packages/components/src/components/progress-bar/index.js","webpack:////home/circleci/project/packages/components/src/components/progress-indicator/progress-indicator.jsx","webpack:////home/circleci/project/packages/components/src/components/progress-indicator/index.js","webpack:////home/circleci/project/packages/components/src/components/radio-group/radio-group.jsx","webpack:////home/circleci/project/packages/components/src/components/radio-group/index.js","webpack:////home/circleci/project/packages/components/src/components/select-native/select-native.jsx","webpack:////home/circleci/project/packages/components/src/components/select-native/index.js","webpack:////home/circleci/project/packages/components/src/components/send-email-template/send-email-template.jsx","webpack:////home/circleci/project/packages/components/src/components/send-email-template/index.js","webpack:////home/circleci/project/packages/components/src/components/swipeable-wrapper/swipeable-wrapper.jsx","webpack:////home/circleci/project/packages/components/src/components/swipeable-wrapper/index.js","webpack:////home/circleci/project/packages/components/src/components/relative-datepicker/relative-datepicker.jsx","webpack:////home/circleci/project/packages/components/src/components/relative-datepicker/index.js","webpack:////home/circleci/project/packages/components/src/components/table/table-head.jsx","webpack:////home/circleci/project/packages/components/src/components/table/table-header.jsx","webpack:////home/circleci/project/packages/components/src/components/table/table-body.jsx","webpack:////home/circleci/project/packages/components/src/components/table/table-row.jsx","webpack:////home/circleci/project/packages/components/src/components/table/table-cell.jsx","webpack:////home/circleci/project/packages/components/src/components/table/table.jsx","webpack:////home/circleci/project/packages/components/src/components/table/index.js","webpack:////home/circleci/project/packages/components/src/components/tabs/tab.jsx","webpack:////home/circleci/project/packages/components/src/components/tabs/tabs.jsx","webpack:////home/circleci/project/packages/components/src/components/tabs/index.js","webpack:////home/circleci/project/packages/components/src/components/toast-error/toast-error.jsx","webpack:////home/circleci/project/packages/components/src/components/toast-error/index.js","webpack:////home/circleci/project/packages/components/src/components/toggle-switch/toggle-switch.jsx","webpack:////home/circleci/project/packages/components/src/components/toggle-switch/index.js","webpack:////home/circleci/project/packages/components/src/components/tick-picker/tick-picker.jsx","webpack:////home/circleci/project/packages/components/src/components/tick-picker/index.js","webpack:////home/circleci/project/packages/components/src/components/tick-progress/tick-progress.jsx","webpack:////home/circleci/project/packages/components/src/components/tick-progress/index.js","webpack:////home/circleci/project/packages/components/src/components/timeline/timeline.jsx","webpack:////home/circleci/project/packages/components/src/components/timeline/index.js","webpack:////home/circleci/project/packages/components/src/components/u-i-loader/ui-loader.jsx","webpack:////home/circleci/project/packages/components/src/components/u-i-loader/index.js","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab-content-container.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab-header.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab-header-group.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab-wrapper.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab-header-title.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab-headers.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab-layout.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/vertical-tab.jsx","webpack:////home/circleci/project/packages/components/src/components/vertical-tab/index.js","webpack:///./_common/base/api_middleware.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./Modules/SmartTraderIFrame/SmartTraderIFrame.jsx","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./App/Components/Elements/Modals/RedirectNotice/redirect-notice-modal.jsx","webpack:///./App/Components/Elements/CookieBanner/cookie-banner.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/go-to-deriv.jsx","webpack:///./App/Components/Layout/Footer/endpoint-note.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Components/Layout/Footer/help-centre.jsx","webpack:///./App/Components/Layout/Footer/responsible-trading.jsx","webpack:///./App/Components/Layout/Footer/account-limits.jsx","webpack:///./Assets/SvgComponents/footer/mga.svg","webpack:///./App/Components/Layout/Footer/regulatory-information.jsx","webpack:///./App/Components/Elements/live-chat.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./App/Containers/NotificationsDialog/notifications-dialog.jsx","webpack:///./App/Components/Layout/Header/toggle-notifications.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Components/Layout/Header/platform-dropdown.jsx","webpack:///./App/Components/Layout/Header/platform-switcher.jsx","webpack:///./App/Constants/platform-config.js","webpack:///./App/Containers/RealAccountSignup/modal-login-prompt.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/utils.js","webpack:///./App/Containers/RealAccountSignup/address-details.jsx","webpack:///./App/Containers/RealAccountSignup/form-validations.js","webpack:///./App/Containers/RealAccountSignup/address-details-form.js","webpack:///./App/Containers/RealAccountSignup/currency-selector.jsx","webpack:///./App/Containers/RealAccountSignup/currency-selector-form.js","webpack:///./App/Containers/RealAccountSignup/personal-details.jsx","webpack:///./App/Containers/RealAccountSignup/personal-details-form.js","webpack:///./App/Containers/RealAccountSignup/checkbox-field.jsx","webpack:///./App/Containers/RealAccountSignup/terms-of-use-messages.jsx","webpack:///./App/Containers/RealAccountSignup/terms-of-use.jsx","webpack:///./App/Containers/RealAccountSignup/terms-of-use-form.js","webpack:///./App/Containers/RealAccountSignup/financial-details-partials.jsx","webpack:///./App/Containers/RealAccountSignup/financial-details.jsx","webpack:///./App/Containers/RealAccountSignup/financial-details-form.js","webpack:///./App/Containers/RealAccountSignup/account-wizard.jsx","webpack:///./_common/base/cancellable_promise.js","webpack:///./App/Containers/RealAccountSignup/account-wizard-form.js","webpack:///./App/Containers/RealAccountSignup/add-crypto-currency.jsx","webpack:///./App/Containers/RealAccountSignup/change-account-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx","webpack:///./App/Containers/RealAccountSignup/finished-set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/signup-error-content.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-message.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx","webpack:///./App/Containers/RealAccountSignup/status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/set-currency-modal.jsx","webpack:///./App/Containers/new-version-notification.jsx","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Modules/Cashier/Containers/cashier-notifications.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification-status-icons.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./App/Containers/app-notification-messages.jsx","webpack:///./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx","webpack:///./App/Components/Elements/Modals/mt5-account-needed-modal.jsx","webpack:///./App/Containers/Modals/app-modals.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/segment-store.js","webpack:///./Stores/Modules/Cashier/on-ramp-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/ui-store.js","webpack:///./Constants/ui.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./App/app.jsx","webpack:///./index.js","webpack:///./_common/utility.js","webpack:///./Stores/Helpers/client.js","webpack:////home/circleci/project/packages/account/dist/js/form-sub-header.js","webpack:///./_common/base/socket_cache.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","prefetchChunks","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","deferredPrefetch","apply","shift","deferredModules","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","forEach","undefined","link","document","createElement","nc","setAttribute","rel","as","href","jsonpScriptSrc","head","appendChild","installedModules","installedCssChunks","p","exports","module","l","e","promises","Promise","resolve","reject","fullhref","existingLinkTags","getElementsByTagName","dataHref","tag","getAttribute","existingStyleTags","linkTag","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","error","clearTimeout","chunk","errorType","realSrc","message","name","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","startupResult","MobxContent","React","injectStorePropsToComponent","propsToSelectFn","BaseComponent","component","own_props","Component","store","isReactComponent","useObserver","props","displayName","MobxContentProvider","children","Provider","mobxStores","connect","handleLoading","pastDelay","makeLazyLoader","importFn","component_name","Loadable","Map","loader","ComponentModule","render","loaded","ComponentLazy","loading","Redirect","history","setVerificationCode","fetchResidenceList","openRealAccountSignup","toggleAccountSignupModal","toggleResetPasswordModal","url_query_string","location","search","url_params","URLSearchParams","redirected_to_route","routes","cashier_withdrawal","cashier_pa","ext_platform_url","root","sessionStorage","setItem","cashier_p2p","Login","loginUrl","mt5","pathname","propTypes","getServerTime","PropTypes","func","withRouter","client","ui","routesConfig","InputField","field","form","errors","touched","autoComplete","maxLength","is_eu_enabled","toggleIsEuEnabled","initialValues","app_id","getAppId","server","getSocketURL","validate","values","test","onSubmit","localStorage","reload","isSubmitting","handleChange","setFieldTouched","style","width","minWidth","margin","fontWeight","color","marginBottom","fontSize","lineHeight","label","hint","marginTop","onChange","is_disabled","text","primary","marginLeft","onClick","removeItem","secondary","Page404","Trader","el_head","querySelector","el_main_css","getUrlBase","Account","Bot","path","bot","title","localize","account_deactivated","account","icon_component","is_authenticated","icon","subroutes","personal_details","default","financial_assessment","proof_of_identity","proof_of_address","deriv_password","self_exclusion","account_limits","login_history","api_token","connected_apps","two_factor_authentication","deactivate_account","reports","positions","profit","statement","contract","error404","lazyLoadCashierComponent","lazyLoadComplaintsPolicy","route_default","getRoutesConfig","index","RouterRedirect","to","endpoint","Endpoint","redirect","cashier","is_modal","cashier_deposit","cashier_acc_transfer","cashier_pa_transfer","id","cashier_onramp","complaints_policy","server_time","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","init","requestTime","timeCounter","moment","require","BinarySocket","PromiseClass","ServerTime","fncTimeUpdated","clearInterval","setInterval","performance","now","send","time","response","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","utc","clone","timePromise","requestLogout","WS","logout","doLogout","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","PlatformSwitcherLoader","is_mobile","speed","element_spacing","logo_size","name_x","name_y","container_width","container_margin","height","primaryColor","secondaryColor","x","y","rx","ry","client_store","common_store","gtm_store","onDisconnect","onOpen","onMessage","setResidence","setBalanceActiveAccount","handleError","subscribeBalances","authorizeAccount","BinarySocketGeneral","setIsSocketOpened","is_ready","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","setServerTime","msg_type","is_active_tab","getItem","getPropertyValue","State","authorize","loginid","is_populating_account_list","is_switching","get_settings","country_code","setEmail","email","setAccountSettings","eventHandler","setAccountStatus","get_account_status","responsePayoutCurrencies","payout_currencies","pushTransactionData","residence","landingCompany","flow","obj_balance","wait","authorized","mt5LoginList","mt5_list_response","resetMt5ListPopulatedState","responseMt5LoginList","balanceAll","balance_response","setBalanceOtherAccounts","balance","forgetAll","getAccountStatus","account_status_response","landing_company_response","responseLandingCompany","setError","includes","TrackJS","track","header","should_show_refresh","redirect_label","redirectOnClick","redirectToLogin","subscribeBalanceAll","balanceOtherAccounts","subscribeBalanceActiveAccount","balanceActiveAccount","common","gtm","responseAuthorize","storage","getSettings","payoutCurrencies","is_virtual","getSelfExclusion","sendBuffered","currency","accounts","accepted_bch","is_available","website_status","site_status","availability","setWebsiteStatus","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","Cookies","isEmptyObject","getObject","JSON","parse","this","setObject","stringify","Storage","isStorageSupported","Store","remove","InScriptStore","k","obj","Array","isArray","keys","has","getResponse","split","concat","getByMsgType","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","expires","Date","read","cookie_value","write","val","expireDate","isSecure","secure","SessionStore","LocalStore","domains","join","parent_path","cookie_names","RegExp","cookie","deriv_api","binary_socket","config","wrong_app_id","is_disconnect_called","is_connected_before","timeouts","clearTimeouts","close","hasReadyState","excludeAuthorize","subscribe","DerivAPIBasic","cloneObject","getLanguage","website_name","ClientBase","APIMiddleware","BinarySocketBase","isLoggedIn","cb","options","is_switching_socket","token","wsEvent","WebSocket","toLowerCase","connection","middleware","authorize_token","onReconnect","onClose","forgetStream","forget","responses","expectResponse","filter","status","states","some","readyState","getSocket","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","cache","delegateToObject","buy","proposal_id","price","buyAndSubscribe","called","subscriber","unsubscribe","sell","contract_id","bid_price","action","parameters","cancelContract","cancel","contractUpdate","limit_order","contract_update","contractUpdateHistory","contract_update_history","mt5NewAccount","mt5_new_account","mt5PasswordChange","login","old_password","new_password","password_type","mt5_password_change","mt5PasswordReset","payload","mt5_password_reset","newAccountVirtual","verification_code","client_password","device_data","new_account_virtual","newAccountReal","new_account_real","newAccountRealMaltaInvest","new_account_maltainvest","p2pAdvertiserInfo","p2p_advertiser_info","p2pSubscribe","profitTable","limit","offset","date_boundaries","profit_table","description","verifyEmail","verify_email","activeSymbols","paymentAgentList","country","paymentagent_list","paymentAgentWithdraw","amount","dry_run","paymentagent_withdraw","paymentagent_loginid","paymentAgentTransfer","transfer_to","paymentagent_transfer","setAccountCurrency","passthrough","set_account_currency","subscribeProposal","req","proposal","subscribeProposalOpenContract","proposal_open_contract","subscribeTicks","symbol","ticks","subscribeTicksHistory","request_object","subscribeTransaction","transaction","tncApproval","tnc_approval","transferBetweenAccounts","account_from","account_to","transfer_between_accounts","loginHistory","closeAndOpenNewConnection","accountStatistics","account_statistics","realityCheck","reality_check","base_obj","extending_obj_getter","Proxy","extending_obj","proxied_socket_base","proxyForAuthorize","args","Localize","i18n_default_text","components","i18n","Trans","defaults","tOptions","arrayOf","node","isRequired","string","withI18n","query_lang","local_storage_language","ALL_LANGUAGES","freeze","ACH","EN","ES","FR","ID","IT","PL","PT","RU","VI","ZH_CN","ZH_TW","isStaging","isLanguageAvailable","lang","selected_language","toUpperCase","getAllLanguages","loadLanguageJson","hasResourceBundle","fetch","lang_json","addResourceBundle","documentElement","initial_language","i18n_config","react","hashTransKey","defaultValue","crc32","lng","fallbackLng","defaultNS","use","initReactI18next","initializeTranslations","loadIncontextTranslation","language","changeLanguage","jipt","current_loginid","types_map_config","client_object","getAllAccountsObject","getAllLoginids","getAccountType","isAccountOfType","getAccountOfType","TypesMapConfig","canTransferFundsTo","isCryptocurrency","only_enabled","this_type","find","assign","financial","gaming","virtual","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","account_type","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","shouldAcceptTnc","account_settings","website_tnc_version","client_tnc_status","setNewAccount","currentLandingCompany","this_shortcode","landing_company_prop","shortcode","shouldCompleteTax","account_status","getMT5AccountType","group","replace","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","indexOf","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","risk_classification","canTransferFunds","hasSvgAccount","canChangeCurrency","mt5_login_list","is_current","has_no_mt5","has_no_transaction","count","transactions","has_account_criteria","_instanceof","nativeMap","nativeSet","nativePromise","_","Set","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","Infinity","_clone","child","proto","__isArray","__isRegExp","source","__getRegExpFlags","lastIndex","__isDate","getTime","isBuffer","from","copy","getPrototypeOf","keyChild","valueChild","entryChild","add","getOwnPropertyDescriptor","TypeError","ReferenceError","getOwnPropertySymbols","symbols","descriptor","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","toString","re","flags","global","ignoreCase","multiline","clonePrototype","AccountsInfoLoader","is_logged_in","LoggedOutPreloader","LoggedInPreloader","cx","cy","number","AccountsItemLoader","currentLanguage","getAllowedLanguages","exclude_languages","reduce","getURL","urlForLanguage","NetworkMonitorBase","ws_config","setNetworkStatus","status_config","online","class","tooltip","offline","blinking","isOnline","navigator","onLine","reconnect_timeout","reconnectAfter","ping","events","open","socket_general_functions","fncUpdateUI","last_status","last_is_online","is_online","addEventListener","ErrorComponent","refresh_message","messages","redirect_url","trade","buttonOnClick","oneOfType","isMobile","isMobileOs","domain_app_ids","getDerivComLink","urlForCurrentDomain","server_url","signup_device","date_first_contact","marketing_queries","default_login_url_app","default_login_url","initOneAll","provider","el_button","removeEventListener","brand","preventDefault","redirectToSignUp","EXPERIAN","SUCCESS","WARN","DANGER","PENDING","short_code","is_isle_of_man_residence","is_belgium_residence","getExperianResult","landing_company_shortcode","is_fully_authenticated","is_age_verified","screen_height_sm_threshold","ignored_responses_in_trackjs","queue","list","size","unshift","pop","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","return_value","log","fresh","item","getMessage","trackJSNetworkMonitor","BinaryLink","active_class","has_error","normalizePath","route","findRouteByPath","routes_config","route_info","match_path","matchPath","activeClassName","exact","array","LoginPrompt","onLogin","onSignup","page_title","className","pushDataLayer","default_subroute","has_default_subroute","removeBranchName","default_title","prompt_when","promptFn","useLocation","fallback","when","map","idx","getUrlSmartTrader","account_password","apps","cashier_password","exclusion","limits","personal","settings","smarttrader","isBot","isMT5","getPlatformHeader","routing_history","isNavigationFromPlatform","getPlatformIcon","getPlatformRedirect","app_routing_history","platform_route","should_ignore_parent_path","getParentPath","history_item","history_item_parent_path","next_history_item","getCurrentProductionDomain","isProduction","all_domains","config_app_id","current_domain","active_loginid_from_url","local_storage_server_url","substring","is_real","checkAndSetEndpointFromUrl","qa_server","params","hash","protocol","crypto_config","extend","is_empty","isDeepEqual","a","b","isEqualArray","isEqualObject","isNaN","arr1","arr2","obj1","obj2","unique","findIndex","removeEmptyPropertiesFromObject","currencies_config","AMOUNT_MAX_LENGTH","getRoundedNumber","Number","toFixed","getDecimalPlaces","getFormattedText","addComma","formatMoney","currency_value","exclude_currency","decimals","minimumFractionDigits","money","String","sign","decimal_places","Math","abs","Intl","maximumFractionDigits","NumberFormat","format","formatCurrency","num","decimal_points","is_crypto","parseFloat","$0","$1","$2","calcDecimalPlaces","CryptoConfig","hasCorrectDecimalPlaces","currency_decimal_places","amount_decimal_array","setCurrencies","BTC","display_code","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","fractional_digits","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","getTransferLimits","which","transfer_limits","max","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getPaWithdrawalLimit","getCurrencyDisplayCode","getCurrencyName","getMinPayout","getCurrencies","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","isTouchDevice","innerWidth","isDesktop","isTablet","toTitleCase","str","txt","charAt","substr","padLeft","len","char","compareBigUnsignedInt","first_num","numberToString","second_num","max_length","order","getKebabCase","systems","mac","linux","ios","android","windows","isDesktopOs","os","OSDetect","system","userAgent","platform","mobileOSDetect","vendor","opera","MSStream","getSelectedRoute","createFromInputFallback","_d","NaN","location_url","static_host","default_language","epochToMoment","epoch","unix","toMoment","isValid","isUTC","today_moment","daysInMonth","setTime","moment_obj","hour","minute","second","convertToUnix","toGMTFormat","formatDate","date","date_format","formatTime","time_format","daysFromTodayTo","diff","startOf","diffInMonths","getDiffDuration","start_time","end_time","duration","formatDuration","floor","asDays","h","hours","minutes","seconds","days","timestamp","isTimeValid","time_str","isHourValid","isMinuteValid","isDateValid","addDays","num_of_days","addWeeks","num_of_weeks","addMonths","num_of_months","addYears","num_of_years","subDays","subtract","subMonths","subYears","minDate","date_1","date_2","getStartOfMonth","formatMiliseconds","miliseconds","str_format","convertDateFormat","from_date_format","to_date_format","host_map","target_language","url","trim","reset","arr_params","parsed","URL","p_l","param","paramsHash","param_hash","urlFor","query_string","legacy","new_url","url_object","urlForStatic","websiteUrl","getHostMap","resetStaticHost","setUrlLanguage","host","showDigitalOptionsUnavailableError","showError","website_domain","TRACKING_STATUS_KEY","Icon","custom_color","onMouseEnter","onMouseLeave","filename","filenames","exec","sprite_id","startsWith","xmlns","xmlnsXlink","classNames","xlinkHref","bool","Accordion","state","open_idx","prevProps","setState","content","AutoHeightWrapper","setHeight","setRef","ref","updateHeight","clientHeight","default_height","height_offset","any","Field","Input","classNameError","classNameWarn","disabled","warn","leading_icon","has_character_counter","max_characters","trailing_icon","counter","setCounter","placeholder","input_value","htmlFor","useHover","refSetter","setValue","handleMouseOver","handleMouseOut","current","ThemedScrollbars","autohide","is_bypassed","is_only_horizontal","has_horizontal","onScroll","hoverRef","isHovered","maxHeight","maxWidth","ListItem","is_active","child_ref","onItemSelection","is_object_list","setActiveIndex","onMouseDown","ListItems","active_index","list_items","not_found_text","list_item","groups","group_names","item_idx","group_name","group_idx","has_separator","DropdownList","dropdown_ref","list_item_ref","list_wrapper_ref","is_visible","list_height","onScrollStop","is_object","is_string_array","CSSTransition","in","enter","enterDone","exit","unmountOnExit","items","list_items_shape","shape","objectOf","KEY_CODE","getFilteredItems","Autocomplete","scroll_timeout","scrollTopPos","should_show_list","filtered_items","handleScrollStop","element","scrollTop","setInputWrapperRef","input_wrapper_ref","onKeyPressed","keyCode","hideDropdownList","showDropdownList","setActiveDown","setActiveUp","up","scrollTo","top","behavior","item_height","getBoundingClientRect","item_top","isListItemWithinView","top_of_list","offsetTop","down","items_above","bottom_of_list","onBlur","onHideDropdownList","filterList","prev_props","wrapper_top","dropdown_offset","otherProps","onKeyDown","onInput","defaultProps","Loading","is_fullscreen","is_slow_loading","theme","theme_class","inx","ButtonLoading","Button","classNameSpan","green","has_effect","is_loading","is_submit_success","is_button_toggle","large","medium","rounded","tabIndex","wrapperClassName","small","tertiary","classes","button","Group","ButtonLink","Highlight","left","has_rounded_button","highlight_style","transform","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","HighlightWrapper","buttonClick","updateHighlightPosition","closest","resetHighlight","el","offsetLeft","active_button_el","getElementsByClassName","other_props","classnames","button_width","Counter","ButtonToggle","buttons_arr","is_animated","menu","menuClassNames","selected_value","CommonPropTypes","calendar_date","isPeriodDisabled","selected_date","updateSelected","Popover","toggleOpen","is_open","Boolean","toggleClose","is_bubble_hover_enabled","toggleIsOpenOnHoverPopoverBubble","is_bubble_open","popover_ref","setWrapperRef","wrapper_ref","alignment","classNameBubble","classNameTarget","classNameTargetIcon","disable_message_icon","disable_target_icon","zIndex","relative_render","has_external_open_state","icon_class_name","isOpen","position","transitionDuration","padding","contentDestination","body","contentLocation","targetRect","popoverRect","nudgedLeft","screen_width","clientWidth","total_width","right","top_offset","left_offset","containerStyle","arrowColor","arrowSize","portal_container","oneOf","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers_abbr","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","getDecade","moment_date","year","decade_start_year","getCentury","Days","has_range_selection","hide_others","hovered_date","start_date","disabled_days","onMouseOver","dates","moment_today","moment_cur_date","moment_month_start","moment_month_end","endOf","moment_selected","day","start_of_next_month","moment_start_date","moment_hovered","isSame","is_today","calendar_events","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","has_events","is_closes_early","descrip","match","duration_from_today","is_between","isBetween","is_between_hover","is_before_min_or_after_max_date","isBefore","is_other_month","month","data-date","data-duration","getDays","Months","moment_selected_date","data-month","Years","start_of_decade","end_of_decade","years","is_other_decade","data-year","Decades","decades","min_year","decade","is_other_century","data-decade","Views","Body","calendar_body","calendar_view","is_hidden","FooterIcon","use_icon","Footer","footer","has_today_btn","has_clear_btn","clear_text","onClear","Header","disable_month_selector","disable_year_selector","hide_disabled_periods","navigateTo","switchView","is_date_view","is_month_view","is_year_view","is_decade_view","century","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","should_hide_next_month","should_hide_prev_month","should_hide_prev_year","should_hide_next_year","onClickPrevYear","onClickNextYear","onClickPrevMonth","onClickNextMonth","Calendar","view","new_date","onChangeCalendarMonth","start_of_month","currentTarget","classList","contains","onHover","updateSelectedDate","max_date","min_date","onSelect","dataset","is_before","is_after","isAfter","formatted_date","keep_open","stopPropagation","setSelectedDate","resetCalendar","default_date","setToday","unit","start_of_period","current_date","onRef","forward_ref","data-value","holidays","disable_days","Clipboard","text_copy","info_message","success_message","popoverClassName","is_copied","setIsCopied","timeout_clipboard","textField","innerText","select","execCommand","Checkbox","persist","checked","setChecked","handleKeyDown","defaultChecked","nextProps","classNameLabel","withTabIndex","ItemStatus","button_text","Checklist","itemClassName","CircularProgress","danger_limit","is_clockwise","progress","radius","stroke","warning_limit","normalizedRadius","circumference","PI","strokeDashoffset","fill","strokeDasharray","strokeWidth","positionPropType","IconArrow","IconArrowWithTitle","ArrowButton","icon_arrow","is_collapsed","expand","swipe_config","delta","trackTouch","trackMouse","Collapsible","should_show_collapsible","setShouldShowCollapsible","toArray","swipe_handlers","useSwipeable","onSwipedUp","onSwipedDown","arrow_button","new_state","CustomTag","collapsed_class","no_collapsible_props","collapsible","CompositeCheckbox","DatePickerIcon","DatePickerInput","is_placeholder_visible","show_leading_icon","is_clearable","onChangeInput","onClickClear","readOnly","required","is_clear_btn_visible","setIsClearBtnVisible","data-lpignore","is_autocomplete_disabled","is_hj_whitelisted","error_messages","DatePickerCalendar","is_datepicker_visible","portal_id","css_transition_classnames","el_calendar","ReactDOM","createPortal","Native","display_format","onFocus","is_focused","setIsFocused","input_ref","MobileWrapper","Desktop","DesktopWrapper","DatePicker","datepicker","calendar_portal","handleVisibility","date_picker_rect","calendar_rect","body_rect","calendar_top","onClickOutside","is_click_outside","onSelectCalendar","onSelectCalendarNative","calendar","calendar_value","DateOfBirthPicker","DataListCell","row","column","is_footer","col_index","cell_value","renderHeader","renderCellContent","row_obj","ThemedScrollbarsWrapper","forwardedRef","DataList","footerRowRenderer","rowRenderer","data_source","getRowAction","from_table_row","custom_height","el_list_body","custom_width","getRowSize","itemCount","itemSize","outerElementType","Cell","TableCell","TableRowInfo","toggleDetails","showDetails","cells","TableRow","columns","getActionColumns","is_header","show_preloader","content_loader","action_columns","cell_content","row_class_name","ContentLoader","elementType","DataTable","preloaderCheck","window_width","el_table_body","TableData","itemData","el_table_head","Dialog","handleCancel","is_closed_on_cancel","enableApp","onCancel","handleConfirm","is_closed_on_confirm","onConfirm","disableApp","cancel_button_text","confirm_button_text","is_mobile_full_width","is_content_centered","content_classes","appear","Div100vhContainer","max_autoheight_offset","height_rule","height_style","max_height_offset","IconDrawer","viewBox","fillRule","Drawer","toggleDrawer","prev_state","contentClassName","clear_stat_button_text","is_clear_stat_disabled","onClearStatClick","listPropType","has_tooltip","Items","Item","handleSelect","nodes","has_symbol","is_align_text_left","item_ref","symbol_type_class_name","removeListeners","NativeSelect","nativepicker_text","DisplayText","symbol_value_class","findInArray","arr_list","getDisplayText","is_title","useOnClickOutside","handler","validationFn","listener","composedPath","useLongPress","callback","ms","startLongPress","setStartLongPress","preventDefaults","timer","onMouseUp","onTouchStart","onTouchEnd","Dropdown","classNameDisplay","classNameItems","handleBlur","no_border","is_alignment_top","is_alignment_left","is_large","is_nativepicker","is_nativepicker_visible","list_ref","native_select_ref","is_list_visible","setIsListVisible","list_dimensions","setListDimensions","initial_render","isSingleOption","focus","focusNextListItem","item_starting_with_char","li","direction","activeElement","Function","active_node","next_node","findNextFocusableNode","attributes","nextSibling","prev_node","findPreviousFocusableNode","previousSibling","DropdownItems","onEntered","aria-expanded","role","ExpansionPanel","open_ids","onArrayItemClick","open_id","renderArrayContent","FadeInFromTopDiv","posed","div","opacity","delay","transition","FadeInFromBottomDiv","FadeInOnlyDiv","FadeWrapper","keyname","flipMove","FadeInMessage","enterActive","exitActive","FileDropzone","onDropAccepted","onDropRejected","multiple","accept","maxSize","max_size","getRootProps","getInputProps","isDragAccept","isDragActive","isDragReject","validation_error_message","hover_message","file","error_message","FormProgress","el_completed_bar","animateCompleteBar","el_first_identifier","each","steps","current_step","active_title","nextStep","prevStep","FormSubmitButton","cancel_label","has_cancel","form_error","is_center","is_absolute","HintBox","is_info","IconTradeTypes","available_modes","available_sizes","Label","scale","LinearProgress","LinearProgressContainer","makeProgress","current_tick","run","total_ticks","round","interval","remaining","MobileCarousel","carousel_body","min_width","setMinWidth","setIndex","total_elements","setTotal","scrollLeft","goPrev","goNext","onSwipedLeft","onSwipedRight","goToIndex","MobileDialog","visible","portal_element_id","renderTitle","wrapper_classname","footer_ref","footer_height","overflow","tagName","scrollToTarget","viewport_offset","innerHeight","new_el_top","scrollToElement","has_content_scroll","content_height_offset","SubMenu","toggleMenu","is_expanded","onToggle","submenu_toggle_class","submenu_icon","submenu_title","submenu_suffix_icon","has_subheader","collapse","SubMenuList","SubMenuSection","section_icon","section_title","MobileDrawer","toggle","LiveChat","livechat","onRequestClose","containerElementClass","modalElementClass","SubHeader","livechat_title","onClickLivechat","ModalElement","elements_to_ignore","has_close_icon","onMount","onUnmount","toggleModal","is_vertical_centered","is_vertical_bottom","is_vertical_top","el_ref","modal_root_ref","is_reality_check_visible","querySelectorAll","rendered_title","Modal","onExited","Money","has_sign","should_format","final_amount","MultiStep","step","prevButton","lbl_previous","Multistep","NumberButton","NumberGrid","propType","getDecimals","array_value","StepInput","pip_size","smallest_scale","isFinite","is_gt_max","is_lt_min","increment_value","parsed_value","new_value","concatenate","default_value","Numpad","is_regular","is_currency","is_submit_disabled","reset_press_interval","reset_value","submit_label","onValueChange","onValidate","formatNumber","v","isFloat","formatted_value","is_float","setFloat","setHasError","updateValue","is_error","chop","matches","groupIndex","is_default_enabled","is_backspace_disabled","backspaceLongPress","PageError","classNameImage","image_url","alt","has_html","dangerouslySetInnerHTML","__html","PageOverlay","onClickClose","page_overlay_ref","el_page_overlay","back","PasswordInput","show_password","togglePasswordVisibility","input","PasswordMeter","zxcvbn","score","feedback","width_scale","has_warning","warning","withinZeroAndOne","propName","componentName","ProgressBar","ProgressIndicator","total","RadioGroup","selected_option","selected","SelectNative","list_obj","use_text","opt","option","SendEmailTemplate","resend_interval","is_email_not_received_clicked","resend_timeout","onClickEmailNotReceived","onClickResendEmail","startCountdownTimer","onClickSendEmail","prevState","is_resend_btn_disabled","resend_email_btn_text","txt_resend_in","txt_resend","subtitle","lbl_no_receive","SwipeableWrapper","swipedLeft","swipedRight","childrenWithWrapperDiv","RelativeDatepicker","hidden_input_ref","min_date_moment","max_date_moment","click","Head","align","fixed","Row","has_hover","Table","scroll_width","scroll_height","Tab","header_content","setActiveLineStyle","active_tab_ref","is_label_hidden","bottom","header_fit_content","Tabs","onTabItemClick","tabs_wrapper_ref","tabs_wrapper_bounds","active_tab_bounds","active_line_style","setActiveTabRef","setTabsWrapperRef","should_delay_render","center","fit_content","single_tab_has_no_label","tab_width","ToastError","setVisible","timeout_id","ToggleSwitch","is_enabled","handleToggle","classNameButton","TickPicker","min_value","max_value","singular_label","plural_label","parseInt","tick_value","setTickValue","handleDecrease","handleIncrease","throttledSwipeHandler","throttle","dir","trailing","leading","onSwiping","padStart","Tick","is_on","TickProgress","rows","gridTemplateRows","gridTemplateColumns","Oval","Timeline","UILoader","classNameBlock","block_class","loading_class","strokeMiterlimit","Content","is_routed","selected_item","TabContent","side_note","setSideNote","component_icon","has_side_note","VerticalTabContentContainer","action_bar","action_bar_classname","is_floating","tab_container_classname","HeaderIcon","VerticalTabHeader","handleClick","VerticalTabHeaderGroup","show_items","setShowItems","VerticalTabWrapper","VerticalTabHeaderTitle","header_title","VerticalTabHeaders","headers","should_skip_animation","onTabChange","repositionActiveHighlighter","offset_top","item_groups","subitems","header_idx","calculated_offset","selected_el","extra_offset","VerticalTabLayout","is_full_width","VerticalTab","setSelectedIndex","selected_index","current_path","vertical_tab_index","setVerticalTabIndex","changeSelected","list_groups","is_sidebar_enabled","header_classname","tab_headers_note","ContentContainer","HeaderGroup","Headers","HeaderTitle","Layout","Wrapper","debounced_calls","requestToKey","response_promise","promiseRejectToResolve","request_copy","req_id","pre_build_dvrs","validRequired","confirmRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","getPreBuildDVRs","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","isMoreThanMax","address","permitted_characters","barrier","compare","general","letter_symbol","not_equal","value_one","value_two","password","phone","postcode","regular","confirm","signup_token","tax_id","interval_id","refreshOnUpdate","swRegistrationObject","onupdatefound","updatingWorker","installing","onstatechange","serviceWorker","controller","SmartTraderIFrame","display","visibility","sandbox","ErrorBoundary","componentDidCatch","info","root_store","hasError","RedirectNoticeModal","is_eu","dialog_status","setDialogStatus","external_link","setExternalLink","onClickExternalLink","destination","isThirdPartyLink","CookieBanner","onAccept","onDecline","is_dark_mode","tracking_status_cookie","AppContents","identifyEvent","is_app_disabled","is_cashier_visible","is_eu_country","is_logging_in","is_mt5_page","is_positions_drawer_on","is_route_modal_on","pageView","show_cookie_banner","setShowCookieBanner","is_gtm_tracking","setIsGtmTracking","tracking_status","sameSite","pwa_prompt_event","segment","is_dark_mode_on","NetworkStatus","network_status_element","network_status","GoToDeriv","EndpointNote","ToggleFullScreen","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","ThemeSetting","LanguageSettingContainer","ModalContent","settings_extension","classNameHeader","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","HelpCentre","aria-label","ResponsibleTrading","AccountLimits","styles","MLTRegulatoryInformation","MXRegulatoryInformation","RegulatoryInformation","standpoint","should_show_modal","showModal","iom","is_mobile_drawer","is_livechat_interactive","setLiveChatInteractive","LiveChatWidget","first_name","last_name","on","session_variables","LC_API","open_chat_window","gmt_time","FooterIconSeparator","footer_extension","is_settings_modal_on","toggleSettingsModal","MenuLinks","login_only","link_to","logo","image","LoginButton","SignupButton","EmptyNotification","NotificationsDialog","handleClickOutside","notifications_toggle_btn","toggleDialog","passive","notifications_list_el","notifications","notifications_dialog_el","ToggleNotificationsDrawer","tooltip_message","notifications_toggler_el","AccountInfo","AccountActions","is_acc_switcher_disabled","is_acc_switcher_on","is_notifications_visible","notifications_count","acc_switcher_disabled_message","onClickDeposit","toggleAccountsDialog","toggleNotifications","is_dialog_on","PlatformBox","PlatformDropdown","closeDrawer","platform_config","platform_dropdown","platform_configs","PlatformSwitcher","mountOnEnter","ModalLoginPrompt","splitValidationResultTypes","warnings","getLocation","location_list","location_obj","AddressDetails","onSave","handleValidate","has_fetched_states_list","address_state_to_display","is_mounted","fetchStatesList","states_list","address_state","padding_bottom","validateOnMount","actions","setSubmitting","handleSubmit","setFieldValue","paddingBottom","is_svg","should_render_address_state","is_gb_residence","getDefaultFields","schema","output","entries","filterByLandingCompany","field_name","fromEntries","supported_in","generateValidationFunction","rules_schema","rules","rule","checkForErrors","getValidationFunction","addressDetailsConfig","upgrade_info","real_account_signup_target","address_line_1","address_line_2","address_city","address_postcode","max_number","interpolation","escapeValue","address_details_config","form_value","transformConfig","transformForResidence","RadioButton","RadioButtonGroup","is_title_enabled","is_fiat","Hr","reorderFiatCurrencies","sort","CurrencySelector","fiat_currencies","crypto_currencies","next_props","next_state","legal_allowed_currencies","crypto","fiat","has_currency","has_real_account","controls","currencies","currencies_list","has_active_real_account","upgradeable_currencies","selectable_currencies","currency_selector_config","setTouched","date_of_birth","optional","closeTooltipOnScroll","is_tin_popover_open","is_tax_residence_popover_open","salutation_list","place_of_birth","disabled_items","citizen","tax_residence","account_opening_reason_list","account_opening_reason","personalDetailsConfig","residence_list","salutation","tax_identification_number","tax_regex","res","tin_format","tax_identification_confirm","personal_details_config","PersonalDetails","CheckboxField","BrokerSpecificMessage","SVGDescription","IOMDescription","MaltaDescription","MaltaInvestDescription","SharedMessage","TermsOfUse","agreed_tos","agreed_tnc","terms_of_use_config","termsOfUseConfig","EmploymentStatus","employment_status_enum","employment_status","IncomeSource","income_source_enum","income_source","EmploymentIndustry","employment_industry_enum","employment_industry","Occupation","occupation_enum","occupation","SourceOfWealth","source_of_wealth_enum","source_of_wealth","EducationLevel","education_level_enum","education_level","NetIncome","net_income_enum","net_income","EstimatedWorth","estimated_worth_enum","estimated_worth","AccountTurnover","account_turnover_enum","account_turnover","ForexTradingExperience","forex_trading_experience_enum","forex_trading_experience","ForexTradingFrequency","forex_trading_frequency_enum","forex_trading_frequency","BinaryOptionsTradingExperience","binary_options_trading_experience_enum","binary_options_trading_experience","BinaryOptionsTradingFrequency","binary_options_trading_frequency_enum","binary_options_trading_frequency","CFDTradingExperience","cfd_trading_experience_enum","cfd_trading_experience","CFDTradingFrequency","cfd_trading_frequency_enum","cfd_trading_frequency","OtherInstrumentsTradingExperience","other_instruments_trading_experience_enum","other_instruments_trading_experience","OtherInstrumentsTradingFrequency","other_instruments_trading_frequency_enum","other_instruments_trading_frequency","shared_props","FinancialDetails","financial_details_config","financialDetailsConfig","SetCurrencyHeader","has_target","step_title","AccountWizard","fetchFromStorage","stored_items","getCountryCode","phone_idd","clearError","getCurrent","state_index","getFinishedComponent","finished","hasMoreSteps","onLoading","createRealAccount","submitForm","form_values","realAccountSignup","saveFormData","cloned_items","getPropsForChild","mounted","done","makeCancellablePromise","shouldShowFinancialDetails","previous_data","onFinishSuccess","echo_req","onError","BodyComponent","FinishedModalItem","refreshNotifications","heading","subheading","AddCryptoCurrency","available_fiat_currencies","canAddCrypto","available_crypto_currencies","can_add_fiat","has_fiat","ChangeAccountCurrency","AddOrManageAccounts","manageOrChangeAccount","setCurrency","onSuccessSetAccountCurrency","previous_currency","createCryptoAccount","onSuccessAddCurrency","should_hide_crypto","no_crypto_available","can_change_fiat_currency","current_currency_type","fiat_currency","current_fiat_currency","FinishedSetCurrency","prev","IconPrevCurrency","IconNextCurrency","IconWon","SignupErrorContent","Heading","Message","ErrorCTA","IOMHeading","DialogHeading","DialogMessage","DialogPrimaryButton","closeModalAndOpenCashier","closeModalAndOpenPOI","closeModalAndOpenPOA","getActionButton","DialogDismissButton","closeModal","switchToVirtual","getDismissButton","DialogButtons","MainIcon","Checkmark","Warning","Danger","StatusDialogContainer","icon_size","has_submit","icon_type","text_submit","closeRealAccountSignup","switchAccount","virtual_account_loginid","LoadingModal","WizardHeading","RealAccountSignup","showStatusDialog","setParams","active_modal_index","closeModalThenOpenCashier","showSetCurrencySuccess","current_currency","showLoadingModal","cacheFormValues","showErrorModal","error_code","openPersonalDetails","modal_content","state_value","is_real_acc_signup_on","Title","modal_height","is_manage_target","text_cancel","closeSignupAndOpenCashier","setRealAccountSignupParams","real_account_signup","SetAccountCurrencyModal","toggleSetCurrencyModal","is_set_currency_modal_visible","NewVersionNotification","onUpdate","removeUpdateListener","addUpdateListener","clientNotifications","toggleNotificationsModal","excluded_until","exclusion_end","authenticate","cashier_locked","withdrawal_locked_review","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","max_turnover_limit_not_set","mf_retail","risk","tax","tnc","required_fields","you_are_offline","password_changed","needs_poi","needs_poa","needs_poi_virtual","first_switchable_real_loginid","needs_poa_virtual","poa_expired","poa_rejected","poi_expired","new_version_available","should_hide_close_btn","timeoutMessage","checkAccountStatus","addNotificationMessage","authentication","identity","needs_verification","prompt_client_to_authenticate","validations","stats","authenticated","professional","allow_document_upload","addVerificationNotifications","is_mf_retail","should_show_max_turnover","needs_authentication","has_risk_assessment","should_authenticate","doc_is_under_review","excluded_notifications","handleClientNotifications","has_missing_required_field","necessary_withdrawal_fields","necessary_signup_fields","required_settings_fields","getRequiredFields","hasMissingRequiredField","CashierNotifications","p2p_notification_count","header_links","MenuLink","suffix_icon","onClickLink","ToggleMenuDrawer","is_submenu_expanded","onToggleSubmenu","getFilteredRoutesConfig","all_routes_config","routes_to_filter","subroutes_config","flatMap","getRoutesWithSubMenu","route_config","needs_financial_assessment","has_subroutes","is_payment_agent_visible","is_payment_agent_transfer_visible","is_p2p_visible","is_onramp_tab_visible","subroute","primary_routes_config","secondary_routes_config","processRoutes","primary_routes","icon_class","platform_switcher","toggleTheme","logoutClient","toggle_menu_drawer_ref","addUpdateNotification","header_extension","is_mt5_allowed","setDarkMode","filterPlatformsForClients","account_switcher_disabled_message","is_account_switcher_disabled","is_accounts_switcher_on","CloseButton","notification_order","icon_types","danger","success","contract_sold","types","sortNotifications","NotificationStatusIcons","class_suffix","Notification","removeNotificationMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","AppNotificationMessages","parentElement","bounds","allowed_on_mobile","marked_notifications","notification_messages","notification","portal","DenialOfServiceModal","MT5AccountNeededModal","account_needed_modal_props","target_label","target_dmt5_label","deriv_account","dmt5_account","required_account","is_account_needed_modal_on","closeAccountNeededModal","AccountSignupModal","ResetPasswordModal","SetResidenceModal","RealityCheckModal","AccountTypesModal","is_account_types_modal_visible","is_set_residence_modal_visible","is_denial_of_service_modal_visible","is_client_allowed_to_visit","url_action_param","ComponentToLoad","denialOfServiceOnConfirm","trade_link","Routes","unlisten_to_change","initial_route","setInitialRouteHistoryItem","listen","route_to","addRouteHistoryItem","setAppRouterHistory","MobxPropTypes","objectOrObservableObject","updateStore","NetworkMonitor","Errors","attribute","Validator","error_count","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","has_local_or_session_storage","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","local_storage_snapshot","session_storage_snapshot","validation_errors","addRule","intercept","change","validateProperty","newValue","trigger","inputs","isPassed","setValidationErrorMessages","switch_broadcast","switchEndSignal","onSwitchAccount","pre_switch_broadcast","setPreSwitchAccount","onPreSwitchAccount","has_logged_out","setLogout","onLogout","initialized_broadcast","setInitialized","onClientInit","is_network_online","has_real_account_signup_ended","setRealAccountSignupEnd","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","reactions","act","partial_fetch_time","observable","eu_shortcode_regex","eu_excluded_regex","ClientStore","is_mt5_account_list_updated","should_have_real_account","showAccountTypesModalForEuropean","has_any_real_account","toggleAccountTypesModal","syncWithSmartTrader","getLimits","runInAction","api_initial_load_error","get_limits","cur","isCrypto","selectCurrency","session_start","valueOf","landing_company_name","updateAccountList","account_list","user_id","local_currency_config","local_currencies","client_accounts","oauth_token","client_id","authorize_response","new_data","landing_company_fullname","setLoginInformation","setSwitched","is_maltainvest_account","accept_risk","accountRealReaction","new_account","removeNotificationByKey","crr","param_to_set","value_to_set","setIsLoggingIn","removeNotifications","removeAllNotificationMessages","setHasMissingRequiredField","login_new_user","setUserLogin","setDeviceData","setLoginId","setAccounts","responseStatement","toggleSetResidenceModal","resetMt5AccountListPopulation","responseWebsiteStatus","registerReactions","is_populating_mt5_account_list","is_persistent","setRealityCheck","has_reality_check","reality_check_duration","reality_check_timeout","setRealityCheckDuration","switched","getAccount","is_pre_switch","broadcastAccountChange","all_loginids","isUnableToFindLoginId","handleNotFoundLoginId","switchAccountHandler","from_login_id","resetLocalStorageValues","getToken","setLoginFlag","account_id","total_real","total_mt5","has_mt5","obj_total_balance","amount_real","amount_mt5","selected_currency","is_initialized","cleanupRealityCheck","logout_promise","cleanUp","is_logged_out","obj_params","active_loginid","map_names","is_allowed_real","acct1","search_params","account_key","search_param_without_account","replaceState","is_client_logging_in","token1","canStoreClientAccounts","storeClientAccounts","is_ready_to_process","is_cross_checked","acct","affiliate_token","gclid_url","utm_campaign","utm_medium","utm_source","setSettings","signup","switchToNewlyCreatedAccount","new_user_login","curr1","residenceList","setResidenceList","residence_list_response","statesList","display_login","has_changeable_field","changeable","changeable_fields","only_before_auth","iframe_window","origin","contentWindow","postMessage","is_reality_check_dismissed","reality_check_dur","clearRealityCheckTimeout","setVisibilityRealityCheck","reality_check_dismissed","active_accounts","acc","has_mt5_login","company","getAccountInfo","default_currency","status_name","valid_login_ids_regex","financial_shortcode","gaming_shortcode","is_uk","svg","getClientAccountType","clients_country","isEuCountry","reset_password","payment_withdraw","payment_agent_withdraw","computed","CommonStore","ext_url","decodeURI","searchParams","is_external","is_socket_opened","should_broadcast_account_change","was_socket_opened","broadcastAccountChangeAfterAuthorize","ui_store","deposit_url","withdraw_url","services_error","app_router","router_action","check_existing","additional_platform_path","route_to_item_idx","route_to_item","GTMStore","is_gtm_applicable","accountSwitcherListener","gtm_object","common_variables","dataLayer","extra_data","moment_now","storage_key","gtm_transactions","transactions_arr","transaction_id","bom_account_type","bom_today","transaction_time","login_event","is_new_account","visitorId","country_abbrev","today","bom_date_joined","acc_type","event_name","userId","SegmentStore","is_applicable","has_identified","current_page","analytics","page","identify","OnRampStore","deposit_address_ref","onramp_providers","default_from_currency","from_currencies","widget_script_dependencies","getWidgetHtml","payment_icons","to_currencies","disposeThirdPartyJsReaction","selected_provider","script_name","el_script","range","createRange","selectNodeContents","selections","getSelection","removeAllRanges","addRange","clipboard","writeText","deposit_address","setIsDepositAddressPopoverOpen","should_show_widget","should_allow_empty_address","setIsDepositAddressLoading","setApiError","deposit_address_interval","getDepositAddressFromApi","should_clear_interval","deposit","setDepositAddress","pollApiForDepositAddress","setDepositAddressRef","setSelectedProvider","setShouldShowWidget","api_error","copy_icon_ref","is_deposit_address_loading","is_onramp_modal_open","is_deposit_address_popover_open","setIsOnRampModalOpen","should_show","filtered_onramp_providers","should_show_dialog","bank_default_option","hasTransferNotAllowedLoginid","getSelectedError","is_from_account","Config","container","is_session_timeout","onIframeLoaded","timeout_session","ConfigError","ConfigPaymentAgent","ConfigVerification","ConfigPaymentAgentTransfer","ConfigAccountTransfer","accounts_list","selected_from","selected_to","is_button_clicked","timeout_button","CashierStore","active_container","onRemount","is_populating_values","containers","withdraw","map_action","payment_agent","onramp","requestTransferBetweenAccounts","setErrorMessage","account_transfer","setReceiptTransfer","setBalanceByLoginId","setBalanceSelectedFrom","setBalanceSelectedTo","mt5_group","setIsTransferSuccessful","should_remount","onMountCommon","setPaymentAgentList","filterPaymentAgentList","payment_agent_transfer","is_payment_agent","checkIsPaymentAgent","sortAccountsTransfer","endsWith","routeTo","advertiser_info","advertiser_error","is_p2p_advertiser","setIsP2pVisible","cashier_route_tab_index","notification_count","current_container","is_tnc_needed","setContainerHeight","setLoading","checkIframeLoaded","setIframeUrl","response_cashier","handleCashierError","setSessionTimeout","clearTimeoutCashierUrl","clearVerification","setTimeoutCashierUrl","removeOnIframeLoaded","iframe_url","iframe_height","onClickButton","is_show_full_page","fields","details","is_ask_uk_funds_protection","is_self_exclusion_max_turnover_set","is_ask_authentication","is_ask_financial_risk_approval","is_cashier_forward_error","config_name","ukgc_funds_protection","setErrorConfig","is_session_time_out","verification","is_email_sent","is_resend_clicked","clearTimeoutVerification","setVerificationButtonClicked","withdrawal_type","response_verify_email","setVerificationEmailSent","setTimeoutVerification","setCountDownResendVerification","sendVerificationEmail","setVerificationResendTimeout","setVerificationResendClicked","onMountPaymentAgentList","bank","supported_banks","supported_bank","pa_list","getPaymentAgentList","payment_agent_list","telephone","addSupportedBank","sortSupportedBanks","filtered_list","selected_bank","onMountPaymentAgentWithdraw","setIsWithdraw","setIsWithdrawSuccessful","setReceipt","agents","addPaymentAgent","is_withdraw","is_try_withdraw_successful","is_withdraw_successful","payment_agent_name","amount_transferred","payment_agent_email","payment_agent_id","payment_agent_phone","payment_agent_url","receipt","max_withdrawal","selected_agent","agent","setConfirmation","setIsTryWithdrawSuccessful","resetPaymentAgent","onMountAccountTransfer","has_no_accounts_balance","setHasNoAccountsBalance","canDoAccountTransfer","setTransferFee","setMinimumFee","setTransferLimit","can_transfer","setHasNoAccount","has_no_account","minimum_fee","transfer_limit","response_accounts","a_is_mt","b_is_mt","a_is_crypto","b_is_crypto","a_is_fiat","b_is_fiat","arr_accounts","setSelectedTo","obj_values","getMT5AccountDisplay","is_mt","mt_icon","setSelectedFrom","is_try_transfer_successful","is_transfer_successful","onChangeTransferTo","first_non_mt","first_fiat","onMountPaymentAgentTransfer","current_payment_agent","getCurrentPaymentAgent","setMinMaxPaymentAgentTransfer","response_payment_agent","setIsPaymentAgent","is_authenticated_payment_agent","client_name","is_authentication_needed","is_financial_account","is_financial_information_incomplete","is_trading_experience_incomplete","need_poi","need_authentication","is_withdrawal_lock","setConfirmationPaymentAgentTransfer","client_to_full_name","setIsTryTransferSuccessful","resetPaymentAgentTransfer","setReceiptPaymentAgentTransfer","ModulesStore","UIStore","getDurationFromUnit","handleResize","autorun","new_app_routing_history","notification_messages_ui","menu_items","is_keyboard_active","screen_height","purchase_states","el_purchase_buttons","is_default","is_chart_layout_default","is_chart_countdown_visible","modal_index","resetRealAccountSignupParams","is_account_settings_visible","is_reports_visible","is_services_error_visible","notifications_array","updateNotifications","markNotificationMessage","current_message","should_close_persistent","notifs","has_only_forward_starting_contracts","push_notifications","state_change","is_unsupported_contract_modal_visible","is_account_signup_modal_visible","should_show_cancellation_warning","is_history_tab_active","is_top_up_virtual_open","is_top_up_virtual_success","is_reset_password_modal_visible","has_ended","current_focus","should_show_toast_error","msg","mobile_toast_timeout","mobile_toast_error","tab_index","reports_route_tab_index","RootStore","configure","enforceActions","initStore","evt","hidden","setStorageEvents","App","base","has_base","el_landscape_blocker","setIsNativepickerVisible","onFocusOut","platform_passthrough","client_base","basename","wrapper","sw_url","register","registration","update","installingWorker","new_version_received","Event","dispatchEvent","static_hash","eu_countries","to_replace","tag_name","attr","textContent","html","getStaticHash","copyToClipboard","display_text","arguments","u","Fragment","data_obj","msg_type_mapping","isEmptyValue","reloadDataObj","getData","expire","active_symbols","contracts_for","exchange_rates","trading_times","candles","is_empty_data","response_data","subscription","end","is_sold","cached_response","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","response_obj","should_match_all","data_key"],"mappings":"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","file":"js/core.main.12a89e23c1f1a4929251.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\tvar prefetchChunks = data[3] || [];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\tdeferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\tif(deferredModules.length === 0) {\n \t\t\t// chunk prefetching for javascript\n \t\t\tdeferredPrefetch.forEach(function(chunkId) {\n \t\t\t\tif(installedChunks[chunkId] === undefined) {\n \t\t\t\t\tinstalledChunks[chunkId] = null;\n \t\t\t\t\tvar link = document.createElement('link');\n\n \t\t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\t\tlink.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t\t}\n \t\t\t\t\tlink.rel = \"prefetch\";\n \t\t\t\t\tlink.as = \"script\";\n \t\t\t\t\tlink.href = jsonpScriptSrc(chunkId);\n \t\t\t\t\tdocument.head.appendChild(link);\n \t\t\t\t}\n \t\t\t});\n \t\t\tdeferredPrefetch.length = 0;\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [], deferredPrefetch = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/core.\" + ({\"404\":\"404\",\"account\":\"account\",\"account-info\":\"account-info\",\"account-signup-modal\":\"account-signup-modal\",\"account-types-modal\":\"account-types-modal\",\"complaints-policy\":\"complaints-policy\",\"reality-check-modal\":\"reality-check-modal\",\"reset-password-modal\":\"reset-password-modal\",\"set-residence-modal\":\"set-residence-modal\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"vendors~bot~trader\":\"vendors~bot~trader\",\"trader\":\"trader\",\"vendors~bot\":\"vendors~bot\",\"bot\":\"bot\",\"vendors~cashier\":\"vendors~cashier\",\"cashier\":\"cashier\"}[chunkId]||chunkId) + \".\" + {\"404\":\"14f16c54ad790c36a0f5\",\"account\":\"4f9a4f67c62d0df46db2\",\"account-info\":\"1c8cabef58f0b0362af5\",\"account-signup-modal\":\"a962a8fc446c08af336d\",\"account-types-modal\":\"7fd5ea0d3302f16c3190\",\"complaints-policy\":\"f30518ccdccd1a712e55\",\"reality-check-modal\":\"56da764a8c90c2f81410\",\"reset-password-modal\":\"3f3782cf2fe463b86903\",\"set-residence-modal\":\"920d1001c3e68cd37441\",\"settings-language\":\"db84814d4c2c40b830e4\",\"settings-theme\":\"702922a457a53de98914\",\"vendors~bot~trader\":\"723a95d120e57e4a32fb\",\"trader\":\"3585138771853a8887b7\",\"vendors~bot\":\"935a0ba3407634cfc28c\",\"bot\":\"ee91e55a7d54cab529d2\",\"vendors~cashier\":\"0afb0315df26053ecd32\",\"cashier\":\"fb293eee5ce02287499a\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"account-signup-modal\":1,\"account-types-modal\":1,\"complaints-policy\":1,\"set-residence-modal\":1,\"cashier\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/core.\" + ({\"404\":\"404\",\"account\":\"account\",\"account-info\":\"account-info\",\"account-signup-modal\":\"account-signup-modal\",\"account-types-modal\":\"account-types-modal\",\"complaints-policy\":\"complaints-policy\",\"reality-check-modal\":\"reality-check-modal\",\"reset-password-modal\":\"reset-password-modal\",\"set-residence-modal\":\"set-residence-modal\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"vendors~bot~trader\":\"vendors~bot~trader\",\"trader\":\"trader\",\"vendors~bot\":\"vendors~bot\",\"bot\":\"bot\",\"vendors~cashier\":\"vendors~cashier\",\"cashier\":\"cashier\"}[chunkId]||chunkId) + \".\" + {\"404\":\"31d6cfe0d16ae931b73c\",\"account\":\"31d6cfe0d16ae931b73c\",\"account-info\":\"31d6cfe0d16ae931b73c\",\"account-signup-modal\":\"6309c4647cca82a0b940\",\"account-types-modal\":\"b868e08753c07c44ce95\",\"complaints-policy\":\"b60b13811d71892e8a56\",\"reality-check-modal\":\"31d6cfe0d16ae931b73c\",\"reset-password-modal\":\"31d6cfe0d16ae931b73c\",\"set-residence-modal\":\"fabcd5da896aada2e3a0\",\"settings-language\":\"31d6cfe0d16ae931b73c\",\"settings-theme\":\"31d6cfe0d16ae931b73c\",\"vendors~bot~trader\":\"31d6cfe0d16ae931b73c\",\"trader\":\"31d6cfe0d16ae931b73c\",\"vendors~bot\":\"31d6cfe0d16ae931b73c\",\"bot\":\"31d6cfe0d16ae931b73c\",\"vendors~cashier\":\"31d6cfe0d16ae931b73c\",\"cashier\":\"ba97c96509256294310f\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \tvar startupResult = (function() {\n \t// add entry module to deferred list\n \tdeferredModules.push([657,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n \t})();\n\n \twebpackJsonpCallback([[], {}, 0, [\"settings-language\",\"settings-theme\"]]);\n \treturn startupResult;\n","import { useObserver } from 'mobx-react';\nimport React from 'react';\n\nconst isClassComponent = Component =>\n    !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n\nexport const MobxContent = React.createContext(null);\n\nfunction injectStorePropsToComponent(propsToSelectFn, BaseComponent) {\n    const component = own_props => {\n        const store = React.useContext(MobxContent);\n\n        if (!isClassComponent(BaseComponent)) {\n            return useObserver(() => BaseComponent({ ...own_props, ...propsToSelectFn(store, own_props) }));\n        }\n\n        const FunctionalWrapperComponent = props => <BaseComponent {...props} />;\n        return useObserver(() => FunctionalWrapperComponent({ ...own_props, ...propsToSelectFn(store, own_props) }));\n    };\n\n    component.displayName = BaseComponent.name;\n    return component;\n}\n\nexport const MobxContentProvider = ({ store, children }) => {\n    return <MobxContent.Provider value={{ ...store, mobxStores: store }}>{children}</MobxContent.Provider>;\n};\n\nexport const connect = propsToSelectFn => Component => injectStorePropsToComponent(propsToSelectFn, Component);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from '@deriv/components';\n\nconst handleLoading = props => {\n    // 200ms default\n    if (props.pastDelay) {\n        return <Loading />;\n    }\n    return null;\n};\n\nexport const makeLazyLoader = importFn => component_name =>\n    Loadable.Map({\n        loader: {\n            ComponentModule: importFn,\n        },\n        render(loaded, props) {\n            const ComponentLazy = component_name\n                ? loaded.ComponentModule.default[component_name]\n                : loaded.ComponentModule.default;\n            return <ComponentLazy {...props} />;\n        },\n        loading: handleLoading,\n    });\n","import PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport Login from '_common/base/login';\n\nconst Redirect = ({\n    history,\n    setVerificationCode,\n    fetchResidenceList,\n    openRealAccountSignup,\n    toggleAccountSignupModal,\n    toggleResetPasswordModal,\n}) => {\n    const url_query_string = window.location.search;\n    const url_params = new URLSearchParams(url_query_string);\n    let redirected_to_route = false;\n\n    setVerificationCode(url_params.get('code'), url_params.get('action'));\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'reset_password': {\n            toggleResetPasswordModal(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            history.push(routes.cashier_withdrawal);\n            redirected_to_route = true;\n            break;\n        }\n        case 'payment_agent_withdraw': {\n            history.push(routes.cashier_pa);\n            redirected_to_route = true;\n            break;\n        }\n        case 'add_account': {\n            fetchResidenceList().then(openRealAccountSignup);\n\n            const ext_platform_url = url_params.get('ext_platform_url');\n            if (ext_platform_url) {\n                history.push(`${routes.root}?ext_platform_url=${ext_platform_url}`);\n                redirected_to_route = true;\n            }\n            break;\n        }\n        case 'verification': {\n            sessionStorage.setItem('redirect_url', `${routes.cashier_p2p}#verification`);\n            window.location.href = Login.loginUrl();\n            break;\n        }\n        case 'mt5_password_reset':\n            history.push(`${routes.mt5}?code=${url_params.get('code')}#reset-password`);\n            redirected_to_route = true;\n            break;\n        default:\n            break;\n    }\n\n    if (!redirected_to_route) {\n        history.push({\n            pathname: routes.root,\n            search: url_query_string,\n        });\n    }\n\n    return null;\n};\n\nRedirect.propTypes = {\n    getServerTime: PropTypes.object,\n    history: PropTypes.object,\n    setVerificationCode: PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleResetPasswordModal: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(({ client, ui }) => ({\n        setVerificationCode: client.setVerificationCode,\n        fetchResidenceList: client.fetchResidenceList,\n        openRealAccountSignup: ui.openRealAccountSignup,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleResetPasswordModal: ui.toggleResetPasswordModal,\n    }))(Redirect)\n);\n","import React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { Button, Input, Checkbox } from '@deriv/components';\nimport { getAppId, getSocketURL } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\n// eslint-disable-next-line import/extensions\n\nconst InputField = props => {\n    return (\n        <Field name={props.name}>\n            {({ field, form: { errors, touched } }) => (\n                <React.Fragment>\n                    <Input\n                        type='text'\n                        autoComplete='off'\n                        maxLength='30'\n                        error={touched[field.name] && errors[field.name]}\n                        {...field}\n                        {...props}\n                    />\n                </React.Fragment>\n            )}\n        </Field>\n    );\n};\n\n// doesn't need localization as it's for internal use\nconst Endpoint = ({ is_eu_enabled, toggleIsEuEnabled }) => (\n    <Formik\n        initialValues={{\n            app_id: getAppId(),\n            server: getSocketURL(),\n            is_eu_enabled,\n        }}\n        validate={values => {\n            const errors = {};\n\n            if (!values.app_id) {\n                errors.app_id = 'App ID is required.';\n            } else if (!/^\\d+$/.test(values.app_id)) {\n                errors.app_id = 'Please enter a valid app ID.';\n            }\n\n            if (!values.server) {\n                errors.server = 'Server is required.';\n            } else if (!/^[\\w|.]+$/.test(values.server)) {\n                errors.server = 'Please enter a valid server.';\n            }\n\n            return errors;\n        }}\n        onSubmit={values => {\n            localStorage.setItem('config.app_id', values.app_id);\n            localStorage.setItem('config.server_url', values.server);\n            localStorage.setItem('is_eu_enabled', values.is_eu_enabled);\n            toggleIsEuEnabled(values.is_eu_enabled);\n            location.reload();\n        }}\n    >\n        {({ errors, isSubmitting, touched, values, handleChange, setFieldTouched }) => (\n            <Form style={{ width: '30vw', minWidth: '300px', margin: '20vh auto' }}>\n                <h1\n                    style={{\n                        fontWeight: 'bold',\n                        color: 'var(--text-prominent)',\n                        marginBottom: '1.6rem',\n                        fontSize: 'var(--text-size-s)',\n                        lineHeight: 'normal',\n                    }}\n                >\n                    Change API endpoint\n                </h1>\n                <InputField name='server' label='Server' hint='e.g. frontend.binaryws.com' />\n                <InputField\n                    name='app_id'\n                    label='OAuth App ID'\n                    hint={\n                        <React.Fragment>\n                            Register an{' '}\n                            <a\n                                href='https://developers.binary.com/applications/'\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                app ID\n                            </a>{' '}\n                            to use the above server for logging in.\n                        </React.Fragment>\n                    }\n                />\n                <Field name='is_eu_enabled'>\n                    {({ field }) => (\n                        <div style={{ marginTop: '4.5rem', marginBottom: '1.6rem' }}>\n                            <Checkbox\n                                {...field}\n                                label='Enable EU'\n                                value={values.is_eu_enabled}\n                                onChange={e => {\n                                    handleChange(e);\n                                    setFieldTouched('is_eu_enabled', true);\n                                }}\n                            />\n                        </div>\n                    )}\n                </Field>\n                <Button\n                    type='submit'\n                    is_disabled={\n                        !!(\n                            (!touched.server && !touched.app_id && !touched.is_eu_enabled) ||\n                            !values.server ||\n                            !values.app_id ||\n                            errors.server ||\n                            errors.app_id ||\n                            isSubmitting\n                        )\n                    }\n                    text='Submit'\n                    primary\n                />\n                <span style={{ marginLeft: '1.6rem' }} />\n                <Button\n                    type='button'\n                    onClick={() => {\n                        localStorage.removeItem('config.app_id');\n                        localStorage.removeItem('config.server_url');\n                        localStorage.removeItem('is_eu_enabled');\n                        location.reload();\n                    }}\n                    text='Reset to original settings'\n                    secondary\n                />\n            </Form>\n        )}\n    </Formik>\n);\n\nexport default connect(({ ui }) => ({\n    is_eu_enabled: ui.is_eu_enabled,\n    toggleIsEuEnabled: ui.toggleIsEuEnabled,\n}))(Endpoint);\n","import React from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { getUrlBase, routes } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\nimport { makeLazyLoader } from '_common/lazy-load';\nimport { Redirect } from 'App/Containers/Redirect';\nimport Endpoint from 'Modules/Endpoint';\n\n// Error Routes\nconst Page404 = React.lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst Trader = React.lazy(() => {\n    const el_head = document.querySelector('head');\n    const el_main_css = document.createElement('link');\n    el_main_css.href = getUrlBase('/css/trader.main.css');\n    el_main_css.rel = 'stylesheet';\n    el_main_css.type = 'text/css';\n    el_head.appendChild(el_main_css);\n    // eslint-disable-next-line import/no-unresolved\n    return import(/* webpackChunkName: \"trader\" */ '@deriv/trader');\n});\n\nconst Account = React.lazy(() => {\n    const el_head = document.querySelector('head');\n    const el_main_css = document.createElement('link');\n    el_main_css.href = getUrlBase('/account/css/account.css');\n    el_main_css.rel = 'stylesheet';\n    el_main_css.type = 'text/css';\n    el_head.appendChild(el_main_css);\n    // eslint-disable-next-line import/no-unresolved\n    return import(/* webpackChunkName: \"account\" */ '@deriv/account');\n});\n\nconst Bot = React.lazy(() => {\n    // eslint-disable-next-line import/no-unresolved\n    return import(/* webpackChunkName: \"bot\" */ '@deriv/bot-web-ui');\n});\n\nconst modules = [\n    {\n        path: routes.bot,\n        component: Bot,\n        title: localize('Bot'),\n    },\n    {\n        path: routes.account_deactivated,\n        component: Account,\n        title: localize('Account deactivated'),\n    },\n    {\n        path: routes.account,\n        component: Account,\n        title: localize('Accounts Settings'),\n        icon_component: 'IcUserOutline',\n        is_authenticated: true,\n        // TODO: Revisit this workaround for subroutes [app-routing]\n        routes: [\n            {\n                title: localize('Profile'),\n                icon: 'IcUserOutline',\n                subroutes: [\n                    {\n                        path: routes.personal_details,\n                        component: Account,\n                        title: localize('Personal details'),\n                        default: true,\n                    },\n                    {\n                        path: routes.financial_assessment,\n                        component: Account,\n                        title: localize('Financial assessment'),\n                    },\n                ],\n            },\n            {\n                title: localize('Verification'),\n                icon: 'IcVerification',\n                subroutes: [\n                    {\n                        path: routes.proof_of_identity,\n                        component: Account,\n                        title: localize('Proof of identity'),\n                    },\n                    {\n                        path: routes.proof_of_address,\n                        component: Account,\n                        title: localize('Proof of address'),\n                    },\n                ],\n            },\n            {\n                title: localize('Security and safety'),\n                icon: 'IcSecurity',\n                subroutes: [\n                    {\n                        path: routes.deriv_password,\n                        component: Account,\n                        title: localize('Deriv password'),\n                    },\n                    {\n                        path: routes.self_exclusion,\n                        component: Account,\n                        title: localize('Self exclusion'),\n                    },\n                    {\n                        path: routes.account_limits,\n                        component: Account,\n                        title: localize('Account limits'),\n                    },\n                    {\n                        path: routes.login_history,\n                        component: Account,\n                        title: localize('Login history'),\n                    },\n                    {\n                        path: routes.api_token,\n                        component: Account,\n                        title: localize('API token'),\n                    },\n                    {\n                        path: routes.connected_apps,\n                        component: Account,\n                        title: localize('Connected apps'),\n                    },\n                    {\n                        path: routes.two_factor_authentication,\n                        component: Account,\n                        title: localize('Two-factor authentication'),\n                    },\n                    {\n                        path: routes.deactivate_account,\n                        component: Account,\n                        title: localize('Deactivate account'),\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        path: routes.root,\n        component: Trader,\n        title: localize('Trader'),\n        routes: [\n            { path: routes.mt5, component: Trader, title: localize('MT5'), is_authenticated: false },\n            {\n                path: routes.reports,\n                component: Trader,\n                title: localize('Reports'),\n                icon_component: 'IcReports',\n                is_authenticated: true,\n                routes: [\n                    {\n                        path: routes.positions,\n                        component: Trader,\n                        title: localize('Open positions'),\n                        icon_component: 'IcOpenPositions',\n                        default: true,\n                    },\n                    {\n                        path: routes.profit,\n                        component: Trader,\n                        title: localize('Profit table'),\n                        icon_component: 'IcProfitTable',\n                    },\n                    {\n                        path: routes.statement,\n                        component: Trader,\n                        title: localize('Statement'),\n                        icon_component: 'IcStatement',\n                    },\n                ],\n            },\n            { path: routes.contract, component: Trader, title: localize('Contract Details'), is_authenticated: true },\n            { path: routes.error404, component: Trader, title: localize('Error 404') },\n        ],\n    },\n];\n\nconst lazyLoadCashierComponent = makeLazyLoader(() => import(/* webpackChunkName: \"cashier\" */ 'Modules/Cashier'));\n\nconst lazyLoadComplaintsPolicy = makeLazyLoader(() =>\n    import(/* webpackChunkName: \"complaints-policy\" */ 'Modules/ComplaintsPolicy')\n);\n\n// Order matters\n// TODO: search tag: test-route-parent-info -> Enable test for getting route parent info when there are nested routes\nconst initRoutesConfig = () => [\n    { path: routes.index, component: RouterRedirect, title: '', to: routes.root },\n    { path: routes.endpoint, component: Endpoint, title: 'Endpoint' }, // doesn't need localization as it's for internal use\n    { path: routes.redirect, component: Redirect, title: localize('Redirect') },\n    {\n        path: routes.cashier,\n        component: lazyLoadCashierComponent('Cashier'),\n        is_modal: true,\n        is_authenticated: true,\n        title: localize('Cashier'),\n        icon_component: 'IcCashier',\n        routes: [\n            {\n                path: routes.cashier_deposit,\n                component: lazyLoadCashierComponent('Deposit'),\n                title: localize('Deposit'),\n                icon_component: 'IcWalletAdd',\n                default: true,\n            },\n            {\n                path: routes.cashier_withdrawal,\n                component: lazyLoadCashierComponent('Withdrawal'),\n                title: localize('Withdrawal'),\n                icon_component: 'IcWalletMinus',\n            },\n            {\n                path: routes.cashier_pa,\n                component: lazyLoadCashierComponent('PaymentAgent'),\n                title: localize('Payment agents'),\n                icon_component: 'IcPaymentAgent',\n            },\n            {\n                path: routes.cashier_acc_transfer,\n                component: lazyLoadCashierComponent('AccountTransfer'),\n                title: localize('Transfer'),\n                icon_component: 'IcAccountTransfer',\n            },\n            {\n                path: routes.cashier_pa_transfer,\n                component: lazyLoadCashierComponent('PaymentAgentTransfer'),\n                title: localize('Transfer to client'),\n                icon_component: 'IcAccountTransfer',\n            },\n            {\n                path: routes.cashier_p2p,\n                component: lazyLoadCashierComponent('P2PCashier'),\n                title: localize('DP2P'),\n                icon_component: 'IcDp2p',\n            },\n            {\n                id: 'gtm-onramp-tab',\n                path: routes.cashier_onramp,\n                component: lazyLoadCashierComponent('OnRamp'),\n                title: localize('Fiat onramp'),\n                icon_component: 'IcCashierOnRamp',\n            },\n        ],\n    },\n    {\n        path: routes.complaints_policy,\n        component: lazyLoadComplaintsPolicy(),\n        title: localize('Complaints policy'),\n        icon_component: 'IcComplaintsPolicy',\n        is_authenticated: true,\n    },\n    ...modules,\n];\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","const moment = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time, performance_request_time, get_time_interval, update_time_interval, onTimeUpdated;\n\n    const init = fncTimeUpdated => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = response => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = start_timestamp * 1000 + time_taken;\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => (server_time ? server_time.clone() : undefined);\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n","import Client from '_common/base/client_base';\nimport SocketCache from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS from './ws-methods';\n\nexport const requestLogout = () => WS.logout().then(doLogout);\n\nconst doLogout = response => {\n    if (response.logout !== 1) return undefined;\n    removeCookies('affiliate_token', 'affiliate_tracking', 'onfido_token');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    sessionStorage.clear();\n\n    return response;\n};\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nconst PlatformSwitcherLoader = ({ is_mobile, speed }) => {\n    const container_margin = 16;\n    const element_spacing = is_mobile ? 16 : 8;\n    const logo_size = is_mobile ? 40 : 32;\n    const name_height = 16;\n    const name_width = 90;\n    const name_x = container_margin + logo_size + element_spacing;\n    const name_y = is_mobile ? 12 : 8;\n    const container_width = container_margin * 2 + logo_size + element_spacing + name_width;\n    return (\n        <ContentLoader\n            height={logo_size}\n            width={container_width}\n            speed={speed}\n            primaryColor={'var(--general-section-1)'}\n            secondaryColor={'var(--general-hover)'}\n        >\n            <rect x={container_margin} y='0' rx='4' ry='4' width={logo_size} height={logo_size} />\n            <rect x={name_x} y={name_y} rx='4' ry='4' width={name_width} height={name_height} />\n        </ContentLoader>\n    );\n};\n\nexport { PlatformSwitcherLoader };\n","import { flow } from 'mobx';\nimport { getPropertyValue } from '@deriv/shared';\nimport Login from '_common/base/login';\nimport ServerTime from '_common/base/server_time';\nimport BinarySocket from '_common/base/socket_base';\nimport { State } from '_common/storage';\nimport { localize } from '@deriv/translations';\nimport WS from './ws-methods';\n\nlet client_store, common_store, gtm_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = is_ready => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    client_store.logout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(() => common_store.setServerTime(ServerTime.get()));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = response => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    client_store.logout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (\n                        response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list &&\n                        !client_store.is_switching\n                    ) {\n                        client_store.logout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    client_store.setAccountSettings(response.get_settings);\n                    gtm_store.eventHandler(response.get_settings);\n                }\n                break;\n            case 'get_account_status':\n                client_store.setAccountStatus(response.get_account_status);\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                gtm_store.pushTransactionData(response);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = residence => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalanceActiveAccount = flow(function*(obj_balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalanceActiveAccount(obj_balance);\n    });\n\n    const setBalanceOtherAccounts = obj_balance => {\n        client_store.setBalanceOtherAccounts(obj_balance);\n    };\n\n    const handleError = response => {\n        const msg_type = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n                // TODO: Remove condition checks below for WrongResponse once mt5 is more reliable\n                if (msg_type === 'mt5_login_list') {\n                    WS.authorized.mt5LoginList().then(mt5_list_response => {\n                        if (!mt5_list_response.error) {\n                            client_store.responseMt5LoginList(mt5_list_response);\n                            WS.balanceAll().then(balance_response => {\n                                if (!balance_response.error)\n                                    client_store.setBalanceOtherAccounts(balance_response.balance);\n                            });\n                        } else {\n                            client_store.resetMt5ListPopulatedState();\n                        }\n                    });\n                } else if (msg_type === 'balance') {\n                    WS.forgetAll('balance').then(subscribeBalances);\n                } else if (msg_type === 'get_account_status') {\n                    WS.authorized.getAccountStatus().then(account_status_response => {\n                        if (!account_status_response.error) {\n                            client_store.setAccountStatus(account_status_response.get_account_status);\n                        }\n                    });\n                } else if (msg_type === 'landing_company') {\n                    if (client_store.residence) {\n                        WS.authorized.landingCompany(client_store.residence).then(landing_company_response => {\n                            if (!landing_company_response.error) {\n                                client_store.responseLandingCompany(landing_company_response);\n                            }\n                        });\n                    }\n                }\n                break;\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, {\n                        message: localize('You have reached the rate limit of requests per second. Please try later.'),\n                    });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'InvalidToken':\n                if (['cashier', 'paymentagent_withdraw', 'mt5_password_reset'].includes(msg_type)) {\n                    return;\n                }\n                if (!['reset_password', 'new_account_virtual'].includes(msg_type)) {\n                    if (window.TrackJS) window.TrackJS.track('Custom InvalidToken error');\n                }\n                client_store.logout().then(() => {\n                    common_store.setError(true, {\n                        header: response.error.message,\n                        message: localize('Please Log in'),\n                        should_show_refresh: false,\n                        redirect_label: localize('Log in'),\n                        redirectOnClick: Login.redirectToLogin,\n                    });\n                });\n                break;\n            case 'AuthorizationRequired':\n                // if msg_type is coming from 'buy', behaviour should be handled in app itself.\n                if (msg_type === 'buy') {\n                    return;\n                }\n                client_store.logout();\n                break;\n            // no default\n        }\n    };\n\n    const init = store => {\n        client_store = store.client;\n        common_store = store.common;\n        gtm_store = store.gtm;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const subscribeBalances = () => {\n        WS.subscribeBalanceAll(ResponseHandlers.balanceOtherAccounts);\n        WS.subscribeBalanceActiveAccount(ResponseHandlers.balanceActiveAccount, client_store.loginid);\n    };\n\n    const authorizeAccount = response => {\n        client_store.responseAuthorize(response);\n        subscribeBalances();\n        WS.storage.getSettings();\n        WS.getAccountStatus();\n        WS.storage.payoutCurrencies();\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalanceActiveAccount,\n        setBalanceOtherAccounts,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = response => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balanceActiveAccount = response => {\n        if (!response.error) {\n            BinarySocketGeneral.setBalanceActiveAccount(response.balance);\n        }\n    };\n\n    const balanceOtherAccounts = response => {\n        if (!response.error) {\n            BinarySocketGeneral.setBalanceOtherAccounts(response.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balanceActiveAccount,\n        balanceOtherAccounts,\n    };\n})();\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","const Cookies = require('js-cookie');\nconst getPropertyValue = require('@deriv/shared').getPropertyValue;\nconst isEmptyObject = require('@deriv/shared').isEmptyObject;\n\nconst getObject = function(key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function(key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) {\n            /* do nothing */\n        }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = storage => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function(storage) {\n    this.storage = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') {\n            // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) {\n        this.storage.removeItem(key);\n    },\n    clear() {\n        this.storage.clear();\n    },\n};\n\nconst InScriptStore = function(object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach(key => {\n            delete this.store[key];\n        });\n    },\n    clear() {\n        this.store = {};\n    },\n    has(key) {\n        return this.get(key) !== undefined;\n    },\n    keys() {\n        return Object.keys(this.store);\n    },\n    call(key) {\n        if (typeof this.get(key) === 'function') this.get(key)();\n    },\n};\n\nconst State = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function(pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.prototype.getByMsgType = State.getResponse;\nState.set('response', {});\n\nconst CookieStorage = function(cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain =\n        cookie_domain ||\n        /* eslint-disable no-nested-ternary */\n        (hostname.includes('binary.sx') ? 'binary.sx' : 'deriv.com');\n    /* eslint-enable no-nested-ternary */\n    this.path = '/';\n    this.expires = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path: this.path,\n            domain: this.domain,\n            secure: !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path: this.path,\n            domain: this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path: this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain\n            .split('.')\n            .slice(-2)\n            .join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach(c => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore, LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","const DerivAPIBasic = require('@deriv/deriv-api/dist/DerivAPIBasic');\nconst getAppId = require('@deriv/shared').getAppId;\nconst getSocketURL = require('@deriv/shared').getSocketURL;\nconst cloneObject = require('@deriv/shared').cloneObject;\nconst getPropertyValue = require('@deriv/shared').getPropertyValue;\nconst { getLanguage } = require('@deriv/translations');\nconst website_name = require('App/Constants/app-config').website_name;\nconst ClientBase = require('./client_base');\nconst SocketCache = require('./socket_cache');\nconst APIMiddleware = require('./api_middleware');\nconst { State } = require('../storage');\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let deriv_api, binary_socket;\n\n    let config = {};\n    let wrong_app_id = 0;\n    let is_available = true;\n    let is_disconnect_called = false;\n    let is_connected_before = false;\n\n    const getSocketUrl = () =>\n        `wss://${getSocketURL()}/websockets/v3?app_id=${getAppId()}&l=${getLanguage()}&brand=${website_name.toLowerCase()}`;\n\n    const timeouts = {};\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach(key => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const close = () => {\n        binary_socket.close();\n    };\n\n    const closeAndOpenNewConnection = token => {\n        close();\n        init({ config, is_switching_socket: true, token });\n    };\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const init = ({ options, is_switching_socket, token }) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config = options;\n        }\n        clearTimeouts();\n\n        if (!is_switching_socket) {\n            config.wsEvent('init');\n        }\n\n        if (isClose()) {\n            is_disconnect_called = false;\n            binary_socket = new WebSocket(getSocketUrl());\n            deriv_api = new DerivAPIBasic({\n                connection: binary_socket,\n                storage: SocketCache,\n                middleware: new APIMiddleware(config),\n            });\n        }\n\n        deriv_api.onOpen().subscribe(() => {\n            config.wsEvent('open');\n\n            wait('website_status');\n\n            if (ClientBase.isLoggedIn()) {\n                // ClientBase is not up to date after first load\n                // TODO: remove this once ClientBase has been migrated to client-store\n                const authorize_token = token || ClientBase.get('token');\n                deriv_api.authorize(authorize_token);\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        });\n\n        deriv_api.onMessage().subscribe(({ data: response }) => {\n            const msg_type = response.msg_type;\n            State.set(['response', msg_type], cloneObject(response));\n\n            config.wsEvent('message');\n\n            if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                wrong_app_id = getAppId();\n            }\n\n            if (typeof config.onMessage === 'function') {\n                config.onMessage(response);\n            }\n        });\n\n        deriv_api.onClose().subscribe(() => {\n            clearTimeouts();\n\n            if (!is_switching_socket) {\n                config.wsEvent('close');\n            }\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        });\n    };\n\n    const availability = status => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    const excludeAuthorize = type => !(type === 'authorize' && !ClientBase.isLoggedIn());\n\n    const wait = (...responses) => deriv_api.expectResponse(...responses.filter(excludeAuthorize));\n\n    const subscribe = (request, cb) => deriv_api.subscribe(request).subscribe(cb, cb); // Delegate error handling to the callback\n\n    const balanceAll = () => deriv_api.send({ balance: 1, account: 'all' });\n\n    const subscribeBalanceAll = cb => subscribe({ balance: 1, account: 'all' }, cb);\n\n    const subscribeBalanceActiveAccount = (cb, account) => subscribe({ balance: 1, account }, cb);\n\n    const subscribeProposal = (req, cb) => subscribe({ proposal: 1, ...req }, cb);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb) =>\n        subscribe({ proposal_open_contract: 1, ...(contract_id && { contract_id }) }, cb);\n\n    const subscribeTicks = (symbol, cb) => subscribe({ ticks: symbol }, cb);\n\n    const subscribeTicksHistory = (request_object, cb) => subscribe(request_object, cb);\n\n    const subscribeTransaction = cb => subscribe({ transaction: 1 }, cb);\n\n    const subscribeWebsiteStatus = cb => subscribe({ website_status: 1 }, cb);\n\n    const buyAndSubscribe = request => {\n        return new Promise(resolve => {\n            let called = false;\n            const subscriber = subscribe(request, response => {\n                if (!called) {\n                    called = true;\n                    subscriber.unsubscribe();\n                    resolve(response);\n                }\n            });\n        });\n    };\n\n    const buy = ({ proposal_id, price }) => deriv_api.send({ buy: proposal_id, price });\n\n    const sell = (contract_id, bid_price) => deriv_api.send({ sell: contract_id, price: bid_price });\n\n    const cashier = (action, parameters = {}) => deriv_api.send({ cashier: action, ...parameters });\n\n    const newAccountVirtual = (verification_code, client_password, residence, device_data) =>\n        deriv_api.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n            ...device_data,\n        });\n\n    const setAccountCurrency = (currency, passthrough) =>\n        deriv_api.send({\n            set_account_currency: currency,\n            ...(passthrough && { passthrough }),\n        });\n\n    const newAccountReal = values =>\n        deriv_api.send({\n            new_account_real: 1,\n            ...values,\n        });\n\n    const newAccountRealMaltaInvest = values => deriv_api.send({ new_account_maltainvest: 1, ...values });\n\n    const mt5NewAccount = values =>\n        deriv_api.send({\n            mt5_new_account: 1,\n            ...values,\n        });\n\n    const mt5PasswordChange = (login, old_password, new_password, password_type, values) =>\n        deriv_api.send({\n            mt5_password_change: 1,\n            login,\n            old_password,\n            new_password,\n            password_type,\n            ...values,\n        });\n    const mt5PasswordReset = payload =>\n        deriv_api.send({\n            ...payload,\n            mt5_password_reset: 1,\n        });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        deriv_api.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const statement = (limit, offset, date_boundaries) =>\n        deriv_api.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const verifyEmail = (email, type) => deriv_api.send({ verify_email: email, type });\n\n    const paymentAgentList = (country, currency) =>\n        deriv_api.send({ paymentagent_list: country, ...(currency && { currency }) });\n\n    const paymentAgentWithdraw = ({ loginid, currency, amount, verification_code, dry_run = 0 }) =>\n        deriv_api.send({\n            amount,\n            currency,\n            verification_code,\n            paymentagent_withdraw: 1,\n            dry_run,\n            paymentagent_loginid: loginid,\n        });\n\n    const paymentAgentTransfer = ({ amount, currency, description, transfer_to, dry_run = 0 }) =>\n        deriv_api.send({\n            amount,\n            currency,\n            description,\n            transfer_to,\n            paymentagent_transfer: 1,\n            dry_run,\n        });\n\n    const activeSymbols = (mode = 'brief') => deriv_api.activeSymbols(mode);\n\n    const transferBetweenAccounts = (account_from, account_to, currency, amount) =>\n        deriv_api.send({\n            transfer_between_accounts: 1,\n            accounts: 'all',\n            ...(account_from && {\n                account_from,\n                account_to,\n                currency,\n                amount,\n            }),\n        });\n\n    const forgetStream = id => deriv_api.forget(id);\n\n    const tncApproval = () => deriv_api.send({ tnc_approval: '1' });\n\n    const contractUpdate = (contract_id, limit_order) =>\n        deriv_api.send({\n            contract_update: 1,\n            contract_id,\n            limit_order,\n        });\n\n    const contractUpdateHistory = contract_id =>\n        deriv_api.send({\n            contract_update_history: 1,\n            contract_id,\n        });\n\n    const cancelContract = contract_id => deriv_api.send({ cancel: contract_id });\n\n    const p2pAdvertiserInfo = () => deriv_api.send({ p2p_advertiser_info: 1 });\n\n    const loginHistory = limit =>\n        deriv_api.send({\n            login_history: 1,\n            limit,\n        });\n\n    // subscribe method export for P2P use only\n    // so that subscribe remains private\n    const p2pSubscribe = (request, cb) => subscribe(request, cb);\n    const accountStatistics = () => deriv_api.send({ account_statistics: 1 });\n\n    const realityCheck = () => deriv_api.send({ reality_check: 1 });\n\n    return {\n        init,\n        forgetStream,\n        wait,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        clear: () => {},\n        sendBuffered: () => {},\n        getSocket: () => binary_socket,\n        get: () => deriv_api,\n        setOnDisconnect: onDisconnect => {\n            config.onDisconnect = onDisconnect;\n        },\n        setOnReconnect: onReconnect => {\n            config.onReconnect = onReconnect;\n        },\n        removeOnReconnect: () => {\n            delete config.onReconnect;\n        },\n        removeOnDisconnect: () => {\n            delete config.onDisconnect;\n        },\n        cache: delegateToObject({}, () => deriv_api.cache),\n        storage: delegateToObject({}, () => deriv_api.storage),\n        buy,\n        buyAndSubscribe,\n        sell,\n        cashier,\n        cancelContract,\n        close,\n        contractUpdate,\n        contractUpdateHistory,\n        mt5NewAccount,\n        mt5PasswordChange,\n        mt5PasswordReset,\n        newAccountVirtual,\n        newAccountReal,\n        newAccountRealMaltaInvest,\n        p2pAdvertiserInfo,\n        p2pSubscribe,\n        profitTable,\n        statement,\n        verifyEmail,\n        activeSymbols,\n        paymentAgentList,\n        paymentAgentWithdraw,\n        paymentAgentTransfer,\n        setAccountCurrency,\n        balanceAll,\n        subscribeBalanceAll,\n        subscribeBalanceActiveAccount,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n        tncApproval,\n        transferBetweenAccounts,\n        loginHistory,\n        closeAndOpenNewConnection,\n        accountStatistics,\n        realityCheck,\n    };\n})();\n\nfunction delegateToObject(base_obj, extending_obj_getter) {\n    return new Proxy(base_obj, {\n        get(target, field) {\n            if (target[field]) return target[field];\n\n            const extending_obj =\n                typeof extending_obj_getter === 'function' ? extending_obj_getter() : extending_obj_getter;\n\n            if (!extending_obj) return undefined;\n\n            const value = extending_obj[field];\n            if (value) {\n                if (typeof value === 'function') {\n                    return value.bind(extending_obj);\n                }\n                return value;\n            }\n\n            return undefined;\n        },\n    });\n}\n\nconst proxied_socket_base = delegateToObject(BinarySocketBase, () => BinarySocketBase.get());\n\nconst proxyForAuthorize = obj =>\n    new Proxy(obj, {\n        get(target, field) {\n            if (typeof target[field] !== 'function') {\n                return proxyForAuthorize(target[field], proxied_socket_base[field]);\n            }\n            return (...args) => BinarySocketBase.wait('authorize').then(() => target[field](...args));\n        },\n    });\n\nBinarySocketBase.authorized = proxyForAuthorize(proxied_socket_base);\n\nmodule.exports = proxied_socket_base;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Trans } from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components, options, i18n }) => (\n    <Trans i18n={i18n} defaults={i18n_default_text} values={values} components={components} tOptions={options} />\n);\n\n// Trans needs to have the i18n instance in scope\nconst withI18n = i18n => props => <Localize i18n={i18n} {...props} />;\n\nLocalize.propTypes = {\n    components: PropTypes.arrayOf(PropTypes.node),\n    i18n: PropTypes.object.isRequired,\n    i18n_default_text: PropTypes.string,\n    values: PropTypes.object,\n};\n\nexport default withI18n;\n","import Localize from './localize.jsx';\n\nexport default Localize;\n","import { str as crc32 } from 'crc-32';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport withI18n from '../components';\n\nconst LANGUAGE_KEY = 'i18n_language';\nconst DEFAULT_LANGUAGE = 'EN';\nconst ALL_LANGUAGES = Object.freeze({\n    ACH: 'Translations',\n    EN: 'English',\n    ES: 'Español',\n    FR: 'Français',\n    ID: 'Indonesia',\n    IT: 'Italiano',\n    PL: 'Polish',\n    PT: 'Português',\n    RU: 'Русский',\n    VI: 'Tiếng Việt',\n    ZH_CN: '简体中文',\n    ZH_TW: '繁體中文',\n});\n\nconst getUrlBase = (path = '') => {\n    const l = window.location;\n\n    if (!/^\\/(br_)/.test(l.pathname)) return path;\n\n    return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n};\n\n// TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\nconst isStaging = () => /staging\\.deriv\\.app|staging-app\\.deriv\\.com/i.test(window.location.hostname);\n\nconst isLanguageAvailable = lang => {\n    if (!lang) return false;\n\n    const selected_language = lang.toUpperCase();\n    const is_ach = selected_language === 'ACH';\n\n    if (is_ach) return isStaging();\n\n    // TODO: remove when translations are ready\n    if (selected_language !== DEFAULT_LANGUAGE) return false;\n\n    return Object.keys(ALL_LANGUAGES).includes(selected_language);\n};\n\nexport const getAllLanguages = () => ALL_LANGUAGES;\n\nconst getInitialLanguage = () => {\n    const url_params = new URLSearchParams(window.location.search);\n    const query_lang = url_params.get('lang');\n    const local_storage_language = localStorage.getItem(LANGUAGE_KEY);\n\n    if (query_lang) {\n        if (isLanguageAvailable(query_lang)) {\n            localStorage.setItem(LANGUAGE_KEY, query_lang);\n            return query_lang;\n        }\n    }\n\n    if (local_storage_language) {\n        if (isLanguageAvailable(local_storage_language)) {\n            return local_storage_language;\n        }\n    }\n\n    return DEFAULT_LANGUAGE;\n};\n\nconst loadLanguageJson = async lang => {\n    if (!i18n.hasResourceBundle(lang, 'translations') && lang.toUpperCase() !== DEFAULT_LANGUAGE) {\n        const response = await fetch(getUrlBase(`/public/i18n/${lang.toLowerCase()}.json`));\n        const lang_json = await response.text();\n\n        i18n.addResourceBundle(lang, 'translations', JSON.parse(lang_json));\n        document.documentElement.setAttribute('lang', lang);\n    }\n};\n\nconst initial_language = getInitialLanguage();\nconst i18n_config = {\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: initial_language,\n    fallbackLng: 'EN',\n    ns: ['translations'],\n    defaultNS: 'translations',\n};\n\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const initializeTranslations = async () => {\n    if (isStaging()) {\n        loadIncontextTranslation();\n    }\n    await loadLanguageJson(initial_language);\n};\n\nexport const getLanguage = () => {\n    return i18n.language || initial_language;\n};\n\n// eslint-disable-next-line no-unused-vars\nexport const changeLanguage = async (lang, cb) => {\n    // TODO: uncomment this when translations are ready\n    // if (isLanguageAvailable(lang)) {\n    //     await loadLanguageJson(lang);\n    //     i18n.changeLanguage(lang, () => {\n    //         localStorage.setItem(LANGUAGE_KEY, lang);\n    //         cb();\n    //     })\n    // }\n};\n\n// <Localize /> component wrapped with i18n\nexport const Localize = withI18n(i18n);\n\nexport const localize = (string, values) => {\n    if (!string) return '';\n\n    return i18n.t(crc32(string), { defaultValue: string, ...values });\n};\n\nconst loadIncontextTranslation = () => {\n    const is_ach = getLanguage().toUpperCase() === 'ACH';\n    if (is_ach) {\n        const jipt = document.createElement('script');\n        jipt.type = 'text/javascript';\n        jipt.text = `\n            var _jipt = []; _jipt.push(['project', 'deriv-app']);\n            var crowdin = document.createElement(\"script\");\n            crowdin.setAttribute('src', '//cdn.crowdin.com/jipt/jipt.js');\n            document.head.appendChild(crowdin);\n        `;\n        document.head.appendChild(jipt);\n    }\n};\n","const isCryptocurrency = require('@deriv/shared').isCryptocurrency;\nconst getPropertyValue = require('@deriv/shared').getPropertyValue;\nconst isEmptyObject = require('@deriv/shared').isEmptyObject;\nconst { localize } = require('@deriv/translations');\nconst SocketCache = require('./socket_cache');\nconst LocalStore = require('../storage').LocalStore;\nconst State = require('../storage').State;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => !isEmptyObject(getAllAccountsObject()) && get('loginid') && get('token');\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid)) account_type = 'virtual';\n        else if (/^MF/.test(loginid)) account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type = getAccountType(loginid);\n        return (\n            ((type === 'virtual' && this_type === 'virtual') ||\n                (type === 'real' && this_type !== 'virtual') ||\n                type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true)\n        );\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = type => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid => !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid => !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default: localize('Real'),\n            financial: localize('Investment'),\n            gaming: localize('Gaming'),\n            virtual: localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return types_map[getAccountType(loginid)] || types_map.default;\n    };\n\n    const responseAuthorize = response => {\n        const authorize = response.authorize;\n        set('loginid', authorize.loginid);\n    };\n\n    const shouldAcceptTnc = (account_settings = State.getResponse('get_settings')) => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status = account_settings.client_tnc_status;\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = options => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token', options.token, options.loginid);\n        set('email', options.email, options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid', options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode = get('landing_company_shortcode');\n        const landing_company_prop = Object.keys(landing_company_response).find(\n            key => this_shortcode === landing_company_response[key].shortcode\n        );\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = (account_status = State.getResponse('get_account_status')) =>\n        isAccountOfType('financial') && !/crs_tin_information/.test((account_status || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP or Bbook or HighRisk distinction from group\n    const getMT5AccountType = group =>\n        group\n            ? group\n                  .replace('\\\\', '_')\n                  .replace(/_(\\d+|master|EUR|GBP|Bbook|HighRisk)/i, '')\n                  // TODO: [remove-standard-advanced] remove standard and advanced when API groups are updated\n                  .replace(/_standard$/, '_financial')\n                  .replace(/_advanced$/, '_financial_stp')\n            : '';\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type, can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) =>\n                landing_companies.find(\n                    landing_company =>\n                        landing_company !== current_landing_company &&\n                        upgradeable_landing_companies.indexOf(landing_company) !== -1\n                );\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = (account_status = State.getResponse('get_account_status')) => {\n        const status = account_status.status;\n        const is_high_risk = /high/.test(account_status.risk_classification);\n\n        return isAccountOfType('financial')\n            ? /(financial_assessment|trading_experience)_not_complete/.test(status)\n            : is_high_risk && /financial_assessment_not_complete/.test(status);\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = account => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = to_loginid => {\n        if (\n            to_loginid === current_loginid ||\n            get('is_virtual', to_loginid) ||\n            get('is_virtual') ||\n            get('is_disabled', to_loginid)\n        ) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta: 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto = isCryptocurrency(to_currency);\n        return is_from_crypto ? !is_to_crypto : is_to_crypto;\n    };\n\n    const hasSvgAccount = () => !!getAllLoginids().find(loginid => /^CR/.test(loginid));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency = get('currency');\n        const has_no_mt5 = mt5_login_list.length === 0;\n        const has_no_transaction = statement.count === 0 && statement.transactions.length === 0;\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current\n            ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency)\n            : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","/* eslint-disable */\n// Copied from github.com/pvorb/clone to fix an inheritance issue.\n// Line 156-158 was added to address https://github.com/pvorb/clone/issues/58\nconst clone = (function() {\n    function _instanceof(obj, type) {\n        return type != null && obj instanceof type;\n    }\n\n    let nativeMap;\n    try {\n        nativeMap = Map;\n    } catch (_) {\n        // maybe a reference error because no `Map`. Give it a dummy value that no\n        // value will ever be an instanceof.\n        nativeMap = function() {};\n    }\n\n    let nativeSet;\n    try {\n        nativeSet = Set;\n    } catch (_) {\n        nativeSet = function() {};\n    }\n\n    let nativePromise;\n    try {\n        nativePromise = Promise;\n    } catch (_) {\n        nativePromise = function() {};\n    }\n\n    /**\n     * Clones (copies) an Object using deep copying.\n     *\n     * This function supports circular references by default, but if you are certain\n     * there are no circular references in your object, you can save some CPU time\n     * by calling clone(obj, false).\n     *\n     * Caution: if `circular` is false and `parent` contains circular references,\n     * your program may enter an infinite loop and crash.\n     *\n     * @param `parent` - the object to be cloned\n     * @param `circular` - set to true if the object to be cloned may contain\n     *    circular references. (optional - true by default)\n     * @param `depth` - set to a number if the object is only to be cloned to\n     *    a particular depth. (optional - defaults to Infinity)\n     * @param `prototype` - sets the prototype to be used when cloning an object.\n     *    (optional - defaults to parent prototype).\n     * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n     *    should be cloned as well. Non-enumerable properties on the prototype\n     *    chain will be ignored. (optional - false by default)\n     */\n    function clone(parent, circular, depth, prototype, includeNonEnumerable) {\n        if (typeof circular === 'object') {\n            depth = circular.depth;\n            prototype = circular.prototype;\n            includeNonEnumerable = circular.includeNonEnumerable;\n            circular = circular.circular;\n        }\n        // maintain two arrays for circular references, where corresponding parents\n        // and children have the same index\n        const allParents = [];\n        const allChildren = [];\n\n        const useBuffer = typeof Buffer !== 'undefined';\n\n        if (typeof circular === 'undefined') circular = true;\n\n        if (typeof depth === 'undefined') depth = Infinity;\n\n        // recurse this function so we don't reset allParents and allChildren\n        function _clone(parent, depth) {\n            // cloning null always returns null\n            if (parent === null) return null;\n\n            if (depth === 0) return parent;\n\n            let child, proto;\n            if (typeof parent !== 'object') {\n                return parent;\n            }\n\n            if (_instanceof(parent, nativeMap)) {\n                child = new nativeMap();\n            } else if (_instanceof(parent, nativeSet)) {\n                child = new nativeSet();\n            } else if (_instanceof(parent, nativePromise)) {\n                child = new nativePromise(function(resolve, reject) {\n                    parent.then(\n                        function(value) {\n                            resolve(_clone(value, depth - 1));\n                        },\n                        function(err) {\n                            reject(_clone(err, depth - 1));\n                        }\n                    );\n                });\n            } else if (clone.__isArray(parent)) {\n                child = [];\n            } else if (clone.__isRegExp(parent)) {\n                child = new RegExp(parent.source, __getRegExpFlags(parent));\n                if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n            } else if (clone.__isDate(parent)) {\n                child = new Date(parent.getTime());\n            } else if (useBuffer && Buffer.isBuffer(parent)) {\n                if (Buffer.from) {\n                    // Node.js >= 5.10.0\n                    child = Buffer.from(parent);\n                } else {\n                    // Older Node.js versions\n                    child = new Buffer(parent.length);\n                    parent.copy(child);\n                }\n                return child;\n            } else if (_instanceof(parent, Error)) {\n                child = Object.create(parent);\n            } else if (typeof prototype === 'undefined') {\n                proto = Object.getPrototypeOf(parent);\n                child = Object.create(proto);\n            } else {\n                child = Object.create(prototype);\n                proto = prototype;\n            }\n\n            if (circular) {\n                const index = allParents.indexOf(parent);\n\n                if (index != -1) {\n                    return allChildren[index];\n                }\n                allParents.push(parent);\n                allChildren.push(child);\n            }\n\n            if (_instanceof(parent, nativeMap)) {\n                parent.forEach(function(value, key) {\n                    const keyChild = _clone(key, depth - 1);\n                    const valueChild = _clone(value, depth - 1);\n                    child.set(keyChild, valueChild);\n                });\n            }\n            if (_instanceof(parent, nativeSet)) {\n                parent.forEach(function(value) {\n                    const entryChild = _clone(value, depth - 1);\n                    child.add(entryChild);\n                });\n            }\n\n            for (var i in parent) {\n                const attrs = Object.getOwnPropertyDescriptor(parent, i);\n                if (attrs) {\n                    // https://github.com/pvorb/clone/issues/58\n                    if (Object.keys(parent).indexOf(i) < 0) {\n                        continue;\n                    }\n\n                    child[i] = _clone(parent[i], depth - 1);\n                }\n\n                try {\n                    const objProperty = Object.getOwnPropertyDescriptor(parent, i);\n                    if (objProperty.set === 'undefined') {\n                        // no setter defined. Skip cloning this property\n                        continue;\n                    }\n                    child[i] = _clone(parent[i], depth - 1);\n                } catch (e) {\n                    if (e instanceof TypeError) {\n                        // when in strict mode, TypeError will be thrown if child[i] property only has a getter\n                        // we can't do anything about this, other than inform the user that this property cannot be set.\n                        continue;\n                    } else if (e instanceof ReferenceError) {\n                        // this may happen in non strict mode\n                        continue;\n                    }\n                }\n            }\n\n            if (Object.getOwnPropertySymbols) {\n                const symbols = Object.getOwnPropertySymbols(parent);\n                for (var i = 0; i < symbols.length; i++) {\n                    // Don't need to worry about cloning a symbol because it is a primitive,\n                    // like a number or string.\n                    const symbol = symbols[i];\n                    var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n                    if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n                        continue;\n                    }\n                    child[symbol] = _clone(parent[symbol], depth - 1);\n                    Object.defineProperty(child, symbol, descriptor);\n                }\n            }\n\n            if (includeNonEnumerable) {\n                const allPropertyNames = Object.getOwnPropertyNames(parent);\n                for (var i = 0; i < allPropertyNames.length; i++) {\n                    const propertyName = allPropertyNames[i];\n                    var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n                    if (descriptor && descriptor.enumerable) {\n                        continue;\n                    }\n                    child[propertyName] = _clone(parent[propertyName], depth - 1);\n                    Object.defineProperty(child, propertyName, descriptor);\n                }\n            }\n\n            return child;\n        }\n\n        return _clone(parent, depth);\n    }\n\n    /**\n     * Simple flat clone using prototype, accepts only objects, usefull for property\n     * override on FLAT configuration object (no nested props).\n     *\n     * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n     * works.\n     */\n    clone.clonePrototype = function clonePrototype(parent) {\n        if (parent === null) return null;\n\n        const c = function() {};\n        c.prototype = parent;\n        return new c();\n    };\n\n    // private utility functions\n\n    function __objToStr(o) {\n        return Object.prototype.toString.call(o);\n    }\n    clone.__objToStr = __objToStr;\n\n    function __isDate(o) {\n        return typeof o === 'object' && __objToStr(o) === '[object Date]';\n    }\n    clone.__isDate = __isDate;\n\n    function __isArray(o) {\n        return typeof o === 'object' && __objToStr(o) === '[object Array]';\n    }\n    clone.__isArray = __isArray;\n\n    function __isRegExp(o) {\n        return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n    }\n    clone.__isRegExp = __isRegExp;\n\n    function __getRegExpFlags(re) {\n        let flags = '';\n        if (re.global) flags += 'g';\n        if (re.ignoreCase) flags += 'i';\n        if (re.multiline) flags += 'm';\n        return flags;\n    }\n    clone.__getRegExpFlags = __getRegExpFlags;\n\n    return clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n    module.exports = clone;\n}\n/* eslint-enable */\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsInfoLoader = ({ is_mobile, is_logged_in, speed }) => (\n    <ContentLoader\n        height={is_mobile ? 40 : 46}\n        width={is_mobile ? 216 : 350}\n        speed={speed}\n        primaryColor={'var(--general-section-1)'}\n        secondaryColor={'var(--general-hover)'}\n    >\n        {is_logged_in ? <LoggedInPreloader is_mobile={is_mobile} /> : <LoggedOutPreloader is_mobile={is_mobile} />}\n    </ContentLoader>\n);\n\nconst LoggedOutPreloader = ({ is_mobile }) => (\n    <React.Fragment>\n        <rect x={is_mobile ? 42 : 166} y='8' rx='4' ry='4' width='66' height='32' />\n        <rect x={is_mobile ? 120 : 250} y='8' rx='4' ry='4' width='80' height='32' />\n    </React.Fragment>\n);\n\nconst LoggedInPreloader = ({ is_mobile }) => (\n    <>\n        {is_mobile ? (\n            <React.Fragment>\n                <circle cx='97' cy='22' r='13' />\n                <circle cx='59' cy='22' r='13' />\n                <rect x='128' y='19' rx='4' ry='4' width='76' height='7' />\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                <circle cx='14' cy='22' r='12' />\n                <circle cx='58' cy='22' r='12' />\n                <rect x='150' y='20' rx='4' ry='4' width='76' height='7' />\n                <circle cx='118' cy='24' r='13' />\n                <rect x='87' y='8' rx='4' ry='4' width='1' height='30' />\n                <rect x='250' y='8' rx='4' ry='4' width='82' height='32' />\n            </React.Fragment>\n        )}\n    </>\n);\n\nAccountsInfoLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { AccountsInfoLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsItemLoader = ({ speed }) => (\n    <ContentLoader\n        height={24}\n        width={246}\n        speed={speed}\n        primaryColor={'var(--general-section-1)'}\n        secondaryColor={'var(--general-hover)'}\n    >\n        <circle cx='18' cy='13' r='10' />\n        <rect x='36' y='3' rx='4' ry='4' width='108' height='20' />\n        <rect x='175' y='3' rx='4' ry='4' width='70' height='20' />\n    </ContentLoader>\n);\n\nAccountsItemLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { AccountsItemLoader };\n","import { urlForLanguage } from '@deriv/shared';\nimport { getLanguage, getAllLanguages } from '@deriv/translations';\n\nexport const currentLanguage = getLanguage();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAllLanguages())\n        .filter(key => !exclude_languages.includes(key))\n        .reduce((obj, key) => {\n            obj[key] = getAllLanguages()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlForLanguage(lang);\n","const { localize } = require('@deriv/translations');\nconst BinarySocket = require('./socket_base');\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const status_config = {\n        online: { class: 'online', tooltip: localize('Online') },\n        offline: { class: 'offline', tooltip: localize('Offline') },\n        blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n    };\n\n    let ws_config, setNetworkStatus;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        let last_status, last_is_online;\n        setNetworkStatus = status => {\n            const is_online = isOnline();\n            if (status !== last_status || is_online !== last_is_online) {\n                last_status = status;\n                last_is_online = is_online;\n                fncUpdateUI(status_config[status], is_online);\n            }\n        };\n\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online', () => {\n                setNetworkStatus('blinking');\n                reconnectAfter({ timeout: 500 });\n            });\n            window.addEventListener('offline', () => {\n                BinarySocket.close();\n                setNetworkStatus('offline');\n            });\n        } else {\n            // default to always online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init({ options: ws_config });\n        }\n\n        setNetworkStatus(isOnline() ? 'blinking' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    // reconnect after timout,\n    // if the network status is online\n    // and the connection is closed or closing.\n    let reconnect_timeout = null;\n    function reconnectAfter({ timeout }) {\n        clearTimeout(reconnect_timeout);\n        reconnect_timeout = setTimeout(() => {\n            reconnect_timeout = null;\n            if (isOnline() && BinarySocket.hasReadyState(2, 3)) {\n                BinarySocket.init({ options: ws_config });\n            } else {\n                BinarySocket.send({ ping: 1 }); // get stable status sooner\n            }\n        }, timeout);\n    }\n    const events = {\n        init: () => setNetworkStatus(isOnline() ? 'blinking' : 'offline'),\n        open: () => setNetworkStatus(isOnline() ? 'online' : 'offline'),\n        send: () => {},\n        message: () => setNetworkStatus('online'),\n        close: () => {\n            setNetworkStatus(isOnline() ? 'blinking' : 'offline');\n            reconnectAfter({ timeout: 5000 });\n        },\n    };\n\n    const wsEvent = event => {\n        events[event] && events[event](); // eslint-disable-line\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\nconst ErrorComponent = ({ header, message, redirect_label, redirectOnClick, should_show_refresh = true }) => {\n    const refresh_message = should_show_refresh ? (\n        <Localize i18n_default_text='Please refresh this page to continue.' />\n    ) : (\n        ''\n    );\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Something’s not right' />}\n            messages={\n                message\n                    ? [message, refresh_message]\n                    : [\n                          <Localize\n                              key={0}\n                              i18n_default_text='Sorry, an error occured while processing your request.'\n                          />,\n                          refresh_message,\n                      ]\n            }\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","const isMobile = require('@deriv/shared').isMobileOs;\nconst domain_app_ids = require('@deriv/shared').domain_app_ids;\nconst getAppId = require('@deriv/shared').getAppId;\nconst getDerivComLink = require('@deriv/shared').getDerivComLink;\nconst urlForCurrentDomain = require('@deriv/shared').urlForCurrentDomain;\nconst { getLanguage } = require('@deriv/translations');\nconst website_name = require('App/Constants/app-config').website_name;\nconst Client = require('./client_base');\nconst getElementById = require('../common_functions').getElementById;\nconst isStorageSupported = require('../storage').isStorageSupported;\nconst LocalStore = require('../storage').LocalStore;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const redirectToSignUp = () => {\n        window.open(getDerivComLink('/signup/'));\n    };\n\n    const loginUrl = () => {\n        const server_url = localStorage.getItem('config.server_url');\n        const language = getLanguage();\n        const signup_device = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries = `&signup_device=${signup_device}${\n            date_first_contact ? `&date_first_contact=${date_first_contact}` : ''\n        }`;\n        // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n        const default_login_url_app = `https://oauth.deriv.app/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}&brand=${website_name.toLowerCase()}`;\n        const default_login_url = `https://oauth.deriv.com/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}&brand=${website_name.toLowerCase()}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}&brand=${website_name.toLowerCase()}`;\n        }\n\n        // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n        if (getAppId() === domain_app_ids['deriv.app'] && /^(www\\.)?deriv\\.app$/.test(window.location.hostname)) {\n            return default_login_url_app;\n        }\n        if (getAppId() === domain_app_ids['app.deriv.com'] && /^app\\.deriv\\.com$/.test(window.location.hostname)) {\n            return default_login_url;\n        }\n        return urlForCurrentDomain(default_login_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => `${loginUrl()}&social_signup=${brand}`;\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', e => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        loginUrl,\n        isLoginPages,\n        initOneAll,\n        redirectToSignUp,\n    };\n})();\n\nmodule.exports = Login;\n","import { localize } from '@deriv/translations';\n\n/**\n * Experian result is defined by client's information validity.\n * Defines the possible types of actions needed to take on experian result response.\n *\n * Possible values are:\n *   - Success: Client can trade\n *   - Warn: POI/POA Validity partially failed, trade in demo possible\n *   - Danger: POI/POA validation failed. Trade is locked until this resolved.\n *   - Pending: POI/POA is in pending state.\n * @enum {EXPERIAN}\n */\nexport const EXPERIAN = {\n    SUCCESS: 1,\n    WARN: 0,\n    DANGER: -1,\n    PENDING: -2,\n};\n\n/**\n * Return account title for the given landing company\n * - Example:\n * getAccountTitle('malta') => 'Real Synthetic'\n *\n * @param {string} short_code - Landing company shortcode\n * @param {object} options\n * @return {string} localized title\n */\nexport const getAccountTitle = (\n    short_code,\n    { is_isle_of_man_residence = false, is_belgium_residence = false } = {}\n) => {\n    // TODO: [deriv-eu] merge if statement and switch together once more residence cases are found.\n    if (is_isle_of_man_residence || is_belgium_residence) {\n        return localize('Real Synthetic');\n    }\n\n    switch (short_code) {\n        case 'svg':\n            return localize('Deriv account');\n        case 'iom':\n        case 'malta':\n            return localize('Deriv Synthetic');\n        case 'maltainvest':\n            return localize('Deriv Financial');\n        default:\n            return localize('Deriv');\n    }\n};\n\n/**\n * @param {string} landing_company_shortcode\n * @param {boolean} is_fully_authenticated\n * @param {boolean} is_age_verified\n * @param {boolean} is_isle_of_man_residence\n * @param {boolean} is_belgium_residence,\n *\n * @return {EXPERIAN.WARN|EXPERIAN.SUCCESS|EXPERIAN.DANGER}\n */\nexport const getExperianResult = status => {\n    const {\n        landing_company_shortcode = '',\n        is_fully_authenticated = false,\n        is_age_verified = false,\n        is_isle_of_man_residence = false,\n        is_belgium_residence = false,\n    } = status;\n    const getIOMStatus = () => {\n        if (is_fully_authenticated) return EXPERIAN.SUCCESS;\n        if (is_age_verified) return EXPERIAN.WARN;\n\n        return EXPERIAN.DANGER;\n    };\n\n    if (landing_company_shortcode === 'svg' || is_isle_of_man_residence || is_belgium_residence)\n        return EXPERIAN.SUCCESS;\n    if (landing_company_shortcode === 'iom') return getIOMStatus({ is_fully_authenticated, is_age_verified });\n\n    return EXPERIAN.SUCCESS;\n};\n\nexport const screen_height_sm_threshold = 930;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add(response) {\n        this.list.unshift(response);\n    }\n\n    remove() {\n        this.list.pop();\n    }\n\n    push(response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh() {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise(resolve => {\n                            let return_value;\n                            result\n                                .then(response => {\n                                    if (response.error) {\n                                        queue.push(response);\n                                        if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                        queue.fresh();\n                                        if (\n                                            window.TrackJS &&\n                                            !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                        ) {\n                                            window.TrackJS.track(response.error.code);\n                                        }\n                                    }\n                                    queue.push(response);\n                                    return_value = response;\n                                })\n                                .catch(error => {\n                                    if (window.TrackJS) {\n                                        window.TrackJS.console.log(queue.list);\n                                        window.TrackJS.track(error.getMessage());\n                                    }\n                                })\n                                .then(() => {\n                                    resolve(return_value);\n                                });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = obj => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket from '_common/base/socket_base';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = BinarySocket;\n\nexport default trackJSNetworkMonitor(WS);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'Stores/connect';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, href, has_error, setError, ...props }) => {\n    const path = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return to && !href ? (\n        <NavLink\n            onClick={() => {\n                if (has_error) setError(false, null);\n            }}\n            to={path}\n            activeClassName={active_class || 'active'}\n            exact={route.exact}\n            {...props}\n        >\n            {children}\n        </NavLink>\n    ) : (\n        <a {...props}>{children}</a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    to: PropTypes.string,\n};\n\nexport default connect(({ common }) => ({\n    has_error: common.has_error,\n    setError: common.setError,\n}))(BinaryLink);\n","import { matchPath } from 'react-router';\nimport { routes } from '@deriv/shared';\n\nexport const normalizePath = path => (/^\\//.test(path) ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) => !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = contract_id => getPath(routes.contract, { contract_id });\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { PageError } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst LoginPrompt = ({ onLogin, onSignup, page_title }) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[<br key={0} />]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' onClick={onLogin} />,\n                    <a key={1} className='link' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin: PropTypes.func,\n    onSignup: PropTypes.func,\n    page_title: PropTypes.string,\n};\n\nexport default LoginPrompt;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { removeBranchName, routes, isEmptyObject } from '@deriv/shared';\n\nimport { redirectToLogin, redirectToSignUp } from '_common/base/login';\nimport LoginPrompt from 'App/Components/Elements/login-prompt.jsx';\nimport { default_title } from 'App/Constants/app-config';\nimport { connect } from 'Stores/connect';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (route.is_authenticated && !route.is_logged_in) {\n            result = <LoginPrompt onLogin={redirectToLogin} onSignup={redirectToSignUp} page_title={route.title} />;\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n            const pathname = removeBranchName(location.pathname);\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    <route.component {...props} routes={route.routes} passthrough={route.passthrough} />\n                </React.Fragment>\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${title}${default_title}`;\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React from 'react';\nimport { Switch, Prompt, useLocation } from 'react-router-dom';\nimport { Loading } from '@deriv/components';\nimport { connect } from 'Stores/connect';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = props => {\n    const location = useLocation();\n\n    React.useEffect(() => {\n        props.pushDataLayer({ event: 'page_load' });\n    }, [location]);\n\n    return (\n        <React.Suspense fallback={<Loading />}>\n            <Prompt when={props.prompt_when} message={props.promptFn} />\n            <Switch>\n                {getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))}\n            </Switch>\n        </React.Suspense>\n    );\n};\n\nexport default connect(({ ui, gtm }) => ({\n    prompt_when: ui.prompt_when,\n    promptFn: ui.promptFn,\n    pushDataLayer: gtm.pushDataLayer,\n}))(BinaryRoutes);\n","export const getUrlSmartTrader = () => {\n    // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n    if (\n        /^staging\\.deriv\\.app$/i.test(window.location.hostname) ||\n        /^staging-app\\.deriv\\.com$/i.test(window.location.hostname)\n    ) {\n        return 'https://staging-smarttrader.deriv.com';\n    }\n\n    return 'https://smarttrader.deriv.com';\n};\n","import { getUrlSmartTrader } from '../storage/storage_events';\n\nexport const routes = {\n    error404: '/404',\n    account: '/account',\n    financial_assessment: '/account/financial-assessment',\n    personal_details: '/account/personal-details',\n    proof_of_identity: '/account/proof-of-identity',\n    proof_of_address: '/account/proof-of-address',\n    deriv_password: '/account/deriv-password',\n    deactivate_account: '/account/deactivate-account',\n    account_deactivated: '/account-deactivated',\n    account_limits: '/account/account-limits',\n    connected_apps: '/account/connected-apps',\n    api_token: '/account/api-token',\n    login_history: '/account/login-history',\n    two_factor_authentication: '/account/two-factor-authentication',\n    self_exclusion: '/account/self-exclusion',\n    account_password: '/settings/account_password',\n    apps: '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract: '/contract/:contract_id',\n    exclusion: '/settings/exclusion',\n    financial: '/settings/financial',\n    history: '/settings/history',\n    index: '/index',\n    limits: '/settings/limits',\n    mt5: '/mt5',\n    personal: '/settings/personal',\n    positions: '/reports/positions',\n    profit: '/reports/profit',\n    reports: '/reports',\n    root: '/',\n    redirect: '/redirect',\n    settings: '/settings',\n    statement: '/reports/statement',\n    token: '/settings/token',\n    trade: '/',\n    bot: '/bot',\n    cashier: '/cashier',\n    cashier_deposit: '/cashier/deposit',\n    cashier_withdrawal: '/cashier/withdrawal',\n    cashier_pa: '/cashier/payment-agent',\n    cashier_acc_transfer: '/cashier/account-transfer',\n    // cashier_offramp: '/cashier/off-ramp',\n    cashier_onramp: '/cashier/on-ramp',\n    cashier_p2p: '/cashier/p2p',\n    cashier_pa_transfer: '/cashier/payment-agent-transfer',\n    smarttrader: getUrlSmartTrader(),\n    endpoint: '/endpoint',\n    complaints_policy: '/complaints-policy',\n};\n","import { routes } from '../routes';\n\n/*\n * These functions exist because we want to refresh the browser page on switch between Bot and the rest of the platforms.\n * */\n\nexport const isBot = () =>\n    /^\\/bot/.test(window.location.pathname) ||\n    (/^\\/(br_)/.test(window.location.pathname) && window.location.pathname.split('/')[2] === 'bot');\n\nexport const isMT5 = () =>\n    /^\\/mt5/.test(window.location.pathname) ||\n    (/^\\/(br_)/.test(window.location.pathname) && window.location.pathname.split('/')[2] === 'mt5');\n\nexport const getPlatformHeader = routing_history => {\n    if (isBot() || isNavigationFromPlatform(routing_history, routes.bot)) return 'DBot';\n    if (isMT5() || isNavigationFromPlatform(routing_history, routes.mt5)) return 'DMT5';\n    if (isNavigationFromPlatform(routing_history, routes.smarttrader)) return 'SmartTrader';\n    return 'DTrader';\n};\n\nexport const getPlatformIcon = routing_history => {\n    if (isBot() || isNavigationFromPlatform(routing_history, routes.bot)) return 'IcBrandDbot';\n    if (isMT5() || isNavigationFromPlatform(routing_history, routes.mt5)) return 'IcBrandDmt5';\n    if (isNavigationFromPlatform(routing_history, routes.smarttrader)) return 'IcBrandSmarttrader';\n    return 'IcBrandDtrader';\n};\n\nexport const getPlatformRedirect = routing_history => {\n    if (isBot() || isNavigationFromPlatform(routing_history, routes.bot)) return { name: 'DBot', route: routes.bot };\n    if (isMT5() || isNavigationFromPlatform(routing_history, routes.mt5)) return { name: 'DMT5', route: routes.mt5 };\n    if (isNavigationFromPlatform(routing_history, routes.smarttrader))\n        return { name: 'SmartTrader', route: routes.smarttrader };\n    if (isNavigationFromPlatform(routing_history, routes.cashier_p2p, true))\n        return { name: 'P2P', route: routes.cashier_p2p };\n    return { name: 'DTrader', route: routes.trade };\n};\n\nexport const isNavigationFromPlatform = (app_routing_history, platform_route, should_ignore_parent_path = false) => {\n    if (app_routing_history.length > 0) {\n        const getParentPath = pathname => (/^http/.test(pathname) ? false : pathname.split('/')[1]);\n\n        for (let i = 0; i < app_routing_history.length; i++) {\n            const history_item = app_routing_history[i];\n            const history_item_parent_path = getParentPath(history_item.pathname);\n            const next_history_item = app_routing_history.length > i + 1 && app_routing_history[i + 1];\n\n            if (\n                history_item_parent_path === getParentPath(platform_route) ||\n                (should_ignore_parent_path && history_item.pathname === platform_route)\n            ) {\n                return true;\n            } else if (!next_history_item) {\n                return false;\n            } else if (history_item_parent_path === getParentPath(next_history_item.pathname)) {\n                // Continue walking until we see passed in platform_route.\n                continue; // eslint-disable-line no-continue\n            } else {\n                // Return false when path matches a platform parent path, but don't return anything\n                // when a non-platform path was seen. i.e. navigating between /cashier and /reports\n                // should not affect navigating back to platform when clicking cross.\n                const platform_parent_paths = [routes.mt5, routes.bot, routes.trade].map(route => getParentPath(route));\n                const is_other_platform_path = platform_parent_paths.includes(history_item_parent_path);\n\n                if (is_other_platform_path) {\n                    break;\n                }\n            }\n        }\n    }\n\n    return false;\n};\n","// const Cookies = require('js-cookie');\nimport { isBot } from '../platform';\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged packages/shared/src/utils/config.js\n *\n */\nexport const domain_app_ids = {\n    // these domains as supported \"production domains\"\n    'deriv.app': 16929, // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n    'app.deriv.com': 16929,\n    'binary.com': 1,\n};\nconst binary_desktop_app_id = 14473;\n\nexport const getCurrentProductionDomain = () =>\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nexport const isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `(www\\\\.)?${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nexport const getAppId = () => {\n    let app_id = null;\n    const user_app_id = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id);\n        app_id = user_app_id;\n    } else if (\n        /staging\\.deriv\\.app/i.test(window.location.hostname) || // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n        /staging-app\\.deriv\\.com/i.test(window.location.hostname)\n    ) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = isBot() ? 19112 : 16303; // it's being used in endpoint chrome extension - please do not remove\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || (isBot() ? 19111 : 16929);\n    }\n    return app_id;\n};\n\nexport const getSocketURL = () => {\n    const local_storage_server_url = window.localStorage.getItem('config.server_url');\n    if (local_storage_server_url) return local_storage_server_url;\n\n    let active_loginid_from_url;\n    const search = window.location.search;\n    if (search) {\n        const params = new URLSearchParams(document.location.search.substring(1));\n        active_loginid_from_url = params.get('acct1');\n    }\n\n    const loginid = window.localStorage.getItem('active_loginid') || active_loginid_from_url;\n    const is_real = loginid && !/^VRT/.test(loginid);\n\n    const server = is_real ? 'green' : 'blue';\n    const server_url = `${server}.binaryws.com`;\n\n    return server_url;\n};\n\nexport const checkAndSetEndpointFromUrl = () => {\n    // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n    if (/^(staging\\.deriv\\.app|staging-app\\.deriv\\.com|(.*)\\.binary\\.sx)$/i.test(location.hostname)) {\n        const url_params = new URLSearchParams(location.search.slice(1));\n\n        if (url_params.has('qa_server') && url_params.has('app_id')) {\n            const qa_server = url_params.get('qa_server');\n            const app_id = url_params.get('app_id');\n\n            url_params.delete('qa_server');\n            url_params.delete('app_id');\n\n            if (/^(www\\.binaryqa[0-9]{1,2}\\.com|(.*)\\.binaryws\\.com)$/.test(qa_server) && /^[0-9]+$/.test(app_id)) {\n                localStorage.setItem('config.app_id', app_id);\n                localStorage.setItem('config.server_url', qa_server);\n            }\n\n            const params = url_params.toString();\n            const hash = location.hash;\n\n            location.href = `${location.protocol}//${location.hostname}${location.pathname}${\n                params ? `?${params}` : ''\n            }${hash || ''}`;\n        }\n    }\n};\n","const extend = require('extend');\n\nexport const isEmptyObject = obj => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach(key => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nexport const cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\n// Note that this function breaks on objects with circular references.\nexport const isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    } else if (typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b)) {\n        return true;\n    }\n    // else\n    return a === b;\n};\n\nexport const isEqualArray = (arr1, arr2) =>\n    arr1 === arr2 || (arr1.length === arr2.length && arr1.every((value, idx) => isDeepEqual(value, arr2[idx])));\n\nexport const isEqualObject = (obj1, obj2) =>\n    obj1 === obj2 ||\n    (Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key])));\n\n// Filters out duplicates in an array of objects by key\nexport const unique = (array, key) =>\n    array.filter((e, idx) => array.findIndex((a, i) => (a[key] ? a[key] === e[key] : i === idx)) === idx);\n\nexport const getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\nexport const removeEmptyPropertiesFromObject = obj => {\n    const clone = { ...obj };\n\n    Object.getOwnPropertyNames(obj).forEach(key => {\n        if (!obj[key]) {\n            delete clone[key];\n        }\n    });\n\n    return clone;\n};\n","import { getPropertyValue } from '../object';\n\nlet currencies_config = {};\n\nexport const AMOUNT_MAX_LENGTH = 10;\n\nexport const getRoundedNumber = (number, currency) => {\n    return Number(Number(number).toFixed(getDecimalPlaces(currency)));\n};\n\nexport const getFormattedText = (number, currency) => {\n    return `${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))} ${currency}`;\n};\n\nexport const formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        // TODO: [use-shared-i18n] - Use a getLanguage function to determine number format.\n        money = new Intl.NumberFormat('en', options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nexport const formatCurrency = currency => {\n    return `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n};\n\nexport const addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number\n        .toString()\n        .replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,'));\n};\n\nexport const calcDecimalPlaces = currency => {\n    return isCryptocurrency(currency) ? getPropertyValue(CryptoConfig.get(), [currency, 'fractional_digits']) : 2;\n};\n\nexport const getDecimalPlaces = currency =>\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency]\n        ? getPropertyValue(currencies_config, [currency, 'fractional_digits'])\n        : calcDecimalPlaces(currency);\n\nexport const hasCorrectDecimalPlaces = (currency, amount) => {\n    const currency_decimal_places = getDecimalPlaces(currency);\n    const amount_decimal_array = amount.toString().split('.')[1];\n    const amount_decimal_places = amount_decimal_array ? amount_decimal_array.length || 0 : 0;\n\n    return amount_decimal_places <= currency_decimal_places;\n};\n\nexport const setCurrencies = website_status => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nexport const isCryptocurrency = currency => {\n    return /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || currency in CryptoConfig.get();\n};\n\nexport const CryptoConfig = (() => {\n    let crypto_config;\n\n    // TODO: [use-shared-i18n] - Use translate function shared among apps or pass in translated names externally.\n    const initCryptoConfig = () => ({\n        BTC: {\n            display_code: 'BTC',\n            name: 'Bitcoin',\n            min_withdrawal: 0.002,\n            pa_max_withdrawal: 5,\n            pa_min_withdrawal: 0.002,\n            fractional_digits: 8,\n        },\n        BCH: {\n            display_code: 'BCH',\n            name: 'Bitcoin Cash',\n            min_withdrawal: 0.002,\n            pa_max_withdrawal: 5,\n            pa_min_withdrawal: 0.002,\n            fractional_digits: 8,\n        },\n        ETH: {\n            display_code: 'ETH',\n            name: 'Ether',\n            min_withdrawal: 0.002,\n            pa_max_withdrawal: 5,\n            pa_min_withdrawal: 0.002,\n            fractional_digits: 8,\n        },\n        ETC: {\n            display_code: 'ETC',\n            name: 'Ether Classic',\n            min_withdrawal: 0.002,\n            pa_max_withdrawal: 5,\n            pa_min_withdrawal: 0.002,\n            fractional_digits: 8,\n        },\n        LTC: {\n            display_code: 'LTC',\n            name: 'Litecoin',\n            min_withdrawal: 0.002,\n            pa_max_withdrawal: 5,\n            pa_min_withdrawal: 0.002,\n            fractional_digits: 8,\n        },\n        UST: {\n            display_code: 'USDT',\n            name: 'Tether',\n            min_withdrawal: 0.02,\n            pa_max_withdrawal: 2000,\n            pa_min_withdrawal: 10,\n            fractional_digits: 2,\n        },\n        USB: {\n            display_code: 'USB',\n            name: 'Binary Coin',\n            min_withdrawal: 0.02,\n            pa_max_withdrawal: 2000,\n            pa_min_withdrawal: 10,\n            fractional_digits: 2,\n        },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nexport const getMinWithdrawal = currency => {\n    return isCryptocurrency(currency) ? getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002 : 1;\n};\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nexport const getTransferLimits = (currency, which) => {\n    const transfer_limits =\n        getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) ||\n        getMinWithdrawal(currency);\n    const decimals = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nexport const getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [\n        currency_from,\n        'transfer_between_accounts',\n        'fees',\n        currency_to,\n    ]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nexport const getMinimumTransferFee = currency => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nexport const getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nexport const getCurrencyDisplayCode = (currency = '') => {\n    return getPropertyValue(CryptoConfig.get(), [currency.toUpperCase(), 'display_code']) || currency.toUpperCase();\n};\n\nexport const getCurrencyName = currency => {\n    return getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n};\n\nexport const getMinPayout = currency => {\n    return getPropertyValue(currencies_config, [currency, 'stake_default']);\n};\n\nexport const getCurrencies = () => {\n    return currencies_config;\n};\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1023;\nexport const isTouchDevice = () => 'ontouchstart' in document.documentElement;\nexport const isMobile = () => window.innerWidth <= MAX_MOBILE_WIDTH;\nexport const isDesktop = () => isTablet() || window.innerWidth > MAX_TABLET_WIDTH; // TODO: remove tablet once there is a design for the specific size.\nexport const isTablet = () => MAX_MOBILE_WIDTH < window.innerWidth && window.innerWidth <= MAX_TABLET_WIDTH;\n","export const toTitleCase = str =>\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n\nexport const padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array(len - text.length + 1).join(char)}${text}`;\n};\n\nexport const compareBigUnsignedInt = (a, b) => {\n    let first_num = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num = padLeft(first_num, max_length, '0');\n    second_num = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nexport const numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nexport const getKebabCase = str => {\n    if (!str) return str;\n    return str\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2') // get all lowercase letters that are near to uppercase ones\n        .replace(/[\\s]+/g, '-') // replace all spaces and low dash\n        .toLowerCase();\n};\n","export const systems = {\n    mac: ['Mac68K', 'MacIntel', 'MacPPC'],\n    linux: [\n        'HP-UX',\n        'Linux i686',\n        'Linux amd64',\n        'Linux i686 on x86_64',\n        'Linux i686 X11',\n        'Linux x86_64',\n        'Linux x86_64 X11',\n        'FreeBSD',\n        'FreeBSD i386',\n        'FreeBSD amd64',\n        'X11',\n    ],\n    ios: ['iPhone', 'iPod', 'iPad', 'iPhone Simulator', 'iPod Simulator', 'iPad Simulator'],\n    android: [\n        'Android',\n        'Linux armv7l', // Samsung galaxy s2 ~ s5, nexus 4/5\n        'Linux armv8l',\n        null,\n    ],\n    windows: ['Win16', 'Win32', 'Win64', 'WinCE'],\n};\n\nexport const isDesktopOs = () => {\n    const os = OSDetect();\n    return !!['windows', 'mac', 'linux'].find(system => system === os);\n};\n\nexport const isMobileOs = () =>\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nexport const OSDetect = () => {\n    // For testing purposes or more compatibility, if we set 'config.os'\n    // inside our localStorage, we ignore fetching information from\n    // navigator object and return what we have straight away.\n    if (localStorage.getItem('config.os')) {\n        return localStorage.getItem('config.os');\n    }\n    if (typeof navigator !== 'undefined' && navigator.platform) {\n        return Object.keys(systems)\n            .map(os => {\n                if (systems[os].some(platform => navigator.platform === platform)) {\n                    return os;\n                }\n                return false;\n            })\n            .filter(os => os)[0];\n    }\n\n    return 'Unknown OS';\n};\n\nexport const mobileOSDetect = () => {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n    // Windows Phone must come first because its UA also contains \"Android\"\n    if (/windows phone/i.test(userAgent)) {\n        return 'Windows Phone';\n    }\n\n    if (/android/i.test(userAgent)) {\n        return 'Android';\n    }\n\n    // iOS detection from: http://stackoverflow.com/a/9039885/177710\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n        return 'iOS';\n    }\n\n    return 'unknown';\n};\n","export const getSelectedRoute = ({ routes, pathname }) => {\n    const route = routes.find(r => r.path === pathname) || routes.find(r => r.default) || routes[0];\n    if (!route) return null;\n\n    return route;\n};\n","import moment from 'moment';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function(config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth()\n            ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY')\n            : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj\n        .hour(hour)\n        .minute(minute || 0)\n        .second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = time =>\n    moment(time || undefined)\n        .utc()\n        .format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\nexport const formatTime = (epoch, time_format = 'HH:mm:ss [GMT]') => toMoment(epoch).format(time_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = date => {\n    const diff = toMoment(date)\n        .startOf('day')\n        .diff(toMoment().startOf('day'), 'days');\n    return !date || diff < 0 ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration, format) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    const formatted_str = moment(0)\n        .hour(h)\n        .minute(m)\n        .seconds(s)\n        .format(format || 'HH:mm:ss');\n\n    return {\n        days: d,\n        timestamp: formatted_str,\n    };\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str =>\n    /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) =>\n    toMoment(date)\n        .clone()\n        .add(num_of_days, 'day');\n\n/**\n * add the specified number of weeks to the given date\n * @param {String} date        date\n * @param {Number} num_of_weeks number of days to add\n */\nexport const addWeeks = (date, num_of_weeks) =>\n    toMoment(date)\n        .clone()\n        .add(num_of_weeks, 'week');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) =>\n    toMoment(date)\n        .clone()\n        .add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) =>\n    toMoment(date)\n        .clone()\n        .add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) =>\n    toMoment(date)\n        .clone()\n        .subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) =>\n    toMoment(date)\n        .clone()\n        .subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) =>\n    toMoment(date)\n        .clone()\n        .subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = date =>\n    toMoment(date)\n        .clone()\n        .startOf('month')\n        .format('YYYY-MM-DD');\n\n/**\n * returns miliseconds into UTC formatted string\n * @param {Number} miliseconds miliseconds\n * @param {String} str_format formatting using moment e.g - YYYY-MM-DD HH:mm\n */\nexport const formatMiliseconds = (miliseconds, str_format) => moment.utc(miliseconds).format(str_format);\n\n/**\n * returns a new date string\n * @param {moment|string|epoch} date parameter\n * @param {String} from_date_format initial date format\n * @param {String} to_date_format to date format\n */\nexport const convertDateFormat = (date, from_date_format, to_date_format) =>\n    moment(date, from_date_format).format(to_date_format);\n","import { getCurrentProductionDomain } from '../config/config';\n\nconst default_domain = 'binary.com';\nconst host_map = {\n    // the exceptions regarding updating the URLs\n    'bot.binary.com': 'www.binary.bot',\n    'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n    'academy.binary.com': 'academy.binary.com',\n    'tech.binary.com': 'tech.binary.com',\n    'blog.binary.com': 'blog.binary.com',\n};\nlet location_url, static_host, default_language;\n\nexport const urlForLanguage = (target_language, url = window.location.href) =>\n    url.replace(new RegExp(`/${default_language}/`, 'i'), `/${(target_language || 'EN').trim().toLowerCase()}/`);\n\nexport const reset = () => {\n    location_url = window?.location ?? location_url;\n};\n\nexport const params = href => {\n    const arr_params = [];\n    const parsed = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n    let p_l = parsed.length;\n    while (p_l--) {\n        const param = parsed[p_l].split('=');\n        arr_params.push(param);\n    }\n    return arr_params;\n};\n\nexport const paramsHash = href => {\n    const param_hash = {};\n    const arr_params = params(href);\n    let param = arr_params.length;\n    while (param--) {\n        if (arr_params[param][0]) {\n            param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n        }\n    }\n    return param_hash;\n};\n\nexport const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\nexport const urlFor = (\n    path,\n    options = {\n        query_string: undefined,\n        legacy: false,\n        language: undefined,\n    }\n) => {\n    const { legacy, language, query_string } = options;\n\n    if (legacy && /^bot$/.test(path)) {\n        return `https://${host_map['bot.binary.com']}`;\n    }\n\n    const lang = language?.toLowerCase?.() ?? default_language;\n    let domain = `https://${window.location.hostname}/`;\n    if (legacy) {\n        if (/staging-app\\.deriv\\.com/.test(domain)) {\n            domain = domain.replace(/staging-app\\.deriv\\.com/, `staging.binary.com/${lang || 'en'}`);\n        } else if (/app\\.deriv\\.com|deriv\\.app/.test(domain)) {\n            // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n            domain = domain.replace(/app\\.deriv\\.com|deriv\\.app/, `binary.com/${lang || 'en'}`);\n        } else {\n            domain = `https://binary.com/${lang || 'en'}/`;\n        }\n    }\n    const new_url = `${domain}${normalizePath(path) || 'home'}.html${query_string ? `?${query_string}` : ''}`;\n\n    // replace old lang with new lang\n    return urlForLanguage(lang, new_url);\n};\n\nexport const urlForCurrentDomain = href => {\n    const current_domain = getCurrentProductionDomain();\n\n    if (!current_domain) {\n        return href; // don't change when domain is not supported\n    }\n\n    const url_object = new URL(href);\n    if (Object.keys(host_map).includes(url_object.hostname)) {\n        url_object.hostname = host_map[url_object.hostname];\n    } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n        // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n        url_object.hostname = url_object.hostname.replace(\n            new RegExp(`\\\\.${default_domain}`, 'i'),\n            `.${current_domain}`\n        );\n    } else {\n        return href;\n    }\n\n    return url_object.href;\n};\n\nexport const urlForStatic = (path = '') => {\n    if (!static_host || static_host.length === 0) {\n        static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n        if (static_host) {\n            static_host = static_host.getAttribute('src');\n        }\n\n        if (static_host?.length > 0) {\n            static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n        } else {\n            static_host = websiteUrl();\n        }\n    }\n\n    return static_host + path.replace(/(^\\/)/g, '');\n};\n\nexport const websiteUrl = () => `${location.protocol}//${location.hostname}/`;\n\nexport const getUrlBase = (path = '') => {\n    const l = window.location;\n\n    if (!/^\\/(br_)/.test(l.pathname)) return path;\n\n    return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n};\n\nexport const removeBranchName = (path = '') => {\n    return path.replace(/^\\/br_.*?\\//, '/');\n};\n\nexport const param = name => paramsHash()[name];\n\nexport const getHostMap = () => host_map;\n\nexport const resetStaticHost = () => {\n    static_host = undefined;\n};\n\nexport const setUrlLanguage = lang => {\n    default_language = lang;\n};\n\nexport const getDerivComLink = (path = '') => {\n    const host = 'https://deriv.com';\n    let lang = default_language?.toLowerCase();\n    if (lang && lang !== 'en') lang = `/${lang}`;\n    else lang = '';\n\n    return `${host}${lang}/${normalizePath(path)}`;\n};\n","export const showDigitalOptionsUnavailableError = (showError, message) => {\n    const { title, text, link } = message;\n    showError(\n        title,\n        text,\n        link,\n        () => (window.location.href = `${location.protocol}//${location.hostname}/mt5`),\n        false\n    );\n};\n","export const website_domain = 'app.deriv.com';\nexport const website_name = 'Deriv';\nexport const default_title = website_name;\nexport const TRACKING_STATUS_KEY = 'tracking_status';\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getKebabCase, getUrlBase } from '@deriv/shared';\n\nconst Icon = ({\n    className,\n    color,\n    custom_color,\n    height,\n    icon,\n    id,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    size = 16,\n    width,\n}) => {\n    if (!icon) return null;\n\n    let filename = 'common';\n    const filenames = /^Ic(Currency|Tradetype|Mt5|Flag|Underlying)/g.exec(icon);\n    if (filenames) {\n        filename = getKebabCase(filenames[1]);\n    }\n\n    const sprite_id = icon.startsWith('IcUnderlying')\n        ? `ic-underlying-${icon.split('IcUnderlying')[1].toUpperCase()}`\n        : getKebabCase(icon);\n\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            xmlnsXlink='http://www.w3.org/1999/xlink'\n            className={classNames('dc-icon', className, {\n                'dc-icon--active': color === 'active',\n                'dc-icon--disabled': color === 'disabled',\n                'dc-icon--green': color === 'green' || icon === 'IcProfit',\n                'dc-icon--red': color === 'red' || icon === 'IcLoss',\n                'dc-icon--secondary': color === 'secondary',\n                'dc-icon--brand': color === 'brand',\n            })}\n            height={height || size}\n            id={id}\n            width={width || size}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            style={\n                custom_color\n                    ? {\n                          '--fill-color1': custom_color,\n                      }\n                    : undefined\n            }\n        >\n            <use xlinkHref={`${getUrlBase(`/public/images/sprite/${filename}.svg`)}#${sprite_id}`} />\n        </svg>\n    );\n};\n\nIcon.propTypes = {\n    className: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    color: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    custom_color: PropTypes.string,\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    icon: PropTypes.string,\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default React.memo(Icon);\n","import Icon from './icon.jsx';\nimport './icon.scss';\n\nexport default Icon;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon';\n\nclass Accordion extends React.Component {\n    state = {\n        open_idx: null,\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.list !== prevProps.list) {\n            this.setState({ open_idx: null });\n        }\n    }\n\n    onClick(index) {\n        // close if clicking the accordion that's open, otherwise open the new one\n        this.setState({ open_idx: index === this.state.open_idx ? null : index });\n    }\n\n    render() {\n        const { list, className } = this.props;\n\n        return (\n            <div className={classNames('dc-accordion__wrapper', className)}>\n                {list.map((item, idx) => (\n                    <div\n                        className={classNames(\n                            'dc-accordion__item',\n                            `dc-accordion__item--${this.state.open_idx === idx ? 'open' : 'close'}`,\n                            {\n                                [`dc-accordion__item--${idx === 0 ? 'first' : 'last'}`]:\n                                    idx === 0 || idx === list.length - 1,\n                            }\n                        )}\n                        key={idx}\n                    >\n                        <div\n                            className='dc-accordion__item-header'\n                            onClick={() => {\n                                this.onClick(idx);\n                            }}\n                        >\n                            {item.header}\n                            <div className='dc-accordion__item-header-icon-wrapper'>\n                                {this.state.open_idx === idx ? (\n                                    <Icon icon='IcMinus' className='dc-accordion__item-header-icon' />\n                                ) : (\n                                    <Icon icon='IcAdd' className='dc-accordion__item-header-icon' />\n                                )}\n                            </div>\n                        </div>\n                        <div className='dc-accordion__item-content'>{item.content}</div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nAccordion.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Accordion;\n","import Accordion from './accordion.jsx';\nimport './accordion.scss';\n\nexport default Accordion;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass AutoHeightWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: props.default_height,\n            ref: null,\n        };\n    }\n\n    setHeight = height => this.setState({ height });\n    setRef = ref =>\n        this.setState({ ref }, () => {\n            this.updateHeight();\n        });\n    updateHeight = () =>\n        this.setHeight(\n            this.state.ref.clientHeight > this.props.default_height\n                ? this.state.ref.clientHeight - (this.props.height_offset || 0)\n                : this.props.default_height\n        );\n    componentDidMount() {\n        window.addEventListener('resize', this.updateHeight);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateHeight);\n    }\n\n    render() {\n        return this.props.children({\n            ...this.props,\n            height: this.state.height,\n            setRef: this.setRef,\n        });\n    }\n}\n\nAutoHeightWrapper.propTypes = {\n    default_height: PropTypes.any,\n    children: PropTypes.any,\n    height_offset: PropTypes.number,\n};\n\nexport default AutoHeightWrapper;\n","import AutoHeightWrapper from './auto-height-wrapper.jsx';\n\nexport default AutoHeightWrapper;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Field = ({ message, className, type }) => (\n    <p\n        className={classNames('dc-field', className, {\n            'dc-field--error': type === 'error',\n            'dc-field--warn': type === 'warn',\n        })}\n    >\n        {message}\n    </p>\n);\n\nField.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.bool]),\n    type: PropTypes.string.isRequired,\n};\n\nexport default Field;\n","import Field from './field.jsx';\nimport './field.scss';\n\nexport default Field;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Field from '../field';\n\nconst Input = (\n    {\n        className,\n        classNameError,\n        classNameWarn,\n        disabled,\n        error,\n        warn,\n        hint,\n        leading_icon,\n        has_character_counter,\n        max_characters,\n        trailing_icon,\n        label,\n        ...props\n    },\n    ref\n) => {\n    const [counter, setCounter] = React.useState(0);\n    const changeHandler = e => {\n        let input_value = e.target.value;\n        if (max_characters && input_value.length >= max_characters) {\n            input_value = input_value.slice(0, max_characters);\n        }\n        setCounter(input_value.length);\n        e.target.value = input_value;\n        props.onChange(e);\n    };\n    return (\n        <div\n            className={classNames('dc-input', className, {\n                'dc-input__disabled': disabled,\n                'dc-input--error': error,\n            })}\n        >\n            {leading_icon &&\n                React.cloneElement(leading_icon, {\n                    className: classNames('dc-input__leading-icon', leading_icon.props.className),\n                })}\n            {props.type === 'textarea' ? (\n                <textarea\n                    ref={ref}\n                    {...props}\n                    className={classNames('dc-input__field dc-input__textarea', {\n                        'dc-input__field--placeholder-visible': !label && props.placeholder,\n                    })}\n                    onChange={changeHandler}\n                    disabled={disabled}\n                />\n            ) : (\n                <input\n                    ref={ref}\n                    {...props}\n                    className={classNames('dc-input__field', {\n                        'dc-input__field--placeholder-visible': !label && props.placeholder,\n                    })}\n                    disabled={disabled}\n                />\n            )}\n            {trailing_icon &&\n                React.cloneElement(trailing_icon, {\n                    className: classNames('dc-input__trailing-icon', trailing_icon.props.className),\n                })}\n            {label && (\n                <label className='dc-input__label' htmlFor={props.id}>\n                    {label}\n                </label>\n            )}\n            {error && <Field className={classNameError} message={error} type='error' />}\n            {warn && <Field className={classNameWarn} message={warn} type='warn' />}\n            {!error && hint && <p className='dc-input__hint'>{hint}</p>}\n            {has_character_counter && (\n                <p className='dc-input__counter'>\n                    {counter}\n                    {max_characters ? `/${max_characters}` : ''}\n                </p>\n            )}\n        </div>\n    );\n};\n\nexport default React.forwardRef(Input);\n","import Input from './input.jsx';\nimport './input.scss';\n\nexport default Input;\n","import React from 'react';\n\nexport const useHover = refSetter => {\n    const [value, setValue] = React.useState(false);\n\n    const ref = refSetter || React.useRef(null);\n\n    const handleMouseOver = () => setValue(true);\n    const handleMouseOut = () => setValue(false);\n\n    React.useEffect(() => {\n        const node = ref.current;\n        if (node) {\n            node.addEventListener('mouseover', handleMouseOver);\n            node.addEventListener('mouseout', handleMouseOut);\n\n            return () => {\n                node.removeEventListener('mouseover', handleMouseOver);\n                node.removeEventListener('mouseout', handleMouseOut);\n            };\n        }\n        return null;\n    }, [ref.current]);\n\n    return [ref, value];\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useHover } from '../../hooks/use-hover';\n\nconst ThemedScrollbars = ({\n    children,\n    className,\n    height,\n    width,\n    autohide = true,\n    is_bypassed,\n    is_only_horizontal,\n    has_horizontal,\n    onScroll,\n    refSetter,\n}) => {\n    if (is_bypassed) return children;\n    const [hoverRef, isHovered] = useHover(refSetter);\n    return (\n        <div\n            ref={hoverRef}\n            className={classNames('dc-themed-scrollbars', className, {\n                'dc-themed-scrollbars__autohide': autohide,\n                'dc-themed-scrollbars__autohide--is-hovered': autohide && isHovered,\n                'dc-themed-scrollbars--has-horizontal': has_horizontal,\n                'dc-themed-scrollbars--only-horizontal': is_only_horizontal,\n            })}\n            style={{\n                maxHeight: height || '100%',\n                maxWidth: width || 'none',\n            }}\n            onScroll={onScroll}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default ThemedScrollbars;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport ThemedScrollbars from '../themed-scrollbars/themed-scrollbars.jsx';\n\nconst ListItem = ({\n    is_active,\n    is_disabled,\n    index,\n    item,\n    child_ref,\n    onItemSelection,\n    is_object_list,\n    setActiveIndex,\n}) => {\n    return (\n        <div\n            ref={child_ref}\n            // onMouseDown ensures the click handler runs before the onBlur event of Input\n            onMouseDown={() => {\n                onItemSelection(item);\n                setActiveIndex(index);\n            }}\n            className={classNames('dc-dropdown-list__item', {\n                'dc-dropdown-list__item--active': is_active,\n                'dc-dropdown-list__item--disabled': is_disabled,\n            })}\n            value={is_object_list ? item.value : null}\n        >\n            {is_object_list ? item.component || item.text : item}\n        </div>\n    );\n};\n\nconst ListItems = React.forwardRef((props, ref) => {\n    const { active_index, list_items, is_object_list, onItemSelection, setActiveIndex, not_found_text } = props;\n    const is_grouped_list = list_items.some(list_item => !!list_item.group);\n\n    if (is_grouped_list) {\n        const groups = {};\n\n        list_items.forEach(list_item => {\n            const group = list_item.group || '?';\n            if (!groups[group]) {\n                groups[group] = [];\n            }\n            groups[group].push(list_item);\n        });\n\n        const group_names = Object.keys(groups);\n        let item_idx = -1;\n\n        return (\n            <>\n                {group_names.map((group_name, group_idx) => {\n                    const group = groups[group_name];\n                    const has_separator = !!group_names[group_idx + 1];\n                    return (\n                        <React.Fragment key={`group${group_idx}`}>\n                            <div className='dc-dropdown-list__group-header'>{group_name}</div>\n                            {group.map(item => {\n                                item_idx++;\n                                return (\n                                    <ListItem\n                                        key={item_idx}\n                                        item={item}\n                                        index={item_idx}\n                                        is_active={item_idx === active_index}\n                                        onItemSelection={onItemSelection}\n                                        setActiveIndex={setActiveIndex}\n                                        is_object_list={is_object_list}\n                                        is_disabled={item.disabled === 'DISABLED'}\n                                        child_ref={item_idx === active_index ? ref : null}\n                                    />\n                                );\n                            })}\n                            {has_separator && <div className='dc-dropdown-list__separator' />}\n                        </React.Fragment>\n                    );\n                })}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {list_items.length ? (\n                list_items.map((item, item_idx) => (\n                    <ListItem\n                        key={item_idx}\n                        item={item}\n                        index={item_idx}\n                        is_active={item_idx === active_index}\n                        onItemSelection={onItemSelection}\n                        is_object_list={is_object_list}\n                        setActiveIndex={setActiveIndex}\n                        child_ref={item_idx === active_index ? ref : null}\n                    />\n                ))\n            ) : (\n                <div className={'dc-dropdown-list__item'}>{not_found_text}</div>\n            )}\n        </>\n    );\n});\nListItems.displayName = 'ListItems';\n\nconst DropdownList = React.forwardRef((props, ref) => {\n    const { dropdown_ref, list_item_ref, list_wrapper_ref } = ref;\n    const {\n        active_index,\n        is_visible,\n        list_items,\n        list_height,\n        onScrollStop,\n        onItemSelection,\n        setActiveIndex,\n        style,\n        not_found_text,\n    } = props;\n    if (list_items.length && typeof list_items[0] !== 'string' && typeof list_items[0] !== 'object') {\n        throw Error('Dropdown received wrong data structure');\n    }\n\n    const is_object = !Array.isArray(list_items) && typeof list_items === 'object';\n    const is_string_array = list_items.length && typeof list_items[0] === 'string';\n\n    return (\n        <CSSTransition\n            in={is_visible}\n            timeout={100}\n            classNames={{\n                enter: 'dc-dropdown-list--enter',\n                enterDone: 'dc-dropdown-list--enter-done',\n                exit: 'dc-dropdown-list--exit',\n            }}\n            unmountOnExit\n        >\n            <div style={style} className='dc-dropdown-list' ref={list_wrapper_ref}>\n                <ThemedScrollbars height={list_height || '220px'} refSetter={dropdown_ref} onScroll={onScrollStop}>\n                    {is_object ? (\n                        Object.keys(list_items).map((items, idx) => (\n                            <ListItems\n                                key={idx}\n                                not_found_text={not_found_text}\n                                active_index={active_index}\n                                list_items={list_items[items]}\n                                ref={list_item_ref}\n                                onItemSelection={onItemSelection}\n                                setActiveIndex={setActiveIndex}\n                            />\n                        ))\n                    ) : (\n                        <ListItems\n                            not_found_text={not_found_text}\n                            active_index={active_index}\n                            list_items={list_items}\n                            ref={list_item_ref}\n                            onItemSelection={onItemSelection}\n                            is_object_list={!is_string_array}\n                            setActiveIndex={setActiveIndex}\n                        />\n                    )}\n                </ThemedScrollbars>\n            </div>\n        </CSSTransition>\n    );\n});\nDropdownList.displayName = 'DropdownList';\n\nexport default DropdownList;\n\nconst list_items_shape = PropTypes.arrayOf(\n    PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n    })\n);\n\nDropdownList.propTypes = {\n    active_index: PropTypes.number,\n    is_visible: PropTypes.bool,\n    list_items: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        list_items_shape,\n        PropTypes.objectOf(list_items_shape),\n    ]),\n    list_height: PropTypes.string,\n    not_found_text: PropTypes.string,\n    onItemSelection: PropTypes.func,\n    style: PropTypes.object,\n};\n","import DropdownList from './dropdown-list.jsx';\nimport './dropdown-list.scss';\n\nexport default DropdownList;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../icon';\nimport Input from '../input';\nimport DropdownList from '../dropdown-list';\n\nconst KEY_CODE = {\n    ENTER: 13,\n    ESCAPE: 27,\n    TAB: 9,\n    KEYDOWN: 40,\n    KEYUP: 38,\n};\n\nconst getFilteredItems = (val, list) => {\n    const is_string_array = list.length && typeof list[0] === 'string';\n\n    return list.filter(item =>\n        is_string_array ? item.toLowerCase().includes(val) : item.text.toLowerCase().includes(val)\n    );\n};\nclass Autocomplete extends React.PureComponent {\n    dropdown_ref = React.createRef();\n    list_wrapper_ref = React.createRef();\n    list_item_ref = React.createRef();\n    scroll_timeout = null;\n    scrollTopPos = null;\n\n    state = {\n        should_show_list: false,\n        filtered_items: [...this.props.list_items],\n        input_value: '',\n        active_index: null,\n    };\n\n    componentDidUpdate(prev_props) {\n        if (prev_props.list_items !== this.props.list_items) {\n            this.setState({\n                input_value: '',\n                active_index: null,\n                filtered_items: this.props.list_items,\n            });\n        }\n    }\n\n    handleScrollStop = e => {\n        // pass onScrollStop func callback when scrolling stops\n        if (typeof this.props.onScrollStop !== 'function') return;\n        const element = e.target;\n        this.scrollTopPos = element.scrollTop;\n        if (this.scrollTopPos === element.scrollTop) {\n            clearTimeout(this.scroll_timeout);\n        }\n        this.scroll_timeout = setTimeout(() => {\n            this.props.onScrollStop();\n        }, 150);\n    };\n\n    setInputWrapperRef = node => (this.input_wrapper_ref = node);\n\n    onKeyPressed = event => {\n        const { active_index, filtered_items, should_show_list } = this.state;\n\n        switch (event.keyCode) {\n            case KEY_CODE.ENTER:\n                event.preventDefault();\n                this.hideDropdownList();\n                this.onItemSelection(filtered_items[active_index]);\n                break;\n            case KEY_CODE.TAB:\n                if (should_show_list) {\n                    this.hideDropdownList();\n                    this.onItemSelection(filtered_items[active_index]);\n                }\n                break;\n            case KEY_CODE.ESCAPE:\n                event.preventDefault();\n                this.hideDropdownList();\n                break;\n            case KEY_CODE.KEYDOWN:\n                if (!should_show_list) this.showDropdownList();\n                this.setActiveDown();\n                break;\n            case KEY_CODE.KEYUP:\n                if (!should_show_list) this.showDropdownList();\n                else this.setActiveUp();\n                break;\n            default:\n                if (!should_show_list) this.showDropdownList();\n                break;\n        }\n    };\n\n    setActiveIndex = index => this.setState({ active_index: index });\n\n    setActiveUp = () => {\n        const { active_index, filtered_items } = this.state;\n\n        if (typeof active_index === 'number') {\n            const up = active_index - 1;\n            const should_scroll_to_last = up < 0;\n\n            if (should_scroll_to_last) {\n                const list_height = this.dropdown_ref.current.clientHeight;\n                this.setState({ active_index: filtered_items.length - 1 });\n                this.dropdown_ref.current.scrollTo({ top: list_height, behavior: 'smooth' });\n            } else {\n                const item_height = this.list_item_ref.current.getBoundingClientRect().height;\n                const item_top = Math.floor(this.list_item_ref.current.getBoundingClientRect().top) - item_height;\n\n                if (!this.isListItemWithinView(item_top)) {\n                    const top_of_list = this.list_item_ref.current.offsetTop - item_height;\n                    this.dropdown_ref.current.scrollTo({ top: top_of_list, behavior: 'smooth' });\n                }\n                this.setState({ active_index: up });\n            }\n        }\n    };\n\n    isListItemWithinView(item_top) {\n        const list_height = this.dropdown_ref.current.clientHeight;\n        const wrapper_top = Math.floor(this.list_wrapper_ref.current.getBoundingClientRect().top);\n        const wrapper_bottom = Math.floor(this.list_wrapper_ref.current.getBoundingClientRect().top) + list_height;\n\n        if (item_top >= wrapper_bottom) return false;\n        return item_top > wrapper_top;\n    }\n\n    setActiveDown = () => {\n        const { active_index, filtered_items } = this.state;\n\n        if (active_index === null || !this.list_item_ref.current) {\n            this.setState({ active_index: 0 });\n        } else if (typeof active_index === 'number') {\n            const down = active_index + 1;\n            const should_scroll_to_first = down >= filtered_items.length;\n\n            if (should_scroll_to_first) {\n                this.setState({ active_index: 0 });\n                this.dropdown_ref.current.scrollTo({ top: 0, behavior: 'smooth' });\n            } else {\n                const item_height = this.list_item_ref.current.getBoundingClientRect().height;\n                const item_top =\n                    Math.floor(this.list_item_ref.current.getBoundingClientRect().top) + item_height + item_height / 2;\n                const list_height = this.dropdown_ref.current.clientHeight;\n\n                if (!this.isListItemWithinView(item_top)) {\n                    const items_above = list_height / item_height - 2;\n                    const bottom_of_list = this.list_item_ref.current.offsetTop - items_above * item_height;\n                    this.dropdown_ref.current.scrollTo({ top: bottom_of_list, behavior: 'smooth' });\n                }\n                this.setState({ active_index: down });\n            }\n        }\n    };\n\n    onBlur = e => {\n        e.preventDefault();\n        this.hideDropdownList();\n\n        this.setState({ filtered_items: this.props.list_items });\n\n        if (this.state.input_value === '' && typeof this.props.onItemSelection === 'function') {\n            this.props.onItemSelection({\n                text: this.props.not_found_text,\n                value: '',\n            });\n        }\n        if (typeof this.props.onBlur === 'function') {\n            this.props.onBlur(e);\n        }\n    };\n\n    onItemSelection = item => {\n        if (!item) return;\n\n        this.setState({ input_value: item.text ? item.text : item });\n\n        if (typeof this.props.onItemSelection === 'function') {\n            this.props.onItemSelection(item);\n        }\n    };\n\n    showDropdownList = () =>\n        this.setState({ should_show_list: true }, () => {\n            if (this.state.active_index && this.list_item_ref.current) {\n                const item = this.list_item_ref.current.offsetTop;\n                this.dropdown_ref.current.scrollTo({ top: item, behavior: 'smooth' });\n            }\n        });\n\n    hideDropdownList = () => {\n        this.setState({ should_show_list: false });\n\n        if (typeof this.props.onHideDropdownList === 'function') {\n            this.props.onHideDropdownList();\n        }\n    };\n\n    filterList = e => {\n        const val = e.target.value.toLowerCase();\n        const filtered_items = getFilteredItems(val, this.props.list_items);\n\n        if (!filtered_items.length) {\n            this.setState({ input_value: '' });\n        }\n        this.setState({ filtered_items });\n    };\n\n    render() {\n        const {\n            className,\n            dropdown_offset,\n            onItemSelection,\n            value,\n            list_items,\n            autoComplete,\n            onHideDropdownList,\n            onScrollStop,\n            ...otherProps\n        } = this.props;\n\n        return (\n            <div className={classNames('dc-autocomplete', className)}>\n                <div ref={this.setInputWrapperRef} className='dc-autocomplete__input-field'>\n                    <Input\n                        {...otherProps}\n                        className='dc-autocomplete__field'\n                        autoComplete={autoComplete}\n                        onKeyDown={this.onKeyPressed}\n                        onClick={() => {\n                            if (this.state.should_show_list) this.hideDropdownList();\n                            else this.showDropdownList();\n                        }}\n                        onInput={this.filterList}\n                        // Field's onBlur still needs to run to perform form functions such as validation\n                        onBlur={this.onBlur}\n                        value={\n                            // This allows us to let control of value externally (from <Form/>) or internally if used without form\n                            typeof onItemSelection === 'function' ? value : this.state.input_value\n                        }\n                        trailing_icon={\n                            <Icon\n                                icon='IcChevronDown'\n                                className={{\n                                    'dc-autocomplete__trailing-icon': true,\n                                    'dc-autocomplete__trailing-icon--opened': this.state.should_show_list,\n                                    'dc-autocomplete__trailing-icon--disabled': otherProps.disabled,\n                                }}\n                            />\n                        }\n                    />\n                </div>\n                <DropdownList\n                    ref={{\n                        dropdown_ref: this.dropdown_ref,\n                        list_item_ref: this.list_item_ref,\n                        list_wrapper_ref: this.list_wrapper_ref,\n                    }}\n                    active_index={this.state.active_index}\n                    style={{\n                        width: this.input_wrapper_ref ? `${this.input_wrapper_ref.offsetWidth}px` : '100%',\n                        marginTop: dropdown_offset ? `calc(-${dropdown_offset} + 8px)` : '8px', // 4px is the standard margin. In case of error, the list should overlap the error\n                        // TODO confirm placement of dropdown list and positioning of error\n                        // marginTop: form.errors[field.name] ? 'calc(4px - 18px)' : '4px', // 4px is the standard margin. In case of error, the list should overlap the error\n                    }}\n                    is_visible={this.state.should_show_list}\n                    list_items={this.state.filtered_items}\n                    list_height={this.props.list_height}\n                    // Autocomplete must use the `text` property and not the `value`, however DropdownList provides access to both\n                    onItemSelection={this.onItemSelection}\n                    setActiveIndex={this.setActiveIndex}\n                    onScrollStop={this.handleScrollStop}\n                    not_found_text={this.props.not_found_text}\n                />\n            </div>\n        );\n    }\n}\nAutocomplete.defaultProps = {\n    not_found_text: 'No results found',\n};\n\nexport default Autocomplete;\n\nAutocomplete.propTypes = {\n    list_items: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        PropTypes.arrayOf(\n            PropTypes.shape({\n                text: PropTypes.string.isRequired,\n                value: PropTypes.string.isRequired,\n            })\n        ),\n    ]),\n    list_height: PropTypes.string,\n    not_found_text: PropTypes.string,\n    onHideDropdownList: PropTypes.func,\n    onItemSelection: PropTypes.func,\n};\n","import Autocomplete from './autocomplete.jsx';\nimport './autocomplete.scss';\n\nexport default Autocomplete;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ className, id, is_fullscreen = true, is_slow_loading, status, theme }) => {\n    const theme_class = theme ? `barspinner-${theme}` : 'barspinner-light';\n    return (\n        <div\n            className={classNames(\n                'initial-loader',\n                {\n                    'initial-loader--fullscreen': is_fullscreen,\n                },\n                className\n            )}\n        >\n            <div id={id} className={classNames('initial-loader__barspinner', 'barspinner', theme_class)}>\n                {Array.from(new Array(5)).map((x, inx) => (\n                    <div\n                        key={inx}\n                        className={`initial-loader__barspinner--rect barspinner__rect barspinner__rect--${inx +\n                            1} rect${inx + 1}`}\n                    />\n                ))}\n            </div>\n            {is_slow_loading &&\n                status.map((text, inx) => (\n                    <h3 className='initial-loader__text' key={inx}>\n                        {text}\n                    </h3>\n                ))}\n        </div>\n    );\n};\n\nLoading.propTypes = {\n    className: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    is_fullscreen: PropTypes.bool,\n    is_slow_loading: PropTypes.bool,\n    status: PropTypes.array,\n    theme: PropTypes.string,\n};\nexport default Loading;\n","import React from 'react';\nimport Loading from '../loading/loading.jsx';\nimport '../loading/loading.scss';\n\nconst ButtonLoading = props => {\n    return <Loading {...props} is_fullscreen={false} className='initial-loader--btn' />;\n};\n\nexport default ButtonLoading;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ButtonLoading from './button_loading.jsx';\nimport Icon from '../icon';\n\nconst ButtonGroup = ({ children, className }) => (\n    <div className={classNames('dc-btn__group', className)}>{children}</div>\n);\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    green,\n    has_effect,\n    icon,\n    id,\n    is_disabled,\n    is_loading,\n    is_submit_success,\n    is_button_toggle,\n    large,\n    medium,\n    onClick,\n    rounded,\n    tabIndex,\n    text,\n    wrapperClassName,\n    type,\n    primary,\n    secondary,\n    small,\n    tertiary,\n    ...props\n}) => {\n    const classes = classNames(\n        'dc-btn',\n        {\n            'dc-btn__effect': has_effect,\n            'dc-btn--primary': primary,\n            'dc-btn--secondary': secondary,\n            'dc-btn--tertiary': tertiary,\n            'dc-btn--green': green,\n            'dc-btn__rounded': rounded,\n            'dc-btn__large': large,\n            'dc-btn__medium': medium,\n            'dc-btn__small': small,\n            'dc-btn__toggle': is_button_toggle,\n        },\n        className\n    );\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n            type={is_submit_success ? 'button' : type || 'submit'}\n            {...props}\n        >\n            {icon && <div className='dc-btn__icon'>{icon}</div>}\n            {text && !(is_loading || is_submit_success) && (\n                <span className={classNames('dc-btn__text', classNameSpan)}>\n                    {text[0].toUpperCase() + text.substr(1)}\n                </span>\n            )}\n            {is_loading && <ButtonLoading />}\n            {is_submit_success && <Icon icon='IcCheckmark' color='active' size={24} />}\n            {!text && children && <span className={classNames('dc-btn__text', classNameSpan)}>{children}</span>}\n        </button>\n    );\n    const wrapper = <div className={wrapperClassName}>{button}</div>;\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    classNameSpan: PropTypes.string,\n    green: PropTypes.bool,\n    has_effect: PropTypes.bool,\n    icon: PropTypes.node,\n    id: PropTypes.string,\n    is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    is_loading: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    is_submit_success: PropTypes.bool,\n    large: PropTypes.bool,\n    medium: PropTypes.bool,\n    onClick: PropTypes.func,\n    primary: PropTypes.bool,\n    rounded: PropTypes.bool,\n    secondary: PropTypes.bool,\n    small: PropTypes.bool,\n    tertiary: PropTypes.bool,\n    text: PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nButton.Group = ButtonGroup;\n\nexport default Button;\n","import Button from './button.jsx';\nimport './button.scss';\n\nexport default Button;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick, size = 'medium' }) => (\n    <Link\n        className={classNames('dc-btn dc-btn--primary', className, 'effect', `dc-btn__${size}`)}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children: PropTypes.object,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    size: PropTypes.string,\n    to: PropTypes.string,\n};\n\nexport default ButtonLink;\n","import ButtonLink from './button-link.jsx';\nimport './button-link.scss';\n\nexport default ButtonLink;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Highlight = ({ left, width, has_rounded_button }) => {\n    const border_radius_size = '4px';\n    const highlight_style = {\n        width,\n        left: 0,\n        transform: `translate3d(${left}px, 0, 0)`,\n    };\n\n    if (has_rounded_button) {\n        highlight_style.borderRadius = '4px';\n    } else {\n        Object.assign(highlight_style, {\n            borderTopLeftRadius: left === 0 ? border_radius_size : 0,\n            borderTopRightRadius: left === 0 ? 0 : border_radius_size,\n            borderBottomLeftRadius: left === 0 ? border_radius_size : 0,\n            borderBottomRightRadius: left === 0 ? 0 : border_radius_size,\n        });\n    }\n\n    return <span style={highlight_style} className='dc-button-menu--highlight' />;\n};\n\nHighlight.propTypes = {\n    left: PropTypes.number,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_rounded_button: PropTypes.bool,\n};\n\nexport { Highlight };\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Highlight } from './button-highlight.jsx';\n\nclass HighlightWrapper extends React.PureComponent {\n    state = {\n        left: 0,\n        width: 0,\n    };\n\n    componentDidMount() {\n        const active_button_el = [...this.node.getElementsByClassName('dc-button-menu__button--active')][0];\n        if (!this.node) return;\n        this.updateHighlightPosition(active_button_el);\n    }\n\n    componentDidUpdate() {\n        const active_button_el = [...this.node.getElementsByClassName('dc-button-menu__button--active')][0];\n        if (active_button_el) {\n            this.updateHighlightPosition(active_button_el);\n        } else if (this.state.left !== 0) {\n            this.resetHighlight(); // clear highlight when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        this.resetHighlight();\n    }\n\n    onClick = (e, buttonClick) => {\n        if (!e.target) return;\n        this.updateHighlightPosition(e.target.closest('button'));\n        if (typeof buttonClick === 'function') {\n            buttonClick();\n        }\n    };\n\n    resetHighlight = () => {\n        this.setState({ left: 0 });\n    };\n\n    updateHighlightPosition = el => {\n        if (!el) return;\n        const { offsetLeft: left } = el;\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { children, className, has_rounded_button, ...other_props } = this.props;\n        const props = {\n            className: classnames('dc-button-menu__wrapper', className),\n            ...other_props,\n        };\n        const button_width = (100 / children.length).toFixed(2);\n\n        return (\n            <div ref={node => (this.node = node)} {...props}>\n                {React.Children.map(children, child =>\n                    React.cloneElement(child, {\n                        onClick: e => this.onClick(e, child.props.onClick),\n                    })\n                )}\n                <Highlight left={this.state.left} width={`${button_width}%`} has_rounded_button={has_rounded_button} />\n            </div>\n        );\n    }\n}\n\nHighlightWrapper.propTypes = {\n    children: PropTypes.array,\n    className: PropTypes.string,\n    has_rounded_button: PropTypes.bool,\n    timeout: PropTypes.number,\n};\n\nexport default HighlightWrapper;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Counter = ({ className, count }) => {\n    return <div className={classNames('dc-counter', className)}>{count}</div>;\n};\n\nCounter.propTypes = {\n    className: PropTypes.string,\n    count: PropTypes.number,\n};\n\nexport default Counter;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport HighlightWrapper from './button-highlight-wrapper.jsx';\nimport Button from '../button/button.jsx';\nimport Counter from '../counter/counter.jsx';\n\nconst ButtonToggle = ({ buttons_arr, className, id, is_animated, name, onChange, value, has_rounded_button }) => {\n    const changeValue = selected_value => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const menuClassNames = classNames('dc-button-menu__button', {\n            'dc-button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                id={`dc_${val.value}_toggle_item`}\n                key={idx}\n                onClick={() => changeValue(val.value)}\n                className={menuClassNames}\n                is_button_toggle\n            >\n                {`${val.text.charAt(0).toUpperCase()}${val.text.slice(1)}`}\n                {!!val.count && <Counter className='dc-button-menu__counter' count={val.count} />}\n            </Button>\n        );\n    });\n    return (\n        <div id={id} className={classNames('dc-button-menu', className)}>\n            {is_animated ? (\n                <HighlightWrapper has_rounded_button={has_rounded_button}>{menu}</HighlightWrapper>\n            ) : (\n                <React.Fragment>{menu}</React.Fragment>\n            )}\n        </div>\n    );\n};\n\nButtonToggle.propTypes = {\n    buttons_arr: PropTypes.array,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    is_animated: PropTypes.bool,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    has_rounded_button: PropTypes.bool,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default ButtonToggle;\n","import ButtonToggle from './button-toggle.jsx';\nimport './button-toggle.scss';\n\nexport default ButtonToggle;\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    isPeriodDisabled: PropTypes.func,\n    selected_date: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    updateSelected: PropTypes.func,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TinyPopover, { ArrowContainer } from 'react-tiny-popover';\nimport Icon from '../icon';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            is_bubble_open: false,\n            popover_ref: undefined,\n        };\n\n        this.setWrapperRef = ref => (this.wrapper_ref = ref);\n    }\n\n    componentDidMount() {\n        this.setState({ is_open: this.props.has_error });\n\n        if (this.wrapper_ref) {\n            this.setState({ popover_ref: this.wrapper_ref });\n        }\n    }\n\n    toggleOpen = () => {\n        this.setState({ is_open: Boolean(this.props.message) });\n    };\n\n    toggleClose = () => {\n        if (this.props.is_bubble_hover_enabled) {\n            this.toggleIsOpenOnHoverPopoverBubble();\n        } else {\n            this.setState({ is_open: false });\n        }\n    };\n\n    onMouseEnter = () => {\n        this.setState({ is_bubble_open: true });\n    };\n\n    onMouseLeave = () => {\n        this.setState({ is_bubble_open: false, is_open: false });\n    };\n\n    toggleIsOpenOnHoverPopoverBubble = () => {\n        setTimeout(() => {\n            // add delay to check if mouse is hovered on popover bubble\n            this.setState({ is_open: this.props.is_bubble_hover_enabled ? this.state.is_bubble_open : false });\n        }, 50);\n    };\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            counter,\n            disable_message_icon,\n            disable_target_icon,\n            has_error,\n            icon,\n            id,\n            is_open,\n            margin,\n            message,\n            zIndex,\n            relative_render,\n        } = this.props;\n\n        const has_external_open_state = is_open !== undefined;\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n\n        return (\n            <div className={classNames({ 'dc-popover__wrapper': relative_render })}>\n                {relative_render && (\n                    <div className='dc-popover__container' style={{ zIndex: zIndex || 1 }}>\n                        <div ref={this.setWrapperRef} className='dc-popover__container-relative' />\n                    </div>\n                )}\n                {(this.state.popover_ref || !relative_render) && (\n                    <TinyPopover\n                        isOpen={is_open ?? this.state.is_open}\n                        position={alignment}\n                        transitionDuration={0.25}\n                        padding={margin + 8}\n                        contentDestination={relative_render ? this.state.popover_ref : document.body}\n                        {...(relative_render\n                            ? {\n                                  contentLocation: ({ targetRect, popoverRect, nudgedLeft }) => {\n                                      const screen_width = document.body.clientWidth;\n                                      const total_width = targetRect.right + (popoverRect.width - targetRect.width / 2);\n                                      let top_offset = 0;\n                                      let left_offset = 0;\n\n                                      switch (alignment) {\n                                          case 'left': {\n                                              left_offset =\n                                                  Math.abs(\n                                                      (popoverRect.height > popoverRect.width\n                                                          ? nudgedLeft\n                                                          : popoverRect.width) + margin\n                                                  ) * -1;\n                                              top_offset =\n                                                  targetRect.height > popoverRect.height\n                                                      ? (targetRect.height - popoverRect.height) / 2\n                                                      : ((popoverRect.height - targetRect.height) / 2) * -1;\n                                              break;\n                                          }\n                                          case 'right': {\n                                              left_offset = popoverRect.width + margin;\n                                              top_offset =\n                                                  targetRect.height > popoverRect.height\n                                                      ? (targetRect.height - popoverRect.height) / 2\n                                                      : ((popoverRect.height - targetRect.height) / 2) * -1;\n                                              break;\n                                          }\n                                          case 'top': {\n                                              left_offset =\n                                                  total_width > screen_width\n                                                      ? Math.abs(total_width - screen_width) * -1\n                                                      : 0;\n                                              top_offset = Math.abs(popoverRect.height + margin) * -1;\n                                              break;\n                                          }\n                                          case 'bottom': {\n                                              left_offset =\n                                                  total_width > screen_width\n                                                      ? Math.abs(total_width - screen_width) * -1\n                                                      : 0;\n                                              top_offset = targetRect.height + margin;\n                                              break;\n                                          }\n                                          default:\n                                              break;\n                                      }\n                                      return {\n                                          top: top_offset,\n                                          left: left_offset,\n                                      };\n                                  },\n                              }\n                            : { containerStyle: { zIndex: zIndex || 1 } })}\n                        content={({ position, targetRect, popoverRect }) => {\n                            return (\n                                <ArrowContainer\n                                    position={position}\n                                    targetRect={targetRect}\n                                    popoverRect={popoverRect}\n                                    arrowColor={has_error ? 'var(--status-danger)' : 'var(--general-active)'}\n                                    arrowSize={5}\n                                >\n                                    <div\n                                        id={id}\n                                        className={classNames(classNameBubble, 'dc-popover__bubble', {\n                                            'dc-popover__bubble--error': has_error,\n                                        })}\n                                        onMouseEnter={this.onMouseEnter}\n                                        onMouseLeave={this.onMouseLeave}\n                                    >\n                                        {!disable_message_icon && icon === 'info' && (\n                                            <i className='dc-popover__bubble__icon'>\n                                                <Icon icon='IcInfoBlue' />\n                                            </i>\n                                        )}\n                                        <span\n                                            className={classNames('dc-popover__bubble__text', {\n                                                'dc-popover__bubble__text--error': has_error,\n                                            })}\n                                        >\n                                            {message}\n                                        </span>\n                                    </div>\n                                </ArrowContainer>\n                            );\n                        }}\n                    >\n                        <div\n                            className={classNames('dc-popover', className)}\n                            id={id}\n                            onMouseEnter={has_external_open_state ? undefined : this.toggleOpen}\n                            onMouseLeave={has_external_open_state ? undefined : this.toggleClose}\n                        >\n                            <div className={classNames(classNameTarget, 'dc-popover__target')}>\n                                {!disable_target_icon && (\n                                    <i\n                                        className={\n                                            message ? 'dc-popover__target__icon' : 'dc-popover__target__icon--disabled'\n                                        }\n                                    >\n                                        {icon === 'info' && <Icon icon='IcInfoOutline' className={icon_class_name} />}\n                                        {icon === 'question' && <Icon icon='IcUnknown' className={icon_class_name} />}\n                                        {icon === 'dot' && (\n                                            <Icon icon='IcCircle' className={icon_class_name} size={4} />\n                                        )}\n                                        {icon === 'counter' && <span className={icon_class_name}>{counter}</span>}\n                                    </i>\n                                )}\n\n                                {children}\n                            </div>\n                        </div>\n                    </TinyPopover>\n                )}\n            </div>\n        );\n    }\n}\n\nPopover.defaultProps = {\n    portal_container: 'deriv_app',\n    margin: 0,\n    relative_render: false,\n};\n\nPopover.propTypes = {\n    alignment: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    classNameBubble: PropTypes.string,\n    classNameTarget: PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    counter: PropTypes.number,\n    disable_message_icon: PropTypes.bool,\n    disable_target_icon: PropTypes.bool,\n    has_error: PropTypes.bool,\n    icon: PropTypes.oneOf(['info', 'question', 'dot', 'counter']),\n    id: PropTypes.string,\n    is_bubble_hover_enabled: PropTypes.bool,\n    is_open: PropTypes.bool,\n    relative_render: PropTypes.bool,\n    margin: PropTypes.number,\n    message: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.string]),\n    portal_container: PropTypes.string,\n    zIndex: PropTypes.number,\n};\n\nexport default Popover;\n","import Popover from './popover.jsx';\nimport './popover.scss';\n\nexport default Popover;\n","import { toMoment } from '@deriv/shared';\n\n// TODO: localize\nexport const month_headers = {\n    Jan: 'Jan',\n    Feb: 'Feb',\n    Mar: 'Mar',\n    Apr: 'Apr',\n    May: 'May',\n    Jun: 'Jun',\n    Jul: 'Jul',\n    Aug: 'Aug',\n    Sep: 'Sep',\n    Oct: 'Oct',\n    Nov: 'Nov',\n    Dec: 'Dec',\n};\n\nexport const week_headers = {\n    Monday: 'Monday',\n    Tuesday: 'Tuesday',\n    Wednesday: 'Wednesday',\n    Thursday: 'Thursday',\n    Friday: 'Friday',\n    Saturday: 'Saturday',\n    Sunday: 'Sunday',\n};\n\nexport const week_headers_abbr = {\n    Monday: 'M',\n    Tuesday: 'T',\n    Wednesday: 'W',\n    Thursday: 'T',\n    Friday: 'F',\n    Saturday: 'S',\n    Sunday: 'S',\n};\n\nexport const getDaysOfTheWeek = day => {\n    const days_of_the_week = {\n        Mondays: 1,\n        Tuesdays: 2,\n        Wednesdays: 3,\n        Thursdays: 4,\n        Fridays: 5,\n        Saturdays: 6,\n        Sundays: 0,\n    };\n\n    return days_of_the_week[day];\n};\n\nexport const getDecade = moment_date => {\n    const year = toMoment(moment_date).year();\n    const decade_start_year = year - (year % 10) + 1;\n    return `${decade_start_year}-${decade_start_year + 9}`;\n};\n\nexport const getCentury = moment_date => {\n    const year = toMoment(moment_date).year();\n    const decade_start_year = year - (year % 10) + 1;\n    return `${decade_start_year}-${decade_start_year + 99}`;\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    epochToMoment,\n    subDays,\n    subMonths,\n    toMoment,\n    padLeft,\n} from '@deriv/shared';\n\nimport { CommonPropTypes } from './types';\nimport Popover from '../../popover';\nimport { getDaysOfTheWeek, week_headers_abbr } from '../helpers';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    hide_others,\n    events,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    disabled_days,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days = [];\n    const moment_today = toMoment().startOf('day');\n    const moment_cur_date = toMoment(calendar_date);\n    const num_of_days = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end = moment_cur_date.clone().endOf('month');\n    const moment_selected =\n        typeof selected_date === 'number'\n            ? epochToMoment(selected_date).startOf('day')\n            : toMoment(selected_date).startOf('day');\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1)\n        .endOf('month')\n        .day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1)\n        .startOf('month')\n        .day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map(date => {\n        const moment_date = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active = selected_date && moment_date.isSame(moment_selected);\n        const is_today = moment_date.isSame(moment_today, 'day');\n\n        const calendar_events = events.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day())\n        );\n        const has_events = !!calendar_events.length;\n        const is_closes_early = calendar_events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message = calendar_events.map(event => event.descrip)[0] || '';\n        const duration_from_today = daysFromTodayTo(date);\n        const is_between = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && moment_date.isBefore(moment_start_date)) ||\n            // check if weekends are disabled\n            disabled_days.some(day => toMoment(date).day() === day) ||\n            // check if date falls on holidays, and doesn't close early or opens late\n            (has_events && !is_closes_early);\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('dc-calendar__cell', {\n                    'dc-calendar__cell--active': is_active,\n                    'dc-calendar__cell--today': is_today,\n                    'dc-calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'dc-calendar__cell--today-duration': is_today && has_range_selection,\n                    'dc-calendar__cell--disabled': is_disabled,\n                    'dc-calendar__cell--is-hidden': is_other_month && hide_others,\n                    'dc-calendar__cell--other': is_other_month,\n                    'dc-calendar__cell--between-hover': is_between_hover && has_range_selection,\n                    'dc-calendar__cell--between': is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : e => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${duration_from_today === 1 ? 'Day' : 'Days'}`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {(has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date && (\n                    <Popover\n                        alignment='top'\n                        classNameTarget='dc-calendar__cell-tooltip'\n                        classNameTargetIcon='dc-calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                )}\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst Days = props => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='dc-calendar__body dc-calendar__body--date'>\n            {Object.keys(week_headers_abbr).map((item, idx) => (\n                <span key={idx} className='dc-calendar__text dc-calendar__text--bold'>\n                    {week_headers_abbr[item]}\n                </span>\n            ))}\n            {days}\n        </div>\n    );\n};\n\nDays.defaultProps = {\n    events: [],\n    disabled_days: [],\n};\n\nDays.propTypes = {\n    ...CommonPropTypes,\n    date_format: PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    events: PropTypes.arrayOf(\n        PropTypes.shape({\n            dates: PropTypes.array,\n            descrip: PropTypes.string,\n        })\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    start_date: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    disabled_days: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Days;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport { CommonPropTypes } from './types';\nimport { month_headers } from '../helpers';\n\nconst Months = ({ calendar_date, isPeriodDisabled, selected_date, updateSelected }) => {\n    const moment_date = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='dc-calendar__body dc-calendar__body--month'>\n            {Object.keys(month_headers).map((month, idx) => {\n                const is_active =\n                    month === moment_selected_date.clone().format('MMM') &&\n                    moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('dc-calendar__cell', {\n                            'dc-calendar__cell--active': is_active,\n                            'dc-calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : e => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nMonths.propTypes = { ...CommonPropTypes };\n\nexport default Months;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport { CommonPropTypes } from './types';\nimport { getDecade } from '../helpers';\n\nconst Years = ({ calendar_date, isPeriodDisabled, selected_date, updateSelected }) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='dc-calendar__body dc-calendar__body--year'>\n            {years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled = isPeriodDisabled(moment_date.clone().year(year), 'year', 'body');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('dc-calendar__cell', {\n                            'dc-calendar__cell--active': year === moment_selected.year(),\n                            'dc-calendar__cell--other': is_other_decade,\n                            'dc-calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : e => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nYears.propTypes = { ...CommonPropTypes };\n\nexport default Years;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport { CommonPropTypes } from './types';\nimport { getCentury, getDecade } from '../helpers';\n\nconst Decades = ({ calendar_date, isPeriodDisabled, selected_date, updateSelected }) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date = toMoment(calendar_date);\n    const start_year = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='dc-calendar__body dc-calendar__body--decade'>\n            {decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active = +start_of_decade === moment_selected.year();\n                const is_disabled =\n                    isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('dc-calendar__cell', {\n                            'dc-calendar__cell--active': is_active,\n                            'dc-calendar__cell--disabled': is_disabled,\n                            'dc-calendar__cell--other': is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : e => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nDecades.propTypes = { ...CommonPropTypes };\n\nexport default Decades;\n","import React from 'react';\nimport Days from './calendar-days.jsx';\nimport Months from './calendar-months.jsx';\nimport Years from './calendar-years.jsx';\nimport Decades from './calendar-decades.jsx';\n\nconst Views = ({ children }) => <>{children}</>;\n\nViews.Days = Days;\nViews.Months = Months;\nViews.Years = Years;\nViews.Decades = Decades;\n\nexport default Views;\n","import Views from './views.jsx';\n\nexport default Views;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Views from './views';\n\nconst Body = props => {\n    const calendar_body = {\n        date: <Views.Days {...props} />,\n        month: <Views.Months {...props} />,\n        year: <Views.Years {...props} />,\n        decade: <Views.Decades {...props} />,\n    };\n\n    return <>{calendar_body[props.calendar_view]}</>;\n};\n\nBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default Body;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon';\n\nconst Button = ({ children, className, is_disabled, is_hidden, icon, label, onClick }) => (\n    <>\n        {!is_hidden && (\n            <span\n                className={classNames('dc-calendar__btn', className, {\n                    'dc-calendar__btn--disabled': is_disabled,\n                    'dc-calendar__btn--is-hidden': is_hidden,\n                })}\n                onClick={onClick}\n            >\n                {label}\n                {icon && (\n                    <Icon icon={icon} className='dc-calendar__icon' color={is_disabled ? 'disabled' : undefined} />\n                )}\n                {children}\n            </span>\n        )}\n    </>\n);\n\nButton.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n    className: PropTypes.string,\n    icon: PropTypes.string,\n    is_disabled: PropTypes.bool,\n    is_hidden: PropTypes.bool,\n    label: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from './calendar-button.jsx';\n\nconst FooterIcon = use_icon => use_icon || 'IcCalendarToday';\n\nconst Footer = ({ footer, has_today_btn, onClick, use_icon, has_clear_btn, clear_text, onClear }) => (\n    <>\n        {(has_today_btn || footer || has_clear_btn) && (\n            <div className='dc-calendar__footer'>\n                {footer && <span className='dc-calendar__text'>{footer}</span>}\n                {has_today_btn && (\n                    <Button className='dc-calendar__btn--today' icon={FooterIcon(use_icon)} onClick={onClick} />\n                )}\n                {has_clear_btn && (\n                    <Button secondary small className='dc-calendar__btn' onClick={onClear} text={clear_text} />\n                )}\n            </div>\n        )}\n    </>\n);\n\nFooter.propTypes = {\n    clear_text: PropTypes.string,\n    footer: PropTypes.string,\n    has_clear_btn: PropTypes.bool,\n    has_today_btn: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClear: PropTypes.func,\n    use_icon: PropTypes.string,\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { addMonths, addYears, subMonths, subYears, toMoment } from '@deriv/shared';\nimport Button from './calendar-button.jsx';\nimport { month_headers, getCentury, getDecade } from './helpers';\n\nconst Header = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    hide_disabled_periods,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view = calendar_view === 'date';\n    const is_month_view = calendar_view === 'month';\n    const is_year_view = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view) num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled =\n        isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n    const should_hide_next_month = is_next_month_disabled && hide_disabled_periods;\n    const should_hide_prev_month = is_prev_month_disabled && hide_disabled_periods;\n    const should_hide_prev_year = is_prev_year_disabled && hide_disabled_periods;\n    const should_hide_next_year = is_next_year_disabled && hide_disabled_periods;\n\n    const onClickPrevYear = !(is_prev_year_disabled || should_hide_prev_year)\n        ? () => navigateTo(subYears(calendar_date, num_of_years))\n        : undefined;\n\n    const onClickNextYear = !(is_next_year_disabled || should_hide_next_year)\n        ? () => navigateTo(addYears(calendar_date, num_of_years))\n        : undefined;\n\n    const onClickPrevMonth = !(is_prev_month_disabled || should_hide_prev_month)\n        ? () => navigateTo(subMonths(calendar_date, 1))\n        : undefined;\n\n    const onClickNextMonth = !(is_next_month_disabled || should_hide_next_month)\n        ? () => navigateTo(addMonths(calendar_date, 1))\n        : undefined;\n\n    return (\n        <div className='dc-calendar__header'>\n            <Button\n                className='dc-calendar__btn--prev-year'\n                icon='IcChevronDoubleLeft'\n                is_disabled={is_prev_year_disabled}\n                is_hidden={should_hide_prev_year}\n                onClick={onClickPrevYear}\n            />\n            <Button\n                className='dc-calendar__btn--prev-month'\n                icon='IcChevronLeft'\n                is_disabled={is_prev_month_disabled}\n                is_hidden={!is_date_view || should_hide_prev_month}\n                onClick={onClickPrevMonth}\n            />\n\n            <>\n                {is_date_view && (\n                    <Button\n                        className='dc-calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => (disable_month_selector ? undefined : switchView('month'))}\n                    />\n                )}\n                {(is_date_view || is_month_view) && (\n                    <Button\n                        className='dc-calendar__btn--select'\n                        is_disabled={is_select_year_disabled}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => (is_select_year_disabled ? undefined : switchView('year'))}\n                    />\n                )}\n                {(is_year_view || is_decade_view) && (\n                    <Button\n                        className='dc-calendar__btn--select'\n                        is_disabled={is_select_year_disabled}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        {is_year_view && `${decade}`}\n                        {is_decade_view && `${century}`}\n                    </Button>\n                )}\n            </>\n\n            <Button\n                className='dc-calendar__btn--next-month'\n                icon='IcChevronRight'\n                is_disabled={is_next_month_disabled}\n                is_hidden={!is_date_view || should_hide_next_month}\n                onClick={onClickNextMonth}\n            />\n            <Button\n                className='dc-calendar__btn--next-year'\n                icon='IcChevronDoubleRight'\n                is_disabled={is_next_year_disabled}\n                is_hidden={should_hide_next_year}\n                onClick={onClickNextYear}\n            />\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    calendar_date: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number]),\n    calendar_view: PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector: PropTypes.bool,\n    hide_disabled_periods: PropTypes.bool,\n    isPeriodDisabled: PropTypes.func,\n    navigateTo: PropTypes.func,\n    switchView: PropTypes.func,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getStartOfMonth, toMoment } from '@deriv/shared';\nimport Body from './calendar-body.jsx';\nimport Footer from './calendar-footer.jsx';\nimport Header from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value, // selected date\n            calendar_view: this.props.calendar_view || 'date',\n            hovered_date: '',\n        };\n    }\n\n    componentDidMount() {\n        if (typeof this.props.onRef === 'function') {\n            this.props.onRef(this);\n        }\n    }\n\n    componentWillUnmount() {\n        if (typeof this.props.onRef === 'function') {\n            this.props.onRef(undefined);\n        }\n    }\n\n    switchView = view => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = new_date => {\n        this.setState(\n            {\n                calendar_date: toMoment(new_date).format(this.props.date_format),\n            },\n            () => {\n                if (this.props.onChangeCalendarMonth) {\n                    const start_of_month = getStartOfMonth(new_date);\n                    this.props.onChangeCalendarMonth(start_of_month);\n                }\n            }\n        );\n    };\n\n    onMouseOver = event => {\n        const target = event.currentTarget;\n\n        if (\n            !target.classList.contains('dc-calendar__cell--disabled') &&\n            !target.classList.contains('dc-calendar__cell--hover')\n        ) {\n            target.className += ' dc-calendar__cell--hover';\n            this.setState(\n                {\n                    hovered_date: target.getAttribute('data-date'),\n                },\n                () => {\n                    if (this.props.onHover) {\n                        this.props.onHover(this.state.hovered_date);\n                    }\n                }\n            );\n        }\n    };\n\n    onMouseLeave = event => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('dc-calendar__cell--hover')) {\n            target.classList.remove('dc-calendar__cell--hover');\n\n            this.setState(\n                {\n                    hovered_date: null,\n                },\n                () => {\n                    if (this.props.onHover) {\n                        this.props.onHover(this.state.selected_date);\n                    }\n                }\n            );\n        }\n    };\n\n    updateSelectedDate = e => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before = moment_date.isBefore(toMoment(min_date));\n        const is_after = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date, this.props.keep_open);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month: 'date',\n            year: 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)\n            [type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0])\n            .format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState(\n            {\n                calendar_date: date,\n                calendar_view: view_map[type],\n            },\n            () => {\n                if (this.props.onChangeCalendarMonth) {\n                    const start_of_month = getStartOfMonth(date);\n                    this.props.onChangeCalendarMonth(start_of_month);\n                }\n            }\n        );\n    };\n\n    setSelectedDate = date => {\n        const moment_date = toMoment(date).startOf('day');\n        const formatted_date = moment_date.format(this.props.date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date)\n            .clone()\n            .startOf(unit);\n        const end_of_period = toMoment(date)\n            .clone()\n            .endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date)) || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const {\n            date_format,\n            footer,\n            has_today_btn,\n            has_range_selection,\n            events,\n            start_date,\n            disabled_days,\n        } = this.props;\n        const { calendar_date, calendar_view, selected_date } = this.state;\n\n        return (\n            <div ref={this.props.forward_ref} className='dc-calendar' data-value={selected_date}>\n                <Header\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <Body\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    disabled_days={disabled_days}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    events={events}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <Footer footer={footer} has_today_btn={has_today_btn} onClick={this.setToday} />\n            </div>\n        );\n    }\n}\n\nCalendar.Body = Body;\nCalendar.Header = Header;\nCalendar.Footer = Footer;\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date: '1970-01-01', // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date: toMoment()\n        .add(120, 'y')\n        .format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format: PropTypes.string,\n    footer: PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    holidays: PropTypes.arrayOf(\n        PropTypes.shape({\n            dates: PropTypes.array,\n            descrip: PropTypes.string,\n        })\n    ),\n    max_date: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    min_date: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect: PropTypes.func,\n    start_date: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    disable_days: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import Calendar from './calendar.jsx';\nimport './calendar.scss';\n\nexport default Calendar;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Popover from '../popover';\nimport Icon from '../icon';\n\nconst Clipboard = ({ text_copy, info_message, success_message, className, popoverClassName }) => {\n    const [is_copied, setIsCopied] = React.useState(false);\n    let timeout_clipboard = null;\n\n    const copyToClipboard = text => {\n        const textField = document.createElement('textarea');\n        textField.innerText = text;\n        document.body.appendChild(textField);\n        textField.select();\n        document.execCommand('copy');\n        textField.remove();\n    };\n\n    const onClick = () => {\n        copyToClipboard(text_copy);\n        setIsCopied(true);\n        timeout_clipboard = setTimeout(() => {\n            setIsCopied(false);\n        }, 2000);\n    };\n\n    React.useEffect(() => {\n        return () => clearTimeout(timeout_clipboard);\n    }, []);\n\n    return (\n        <>\n            {!is_copied && (\n                <Popover\n                    alignment='bottom'\n                    classNameBubble={classNames('dc-clipboard__popover', popoverClassName)}\n                    is_bubble_hover_enabled\n                    message={info_message}\n                >\n                    <Icon\n                        icon='IcClipboard'\n                        custom_color='var(--text-less-prominent)'\n                        className={classNames('dc-clipboard', className)}\n                        onClick={onClick}\n                    />\n                </Popover>\n            )}\n            {is_copied && (\n                <Popover\n                    alignment='bottom'\n                    classNameBubble={classNames('dc-clipboard__popover', popoverClassName)}\n                    is_bubble_hover_enabled\n                    message={success_message}\n                    relative_render\n                >\n                    <Icon\n                        icon='IcCheckmarkCircle'\n                        custom_color='var(--status-success)'\n                        className={classNames('dc-clipboard', className)}\n                    />\n                </Popover>\n            )}\n        </>\n    );\n};\nClipboard.propTypes = {\n    text_copy: PropTypes.string,\n    info_message: PropTypes.string,\n    success_message: PropTypes.string,\n    className: PropTypes.string,\n    popoverClassName: PropTypes.string,\n};\nexport default Clipboard;\n","import Clipboard from './clipboard.jsx';\nimport './clipboard.scss';\n\nexport default Clipboard;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon';\n\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: props.defaultChecked || props.value,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        if (state.checked !== nextProps.defaultChecked || state.checked !== nextProps.value) {\n            return { checked: nextProps.defaultChecked || nextProps.value };\n        }\n        return null;\n    }\n\n    onChange = e => {\n        e.persist();\n        this.setState(\n            state => ({ checked: !state.checked }),\n            () => {\n                this.props.onChange(e);\n            }\n        );\n    };\n\n    setChecked = checked => {\n        this.setState({ checked });\n    };\n\n    handleKeyDown = e => {\n        // Enter or space\n        if (e.key === 'Enter' || e.keyCode === 32) {\n            this.setState(\n                state => ({ checked: !state.checked }),\n                () => {\n                    this.props.onChange();\n                }\n            );\n        }\n    };\n\n    render() {\n        const {\n            className,\n            classNameLabel,\n            id,\n            label,\n            defaultChecked,\n            onChange, // This needs to be here so it's not included in `otherProps`\n            withTabIndex,\n            ...otherProps\n        } = this.props;\n\n        return (\n            <label\n                htmlFor={id}\n                className={classNames('dc-checkbox', className, {\n                    'dc-checkbox--disabled': this.props.disabled,\n                })}\n            >\n                <input\n                    className='dc-checkbox__input'\n                    type='checkbox'\n                    id={id}\n                    onChange={this.onChange}\n                    defaultChecked={this.state.checked}\n                    {...otherProps}\n                />\n                <span\n                    className={classNames('dc-checkbox__box', {\n                        'dc-checkbox__box--active': this.state.checked,\n                        'dc-checkbox__box--disabled': this.props.disabled,\n                    })}\n                    {...(withTabIndex?.length > 0 ? { tabIndex: withTabIndex } : {})}\n                    onKeyDown={this.handleKeyDown}\n                >\n                    {!!this.state.checked && <Icon icon='IcCheckmark' color='active' />}\n                </span>\n                <span className={classNames('dc-checkbox__label', classNameLabel)}>{label}</span>\n            </label>\n        );\n    }\n}\n\nCheckbox.propTypes = {\n    className: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    disabled: PropTypes.bool,\n    id: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    withTabIndex: PropTypes.string,\n};\n\nexport default Checkbox;\n","import Checkbox from './checkbox.jsx';\nimport './checkbox.scss';\n\nexport default Checkbox;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Icon from '../icon';\nimport Button from '../button';\n\nconst ItemStatus = ({ status, onClick, button_text }) => {\n    switch (status) {\n        case 'done':\n            return (\n                <div className='dc-checklist__item-status--done'>\n                    <Icon icon='IcCheckmark' color='green' size={16} />\n                </div>\n            );\n        case 'button-action':\n            return <Button primary color='active' text={button_text} onClick={onClick} />;\n        case 'action':\n        default:\n            return (\n                <div className='dc-checklist__item-status--action' onClick={onClick}>\n                    <Icon icon='IcArrowRightBold' color='active' />\n                </div>\n            );\n    }\n};\n\nItemStatus.propTypes = {\n    button_text: PropTypes.string,\n    onClick: PropTypes.func,\n    status: PropTypes.string,\n};\n\nconst Checklist = ({ items, className, itemClassName }) => (\n    <div className={classNames('dc-checklist', className)}>\n        {items.map((item, idx) => (\n            <div\n                key={idx}\n                className={classNames('dc-checklist__item', itemClassName, {\n                    'dc-checklist__item--disabled': item.is_disabled,\n                })}\n            >\n                <div className='dc-checklist__item-text'>{item.content}</div>\n                <div\n                    className={classNames('dc-checklist__item-status', {\n                        'dc-checklist__item-status--disabled': item.is_disabled,\n                        'dc-checklist__item-status--button': item.status === 'button-action',\n                    })}\n                >\n                    <ItemStatus status={item.status} onClick={item.onClick} button_text={item.button_text} />\n                </div>\n            </div>\n        ))}\n    </div>\n);\n\nChecklist.propTypes = {\n    items: PropTypes.array,\n    className: PropTypes.string,\n    itemClassName: PropTypes.string,\n};\n\nexport default Checklist;\n","import Checklist from './checklist.jsx';\nimport './checklist.scss';\n\nexport default Checklist;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon/icon.jsx';\n\nconst CircularProgress = ({ className, danger_limit, icon, is_clockwise, progress, radius, stroke, warning_limit }) => {\n    const normalizedRadius = radius - stroke / 2;\n    const circumference = normalizedRadius * 2 * Math.PI;\n    const strokeDashoffset = circumference - (progress / 100) * circumference;\n    return (\n        <div className={classNames('dc-circular-progress', className)}>\n            <Icon icon={icon} className='dc-circular-progress__icon' />\n            <svg height={radius * 2} width={radius * 2}>\n                <circle\n                    className={classNames('dc-circular-progress__bar', {\n                        'dc-circular-progress--clockwise': is_clockwise,\n                        'dc-circular-progress__bar--warning': progress <= warning_limit && progress > danger_limit,\n                        'dc-circular-progress__bar--danger': progress <= danger_limit,\n                    })}\n                    cx={radius}\n                    cy={radius}\n                    fill='transparent'\n                    r={normalizedRadius}\n                    strokeDasharray={`${circumference} ${circumference}`}\n                    strokeWidth={stroke}\n                    style={{ strokeDashoffset }}\n                />\n            </svg>\n        </div>\n    );\n};\n\nCircularProgress.defaultProps = {\n    icon: 'IcClockOutline',\n    danger_limit: 20,\n    is_clockwise: false,\n    progress: 0,\n    radius: 22,\n    stroke: 3,\n    warning_limit: 50,\n};\n\nexport default CircularProgress;\n\nCircularProgress.propTypes = {\n    className: PropTypes.string,\n    danger_limit: PropTypes.number,\n    is_clockwise: PropTypes.bool,\n    progress: PropTypes.number,\n    radius: PropTypes.number,\n    stroke: PropTypes.number,\n    warning_limit: PropTypes.number,\n};\n","import CircularProgress from './circular-progress.jsx';\nimport './circular-progress.scss';\n\nexport default CircularProgress;\n","import PropTypes from 'prop-types';\n\nexport const positionPropType = {\n    position: PropTypes.oneOf(['top', 'bottom']),\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { positionPropType } from './utils';\nimport Icon from '../icon';\n\nconst IconArrow = props => <Icon width={30} height={9} icon='IcChevronUp' {...props} />;\nconst IconArrowWithTitle = ({ title, ...props }) => (\n    <>\n        <span className='dc-collapsible__title'>{title}</span>\n        <Icon icon='IcChevronDown' {...props} />\n    </>\n);\n\nconst ArrowButton = ({ is_collapsed, position, onClick, title }) => {\n    const [is_open, expand] = React.useState(!is_collapsed);\n\n    const toggleExpand = () => {\n        expand(!is_open);\n        if (typeof onClick === 'function') {\n            onClick();\n        }\n    };\n\n    React.useEffect(() => {\n        expand(is_collapsed);\n    }, [is_collapsed]);\n\n    let icon_arrow;\n    switch (position) {\n        case 'top':\n            icon_arrow = title ? (\n                <IconArrowWithTitle\n                    title={title}\n                    className={classNames('dc-collapsible__icon', {\n                        'dc-collapsible__icon--top': true,\n                        'dc-collapsible__icon--is-open': is_open,\n                    })}\n                />\n            ) : (\n                <IconArrow\n                    className={classNames('dc-collapsible__icon', {\n                        'dc-collapsible__icon--top': true,\n                        'dc-collapsible__icon--is-open': is_open,\n                    })}\n                />\n            );\n            break;\n        default:\n            icon_arrow = title ? (\n                <IconArrowWithTitle\n                    title={title}\n                    className={classNames('dc-collapsible__icon', {\n                        'dc-collapsible__icon--bottom': true,\n                        'dc-collapsible__icon--is-open': is_open,\n                    })}\n                />\n            ) : (\n                <IconArrow\n                    className={classNames('dc-collapsible__icon', {\n                        'dc-collapsible__icon--bottom': true,\n                        'dc-collapsible__icon--is-open': is_open,\n                    })}\n                />\n            );\n    }\n\n    return (\n        <div className='dc-collapsible__button' onClick={toggleExpand}>\n            {icon_arrow}\n        </div>\n    );\n};\n\nArrowButton.propTypes = {\n    is_open: PropTypes.bool,\n    onClick: PropTypes.func,\n    title: PropTypes.string,\n    ...positionPropType,\n};\n\nexport default ArrowButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport { positionPropType } from './utils';\nimport ArrowButton from './arrow-button.jsx';\n\nconst swipe_config = {\n    delta: 100,\n    trackTouch: true,\n    trackMouse: true,\n};\n\nconst Collapsible = ({ as, is_collapsed, position = 'top', children, onClick, title }) => {\n    const [is_open, expand] = React.useState(!is_collapsed);\n    const [should_show_collapsible, setShouldShowCollapsible] = React.useState(false);\n\n    const toggleExpand = () => {\n        const new_state = !is_open;\n        expand(new_state);\n        if (typeof onClick === 'function') {\n            onClick(new_state); // pass new state in a callback function\n        }\n    };\n\n    React.useEffect(() => {\n        expand(!is_collapsed);\n        setShouldShowCollapsible(React.Children.toArray(children).some(({ props }) => 'collapsible' in props));\n    }, [is_collapsed]);\n\n    React.useEffect(() =>\n        setShouldShowCollapsible(React.Children.toArray(children).some(({ props }) => 'collapsible' in props))\n    );\n\n    const swipe_handlers = useSwipeable({\n        onSwipedUp: () => !is_open && should_show_collapsible && expand(true),\n        onSwipedDown: () => is_open && should_show_collapsible && expand(false),\n        ...swipe_config,\n    });\n\n    const arrow_button = (\n        <ArrowButton is_collapsed={!is_open} position={position} onClick={toggleExpand} title={title} />\n    );\n    const CustomTag = as || 'div';\n    return (\n        <CustomTag\n            {...swipe_handlers}\n            className={classNames('dc-collapsible', {\n                'dc-collapsible--is-expanded': is_open,\n                'dc-collapsible--is-collapsed': !is_open,\n                'dc-collapsible--has-collapsible-btn': should_show_collapsible,\n                'dc-collapsible--has-title': title,\n            })}\n        >\n            {should_show_collapsible && position === 'top' && arrow_button}\n            <div className='dc-collapsible__content'>\n                {React.Children.map(children, element => {\n                    if (!element) return element;\n                    const collapsed_class = classNames('dc-collapsible__item', element.props.className, {\n                        'dc-collapsible__item--collapsed': 'collapsible' in element.props && !is_open,\n                    });\n\n                    const no_collapsible_props = { ...element.props };\n                    if ('collapsible' in no_collapsible_props) delete no_collapsible_props.collapsible;\n\n                    const props = {\n                        ...no_collapsible_props,\n                        className: collapsed_class,\n                    };\n\n                    return React.cloneElement(element, props);\n                })}\n            </div>\n            {should_show_collapsible && position === 'bottom' && arrow_button}\n        </CustomTag>\n    );\n};\n\nCollapsible.propTypes = {\n    ...positionPropType,\n};\n\nCollapsible.displayName = 'Collapsible';\n\nexport default Collapsible;\n","import Collapsible from './collapsible.jsx';\nimport ArrowButton from './arrow-button.jsx';\nimport './collapsible.scss';\n\nCollapsible.ArrowButton = ArrowButton;\n\nexport default Collapsible;\n","import Counter from './counter.jsx';\nimport './counter.scss';\n\nexport default Counter;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Checkbox from '../checkbox/checkbox.jsx';\n\nconst CompositeCheckbox = ({ name, value, onChange, className, label, id, description, ...props }) => {\n    const onClickContainer = e => {\n        e.stopPropagation();\n        e.preventDefault();\n        onChange({\n            target: {\n                value: !value,\n            },\n        });\n    };\n\n    return (\n        <div\n            className={classNames('composite-checkbox', className, {\n                'composite-checkbox--active': !!value,\n            })}\n            onClick={onClickContainer}\n        >\n            <Checkbox id={id} label={label} name={name} value={value} onChange={onChange} {...props} />\n            <p className={classNames('composite-checkbox__description', `${className}__description`)}>{description}</p>\n        </div>\n    );\n};\n\nCompositeCheckbox.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    description: PropTypes.string.isRequired,\n};\n\nexport default CompositeCheckbox;\n","import CompositeCheckbox from './composite-checkbox.jsx';\nimport './composite-checkbox.scss';\n\nexport default CompositeCheckbox;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon';\nimport Input from '../input';\n\nconst DatePickerIcon = ({ icon, ...props }) => <Icon className='dc-datepicker__icon' icon={icon} {...props} />;\n\nconst DatePickerInput = ({\n    className,\n    disabled,\n    error,\n    id,\n    is_placeholder_visible,\n    name,\n    label,\n    show_leading_icon,\n    placeholder,\n    is_clearable,\n    onChangeInput,\n    onClickClear,\n    onClick,\n    onBlur,\n    readOnly,\n    value,\n    required,\n}) => {\n    const [is_clear_btn_visible, setIsClearBtnVisible] = React.useState(false);\n\n    const onMouseEnter = () => {\n        if (is_clearable) {\n            setIsClearBtnVisible(true);\n        }\n    };\n\n    const onMouseLeave = () => {\n        setIsClearBtnVisible(false);\n    };\n\n    const trailing_icon =\n        is_clearable && is_clear_btn_visible ? (\n            <DatePickerIcon icon='IcCloseCircle' onClick={onClickClear} color='secondary' />\n        ) : (\n            <DatePickerIcon icon='IcCalendar' />\n        );\n\n    return (\n        <Input\n            className={classNames('dc-datepicker__input', className, {\n                'dc-datepicker__input--has-leading-icon': show_leading_icon,\n            })}\n            data-lpignore='true'\n            disabled={disabled}\n            error={error}\n            id={id ? `${id}_input` : undefined}\n            autoComplete='off'\n            is_autocomplete_disabled='true'\n            is_hj_whitelisted='true'\n            label={label}\n            name={name}\n            onChange={onChangeInput}\n            onClick={onClick}\n            placeholder={placeholder}\n            readOnly={readOnly}\n            leading_icon={show_leading_icon ? <DatePickerIcon icon='IcCalendar' /> : undefined}\n            trailing_icon={show_leading_icon ? undefined : trailing_icon}\n            type={readOnly ? 'text' : 'number'}\n            value={is_placeholder_visible || !value ? '' : value}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            onBlur={onBlur}\n            required={required}\n        />\n    );\n};\n\nDatePickerInput.propTypes = {\n    className: PropTypes.string,\n    error_messages: PropTypes.array,\n    placeholder: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    is_clearable: PropTypes.bool,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    show_leading_icon: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickClear: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default DatePickerInput;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Calendar from '../calendar';\n\nconst DatePickerCalendar = React.forwardRef(({ alignment, is_datepicker_visible, portal_id, ...props }, ref) => {\n    const css_transition_classnames = {\n        enter: classNames('dc-datepicker__picker--enter', {\n            [`dc-datepicker__picker--${alignment}-enter`]: alignment,\n        }),\n        enterDone: classNames('dc-datepicker__picker--enter-done', {\n            [`dc-datepicker__picker--${alignment}-enter-done`]: alignment,\n        }),\n        exit: classNames('dc-datepicker__picker--exit', {\n            [`dc-datepicker__picker--${alignment}-exit`]: alignment,\n        }),\n    };\n\n    const el_calendar = (\n        <CSSTransition in={is_datepicker_visible} timeout={100} classNames={css_transition_classnames} unmountOnExit>\n            <div\n                className={classNames('dc-datepicker__picker', {\n                    'dc-datepicker__picker--left': alignment === 'left',\n                })}\n                style={\n                    portal_id\n                        ? {\n                              top: props.top,\n                              left: props.left,\n                          }\n                        : undefined\n                }\n            >\n                <Calendar forward_ref={ref} {...props} />\n            </div>\n        </CSSTransition>\n    );\n\n    if (portal_id) {\n        return ReactDOM.createPortal(el_calendar, document.getElementById(portal_id));\n    }\n\n    return el_calendar;\n});\n\nDatePickerCalendar.displayName = 'DatePickerCalendar';\n\nDatePickerCalendar.propTypes = {\n    alignment: PropTypes.string,\n    is_datepicker_visible: PropTypes.bool,\n};\n\nexport default DatePickerCalendar;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport Icon from '../icon';\n\nconst Native = ({\n    id,\n    disabled,\n    display_format,\n    name,\n    error,\n    label,\n    max_date,\n    min_date,\n    placeholder,\n    onBlur,\n    onFocus,\n    onSelect,\n    value,\n}) => {\n    const [is_focused, setIsFocused] = React.useState(0);\n    const input_ref = React.useRef();\n\n    React.useEffect(() => {\n        if (input_ref.current) input_ref.current.value = value;\n    }, [value]);\n\n    const handleFocus = e => {\n        setIsFocused(true);\n        if (typeof onFocus === 'function') {\n            onFocus(e);\n        }\n    };\n\n    const handleBlur = e => {\n        setIsFocused(false);\n        if (typeof onBlur === 'function') {\n            onBlur(e);\n        }\n    };\n\n    return (\n        <div\n            className={classNames('dc-input', {\n                'dc-input--error': error,\n            })}\n        >\n            <div className='dc-datepicker__display'>\n                {value && <span className='dc-datepicker__display-text'>{toMoment(value).format(display_format)}</span>}\n            </div>\n            <label\n                className={classNames('dc-datepicker__placeholder', {\n                    'dc-datepicker__placeholder--has-value': !!value,\n                    'dc-datepicker__placeholder--has-error': error,\n                    'dc-datepicker__placeholder--is-focused': is_focused,\n                })}\n                htmlFor={id}\n            >\n                {label || (!value && placeholder)}\n            </label>\n            <Icon icon='IcCalendar' className='dc-datepicker__calendar-icon' />\n            <input\n                ref={input_ref}\n                id={id}\n                name={name}\n                className='dc-datepicker__native'\n                type='date'\n                max={max_date && toMoment(max_date).format('YYYY-MM-DD')}\n                min={min_date && toMoment(min_date).format('YYYY-MM-DD')}\n                error={error}\n                required\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                disabled={disabled}\n                onChange={e => {\n                    onSelect(e.target.value);\n                }}\n            />\n            {error && <span className='dc-datepicker__error'>{error}</span>}\n        </div>\n    );\n};\n\nexport default Native;\n","import { isMobile } from '@deriv/shared';\n\nconst MobileWrapper = ({ children }) => {\n    if (!isMobile()) return null;\n\n    return children;\n};\n\nexport default MobileWrapper;\n","import MobileWrapper from './mobile-wrapper.jsx';\nimport './mobile-wrapper.scss';\n\nexport default MobileWrapper;\n","import { isDesktop } from '@deriv/shared';\n\nconst Desktop = ({ children }) => {\n    if (!isDesktop()) return null;\n    return children;\n};\n\nexport default Desktop;\n","import DesktopWrapper from './desktop-wrapper.jsx';\nimport './desktop-wrapper.scss';\n\nexport default DesktopWrapper;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { addDays, daysFromTodayTo, toMoment, convertDateFormat, isMobile } from '@deriv/shared';\n\nimport Input from './date-picker-input.jsx';\nimport Calendar from './date-picker-calendar.jsx';\nimport Native from './date-picker-native.jsx';\nimport MobileWrapper from '../mobile-wrapper';\nimport DesktopWrapper from '../desktop-wrapper';\n\nclass DatePicker extends React.PureComponent {\n    datepicker = React.createRef();\n    calendar_portal = React.createRef();\n\n    state = {\n        date: this.props.value ? toMoment(this.props.value).format(this.props.display_format) : '',\n        duration: daysFromTodayTo(this.props.value),\n        is_datepicker_visible: false,\n        is_placeholder_visible: this.props.placeholder && !this.props.value,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value && nextProps.value !== this.props.value) {\n            this.setState({\n                date: toMoment(nextProps.value).format(this.props.display_format),\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(\n            state => ({ is_datepicker_visible: !state.is_datepicker_visible }),\n            () => {\n                if (\n                    this.state.is_datepicker_visible &&\n                    this.datepicker &&\n                    this.datepicker.current &&\n                    this.calendar_portal.current &&\n                    this.props.portal_id\n                ) {\n                    const date_picker_rect = this.datepicker.current.getBoundingClientRect();\n                    const calendar_rect = this.calendar_portal.current.getBoundingClientRect();\n                    const body_rect = document.body.getBoundingClientRect();\n                    let calendar_top = date_picker_rect.top;\n\n                    if (date_picker_rect.top + date_picker_rect.height + calendar_rect.height > body_rect.height) {\n                        const diff =\n                            date_picker_rect.top + date_picker_rect.height + calendar_rect.height - body_rect.height;\n                        calendar_top -= diff;\n                    }\n                    this.setState({\n                        top: calendar_top,\n                        left: date_picker_rect.left,\n                    });\n                }\n            }\n        );\n    };\n\n    onClickOutside = e => {\n        const is_click_outside =\n            !this.datepicker?.current?.contains(e.target) && !this.calendar_portal?.current?.contains(e.target);\n\n        if (this.state.is_datepicker_visible && is_click_outside) {\n            this.setState({ is_datepicker_visible: false });\n        }\n    };\n\n    onHover = hovered_date => {\n        const { display_format, mode, onChange } = this.props;\n\n        const date = toMoment(hovered_date).format(display_format);\n        const duration = mode === 'duration' ? daysFromTodayTo(hovered_date) : null;\n\n        if (typeof onChange === 'function') {\n            onChange({\n                date,\n                duration,\n            });\n        }\n    };\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        const { display_format, mode, name, onChange } = this.props;\n\n        const date = toMoment(selected_date).format(display_format);\n        const duration = mode === 'duration' ? daysFromTodayTo(selected_date) : null;\n\n        this.setState(\n            {\n                date,\n                duration,\n                is_datepicker_visible,\n                is_placeholder_visible: false,\n            },\n            () => {\n                if (typeof onChange === 'function') {\n                    onChange({\n                        date,\n                        duration,\n                        target: {\n                            name,\n                            value: this.target_value,\n                        },\n                    });\n                }\n            }\n        );\n    };\n\n    onSelectCalendarNative = selected_date => {\n        const { display_format, name, onChange } = this.props;\n\n        const date = selected_date ? toMoment(selected_date).format(display_format) : null;\n\n        this.setState(\n            {\n                date,\n            },\n            () => {\n                if (typeof onChange === 'function') {\n                    onChange({\n                        target: {\n                            name,\n                            value: this.target_value,\n                        },\n                    });\n                }\n            }\n        );\n    };\n\n    /**\n     * TODO: currently only works for duration, make it works for date as well\n     */\n    onChangeInput = e => {\n        const { display_format, mode, name, onChange } = this.props;\n\n        const date = addDays(toMoment(), e.target.value).format(display_format);\n        const duration = mode === 'duration' ? e.target.value : '';\n\n        this.setState(\n            {\n                date,\n                duration,\n                is_datepicker_visible: true,\n                is_placeholder_visible: false,\n            },\n            () => {\n                if (this.calendar) {\n                    this.calendar.setSelectedDate(date);\n                }\n                if (typeof onChange === 'function') {\n                    onChange({\n                        date,\n                        duration,\n                        target: {\n                            name,\n                            value: this.target_value,\n                        },\n                    });\n                }\n            }\n        );\n    };\n\n    /**\n     * TODO: handle datepicker input clear\n     */\n    // onClickClear = () => {};\n\n    get target_value() {\n        const calendar_value = this.calendar_value && toMoment(this.calendar_value);\n        return this.props.mode === 'duration' ? this.state.duration : calendar_value;\n    }\n\n    get input_value() {\n        return this.props.mode === 'duration' ? this.state.duration : this.state.date;\n    }\n\n    get calendar_value() {\n        if (!this.state.date) return isMobile() ? null : toMoment(this.props.max_date).format(this.props.date_format);\n        return convertDateFormat(this.state.date, this.props.display_format, this.props.date_format);\n    }\n\n    render() {\n        const { id, name, value, onBlur, onFocus, required, type, disabled, ...props } = this.props;\n\n        return (\n            <>\n                <MobileWrapper>\n                    <Native\n                        id={id}\n                        name={name}\n                        display_format={this.props.display_format}\n                        error={this.props.error}\n                        label={this.props.label}\n                        max_date={this.props.max_date}\n                        min_date={this.props.min_date}\n                        onBlur={onBlur}\n                        onFocus={onFocus}\n                        onSelect={this.onSelectCalendarNative}\n                        placeholder={this.props.placeholder}\n                        value={this.calendar_value} // native picker accepts date format yyyy-mm-dd\n                        disabled={disabled}\n                    />\n                </MobileWrapper>\n                <DesktopWrapper>\n                    <div id={id} ref={this.datepicker} className='dc-datepicker' data-value={this.input_value}>\n                        <Input\n                            {...props}\n                            disabled={disabled}\n                            name={name}\n                            onClick={this.handleVisibility}\n                            onChangeInput={this.onChangeInput}\n                            // onClickClear={this.onClickClear}\n                            is_placeholder_visible={this.state.is_placeholder_visible}\n                            onBlur={onBlur}\n                            required={required}\n                            type={type}\n                            value={this.input_value}\n                        />\n                        <Calendar\n                            ref={this.calendar_portal}\n                            onRef={ref => (this.calendar = ref)}\n                            is_datepicker_visible={this.state.is_datepicker_visible}\n                            onHover={this.props.has_range_selection ? this.onHover : undefined}\n                            onSelect={this.onSelectCalendar}\n                            value={this.calendar_value} // Calendar accepts date format yyyy-mm-dd\n                            top={this.state.top}\n                            left={this.state.left}\n                            {...props}\n                        />\n                    </div>\n                </DesktopWrapper>\n            </>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    alignment: 'bottom',\n    date_format: 'YYYY-MM-DD',\n    mode: 'date',\n    display_format: 'DD MMM YYYY',\n    keep_open: false,\n};\n\nDatePicker.propTypes = {\n    error_messages: PropTypes.array,\n    label: PropTypes.string,\n};\n\nexport default DatePicker;\n","import DatePicker from './date-picker.jsx';\nimport './date-picker.scss';\n\nexport default DatePicker;\n","import React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport DatePicker from '../date-picker';\n\nclass DateOfBirthPicker extends React.Component {\n    state = {\n        max_date: toMoment().subtract(18, 'years'),\n        min_date: toMoment().subtract(100, 'years'),\n        value: this.props.value,\n    };\n\n    render() {\n        const { min_date, max_date, value, ...props } = this.props;\n\n        return (\n            <DatePicker\n                calendar_view='year'\n                display_format='DD-MM-YYYY'\n                max_date={this.state.max_date}\n                min_date={this.state.min_date}\n                value={this.state.value}\n                readOnly\n                {...props}\n            />\n        );\n    }\n}\n\nexport default DateOfBirthPicker;\n","import DateOfBirthPicker from './date-of-birth-picker.jsx';\nimport './date-of-birth-picker.scss';\n\nexport default DateOfBirthPicker;\n","import classNames from 'classnames';\nimport React from 'react';\n\nclass DataListCell extends React.PureComponent {\n    render() {\n        const { row, column, className, is_footer } = this.props;\n        if (!column) return null;\n        const { col_index, title } = column;\n        const cell_value = row[col_index];\n        return (\n            <div className={classNames(className, column.col_index)}>\n                {!is_footer && (\n                    <div className={classNames(`${column.col_index}__row-title`, 'data-list__row-title')}>\n                        {column.renderHeader ? column.renderHeader({ title }) : title}\n                    </div>\n                )}\n                <div className='data-list__row-content'>\n                    {column.renderCellContent\n                        ? column.renderCellContent({ cell_value, row_obj: row, is_footer })\n                        : cell_value}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataListCell;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { VariableSizeList as List } from 'react-window';\nimport { NavLink } from 'react-router-dom';\nimport { isMobile } from '@deriv/shared';\nimport DataListCell from './data-list-cell.jsx';\nimport ThemedScrollbars from '../themed-scrollbars/themed-scrollbars.jsx';\n\nconst ThemedScrollbarsWrapper = React.forwardRef((props, ref) => (\n    <ThemedScrollbars {...props} forwardedRef={ref}>\n        {props.children}\n    </ThemedScrollbars>\n));\n// Display name is required by Developer Tools to give a name to the components we use.\n// If a component doesn't have a displayName is will be shown as <Unknown />. Hence, name is set.\nThemedScrollbarsWrapper.displayName = 'ThemedScrollbars';\n\nclass DataList extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 200,\n            width: 200,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            height: this.props.custom_height || this.el_list_body.clientHeight,\n            width: this.props.custom_width || this.el_list_body.clientWidth,\n        });\n    }\n\n    footerRowRenderer = () => {\n        const { footer, rowRenderer } = this.props;\n        return <React.Fragment>{rowRenderer({ row: footer, is_footer: true })}</React.Fragment>;\n    };\n\n    rowRenderer = ({ style, ...args }) => {\n        const { data_source, rowRenderer, getRowAction } = this.props;\n        const row = data_source[args.index];\n        const to = getRowAction && getRowAction(row);\n        const contract_id = row.contract_id || row.id;\n        return typeof to === 'string' ? (\n            <NavLink\n                id={`dt_reports_contract_${contract_id}`}\n                className={'data-list__item--wrapper'}\n                to={{\n                    pathname: to,\n                    state: {\n                        from_table_row: true,\n                    },\n                }}\n                style={style}\n            >\n                <div className='data-list__item'>{rowRenderer({ row, ...args })}</div>\n            </NavLink>\n        ) : (\n            <div className='data-list__item--wrapper' style={style}>\n                <div className='data-list__item'>{rowRenderer({ row, ...args })}</div>\n            </div>\n        );\n    };\n\n    render() {\n        const { className, children, data_source, getRowSize, onScroll, footer } = this.props;\n\n        return (\n            <div className={classNames(className, 'data-list', `${className}__data-list`)} onScroll={onScroll}>\n                <div\n                    className={classNames('data-list__body', `${className}__data-list-body`)}\n                    ref={ref => (this.el_list_body = ref)}\n                >\n                    <List\n                        className={className}\n                        height={this.state.height}\n                        itemCount={data_source.length}\n                        itemSize={getRowSize}\n                        width={this.state.width}\n                        outerElementType={isMobile() ? null : ThemedScrollbarsWrapper}\n                    >\n                        {this.rowRenderer}\n                    </List>\n                    {children}\n                </div>\n                {footer && (\n                    <div className={classNames('data-list__footer', `${className}__data-list-footer`)}>\n                        {this.footerRowRenderer()}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\nDataList.Cell = DataListCell;\nDataList.propTypes = {\n    className: PropTypes.string,\n    data_source: PropTypes.array,\n    getRowAction: PropTypes.func,\n    getRowSize: PropTypes.func,\n    rowRenderer: PropTypes.func,\n};\n\nexport default DataList;\n","import DataList from './data-list.jsx';\nimport DataListCell from './data-list-cell.jsx';\nimport './data-list.scss';\n\nDataList.Cell = DataListCell;\n\nexport default DataList;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TableCell = ({ col_index, children }) => <div className={classNames('table__cell', col_index)}>{children}</div>;\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ThemedScrollbars from '../themed-scrollbars';\n\nexport default class TableRowInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetails: false,\n        };\n    }\n\n    toggleDetails = () => {\n        if (this.props.replace) {\n            this.setState(state => ({ showDetails: !state.showDetails }));\n        }\n    };\n\n    render() {\n        return (\n            <div\n                onClick={this.props.is_footer || !this.props.replace ? undefined : this.toggleDetails}\n                className={classNames(this.props.className, { 'statement__row--detail': this.state.showDetails })}\n            >\n                {this.state.showDetails ? (\n                    <ThemedScrollbars height='63px'>\n                        <div>\n                            {this.props.replace.component ? (\n                                this.props.replace.component\n                            ) : (\n                                <p className='statement__row--detail-text'>{this.props.replace.message}</p>\n                            )}\n                        </div>\n                    </ThemedScrollbars>\n                ) : (\n                    this.props.cells\n                )}\n            </div>\n        );\n    }\n}\n\nTableRowInfo.propTypes = {\n    cells: PropTypes.arrayOf(PropTypes.node),\n    className: PropTypes.string,\n    replace: PropTypes.object,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport TableCell from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\n\nconst TableRow = ({\n    className,\n    columns,\n    getActionColumns,\n    id,\n    is_footer,\n    is_header,\n    show_preloader = false,\n    replace,\n    row_obj = {},\n    to,\n    content_loader,\n}) => {\n    const action_columns = getActionColumns && getActionColumns({ row_obj, is_header, is_footer });\n\n    const cells = columns.map(({ col_index, renderCellContent, title, key }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n        return (\n            <TableCell col_index={col_index} key={key || col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    const row_class_name = classNames(\n        'table__row',\n        { 'table__row-link': to || replace },\n        { [`${className}__row`]: className }\n    );\n    const ContentLoader = content_loader;\n    if (!is_footer && !is_header && show_preloader) {\n        return <div className='table__row--preloader'>{content_loader ? <ContentLoader /> : null}</div>;\n    }\n    return to ? (\n        <div className={`${className}__row_wrapper`}>\n            <NavLink\n                id={`dt_reports_contract_${id}`}\n                className={row_class_name}\n                to={{\n                    pathname: to,\n                    state: {\n                        from_table_row: true,\n                    },\n                }}\n            >\n                {cells}\n            </NavLink>\n            {action_columns}\n        </div>\n    ) : (\n        <div className={`${className}__row_wrapper`}>\n            <TableRowInfo className={row_class_name} cells={cells} replace={replace} is_footer={is_footer} />\n            {action_columns}\n        </div>\n    );\n};\n\nTableRow.propTypes = {\n    className: PropTypes.string,\n    columns: PropTypes.array,\n    id: PropTypes.number,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    replace: PropTypes.object,\n    row_obj: PropTypes.object,\n    to: PropTypes.string,\n    content_loader: PropTypes.elementType,\n};\n\nexport default TableRow;\n","import classNames from 'classnames';\nimport { VariableSizeList as List } from 'react-window';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TableRow from './table-row.jsx';\nimport ThemedScrollbars from '../themed-scrollbars';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nconst ThemedScrollbarsWrapper = React.forwardRef((props, ref) => (\n    <ThemedScrollbars {...props} forwardedRef={ref}>\n        {props.children}\n    </ThemedScrollbars>\n));\n// Display name is required by Developer Tools to give a name to the components we use.\n// If a component doesn't have a displayName is will be shown as <Unknown />. Hence, name is set.\nThemedScrollbarsWrapper.displayName = 'ThemedScrollbars';\n\nclass DataTable extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 200,\n            width: 200,\n            window_width: 1024,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            height: this.props.custom_height || this.el_table_body.clientHeight,\n            width: this.props.custom_width || this.el_table_body.clientWidth,\n            window_width: window.innerWidth,\n        });\n    }\n\n    rowRenderer = ({\n        data,\n        index, // Index of row\n        style, // Style object to be applied to row (to position it);\n    }) => {\n        const { className, getRowAction, columns, preloaderCheck, id, getActionColumns, content_loader } = this.props;\n        const item = data[index];\n        const action = getRowAction && getRowAction(item);\n        const contract_id = data[index].contract_id || data[index].id;\n\n        // If row content is complex, consider rendering a light-weight placeholder while scrolling.\n        const content = (\n            <TableRow\n                className={className}\n                row_obj={item}\n                columns={columns}\n                id={contract_id}\n                key={id}\n                to={typeof action === 'string' ? action : undefined}\n                show_preloader={typeof preloaderCheck === 'function' ? preloaderCheck(item) : null}\n                replace={typeof action === 'object' ? action : undefined}\n                getActionColumns={getActionColumns}\n                content_loader={content_loader}\n            />\n        );\n\n        return <div style={style}>{content}</div>;\n    };\n\n    render() {\n        const {\n            children,\n            className,\n            columns,\n            data_source,\n            footer,\n            getActionColumns,\n            getRowSize,\n            onScroll,\n            content_loader,\n        } = this.props;\n\n        const TableData = (\n            <React.Fragment>\n                <List\n                    className={className}\n                    height={this.state.height}\n                    itemCount={data_source.length}\n                    itemData={data_source}\n                    itemSize={getRowSize}\n                    width={this.state.width}\n                    outerElementType={ThemedScrollbarsWrapper}\n                >\n                    {this.rowRenderer}\n                </List>\n                {children}\n            </React.Fragment>\n        );\n\n        return (\n            <div\n                className={classNames('table', {\n                    [`${className}`]: className,\n                    [`${className}__table`]: className,\n                    [`${className}__content`]: className,\n                })}\n            >\n                <div\n                    className='table__head'\n                    ref={el => {\n                        this.el_table_head = el;\n                    }}\n                >\n                    <TableRow\n                        className={className}\n                        columns={columns}\n                        is_header\n                        getActionColumns={getActionColumns}\n                        content_loader={content_loader}\n                    />\n                </div>\n                <div\n                    className='table__body'\n                    ref={el => {\n                        this.el_table_body = el;\n                    }}\n                    onScroll={onScroll}\n                >\n                    {TableData}\n                </div>\n\n                {footer && (\n                    <div className='table__foot'>\n                        <TableRow\n                            className={className}\n                            row_obj={footer}\n                            columns={columns}\n                            is_footer\n                            getActionColumns={getActionColumns}\n                            content_loader={content_loader}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n    className: PropTypes.string,\n    columns: PropTypes.array,\n    data_source: PropTypes.array,\n    footer: PropTypes.object,\n    getRowAction: PropTypes.func,\n    getRowSize: PropTypes.func,\n    onScroll: PropTypes.func,\n};\n\nexport default DataTable;\n","import DataTable from './data-table.jsx';\nimport TableCell from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\nimport TableRow from './table-row.jsx';\nimport './data-table.scss';\n\nDataTable.TableRow = TableRow;\nDataTable.TableRowInfo = TableRowInfo;\nDataTable.TableCell = TableCell;\n\nexport default DataTable;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Button from '../button/button.jsx';\n\nclass Dialog extends React.Component {\n    componentDidMount() {\n        if (this.props.is_visible && this.props.disableApp) {\n            this.props.disableApp();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.is_visible && this.props.disableApp) {\n            this.props.disableApp();\n        }\n    }\n\n    handleCancel = () => {\n        if (this.props.is_closed_on_cancel && this.props.enableApp) {\n            this.props.enableApp();\n        }\n        this.props.onCancel();\n    };\n\n    handleConfirm = () => {\n        if (this.props.is_closed_on_confirm && this.props.enableApp) {\n            this.props.enableApp();\n        }\n        this.props.onConfirm();\n    };\n\n    render() {\n        const {\n            cancel_button_text,\n            className,\n            children,\n            confirm_button_text,\n            onCancel,\n            is_loading,\n            is_visible,\n            is_mobile_full_width = true,\n            is_content_centered,\n            title,\n        } = this.props;\n\n        const content_classes = classNames('dc-dialog__content', {\n            'dc-dialog__content--centered': is_content_centered,\n        });\n\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    appear\n                    in={is_visible && !is_loading}\n                    timeout={50}\n                    classNames={{\n                        appear: 'dc-dialog__wrapper--enter',\n                        enter: 'dc-dialog__wrapper--enter',\n                        enterDone: 'dc-dialog__wrapper--enter-done',\n                        exit: 'dc-dialog__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className={classNames('dc-dialog__wrapper', className)}>\n                        <div\n                            className={classNames('dc-dialog__dialog', {\n                                'dc-dialog__dialog--has-margin': !is_mobile_full_width,\n                            })}\n                        >\n                            {!!title && <h1 className='dc-dialog__header'>{title}</h1>}\n                            {typeof children === 'string' ? (\n                                <p className={content_classes}>{children}</p>\n                            ) : (\n                                <div className={content_classes}>{children}</div>\n                            )}\n                            <div className='dc-dialog__footer'>\n                                {!!onCancel && (\n                                    <Button\n                                        className='dc-dialog__button'\n                                        has_effect\n                                        text={cancel_button_text}\n                                        onClick={this.handleCancel}\n                                        secondary\n                                        large\n                                    />\n                                )}\n                                {!!confirm_button_text && (\n                                    <Button\n                                        className='dc-dialog__button'\n                                        has_effect\n                                        text={confirm_button_text}\n                                        onClick={this.handleConfirm}\n                                        primary\n                                        large\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nDialog.defaultProps = {\n    is_closed_on_cancel: true,\n    is_closed_on_confirm: true,\n};\n\nDialog.propTypes = {\n    cancel_button_text: PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_closed_on_cancel: PropTypes.bool,\n    is_closed_on_confirm: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onConfirm: PropTypes.func,\n    title: PropTypes.string,\n};\n\nexport default Dialog;\n","import Dialog from './dialog.jsx';\nimport './dialog.scss';\n\nexport default Dialog;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Div100vh from 'react-div-100vh';\n\n/* Div100vh is workaround for getting accurate height of 100vh from browsers on mobile,\n    because using normal css vh is not returning correct screen height */\n/* To adjust max-height using calculation when using height: auto (or no rvh units), pass style props and use rvh unit instead vh,\n        e.g - style={{ maxHeight: calc(100rvh - 100px )}}\n    */\n/* To adjust height using calculation, pass style props and use rvh unit instead vh,\n    e.g - style={{ height: calc(100rvh - 100px )}}\n*/\n/* To manually remove rvh calculation and revert to default browser calculation use is_disabled */\nconst Div100vhContainer = ({ children, className, is_disabled, id, height_offset, max_autoheight_offset }) => {\n    const height_rule = height_offset ? `calc(100rvh - ${height_offset})` : 'calc(100rvh)';\n    const height_style = {\n        height: max_autoheight_offset ? null : height_rule,\n        maxHeight: max_autoheight_offset ? `calc(100rvh - ${max_autoheight_offset})` : null,\n    };\n    return (\n        <Div100vh id={id} className={className} style={is_disabled ? {} : height_style}>\n            {children}\n        </Div100vh>\n    );\n};\n\nDiv100vhContainer.propTypes = {\n    id: PropTypes.string,\n    children: PropTypes.any,\n    height_offset: PropTypes.string,\n    max_height_offset: PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport default Div100vhContainer;\n","import Div100vhContainer from './div100vh-container.jsx';\nimport './div100vh-container.scss';\n\nexport default Div100vhContainer;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon';\nimport Button from '../button';\n\n// TODO: use-from-shared - Use this icon from icons' shared package\nconst IconDrawer = () => (\n    <svg\n        className='dc-drawer__toggle-icon'\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 16 16'\n    >\n        <path\n            fill='var(--text-less-prominent)'\n            fillRule='nonzero'\n            d='M8.87 2.164l5 5.5a.5.5 0 0 1 0 .672l-5 5.5a.5.5 0 0 1-.74-.672L12.824 8 8.13 2.836a.5.5 0 0 1 .74-.672zm-5 0l5 5.5a.5.5 0 0 1 0 .672l-5 5.5a.5.5 0 0 1-.74-.672L7.824 8 3.13 2.836a.5.5 0 1 1 .74-.672z'\n        />\n    </svg>\n);\n\nclass Drawer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = { is_open: props.is_open };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            is_open: nextProps.is_open,\n        });\n    }\n\n    toggleDrawer = () => {\n        this.setState(\n            prev_state => ({\n                is_open: !prev_state.is_open,\n            }),\n            () => {\n                if (this.props.toggleDrawer) {\n                    this.props.toggleDrawer(this.state.is_open);\n                }\n            }\n        );\n    };\n\n    render() {\n        const {\n            children,\n            className,\n            contentClassName,\n            clear_stat_button_text,\n            footer,\n            header,\n            is_clear_stat_disabled,\n            is_mobile,\n            onClearStatClick,\n            zIndex,\n        } = this.props;\n\n        return (\n            <div\n                className={classNames('dc-drawer', className, {\n                    'dc-drawer--mobile': is_mobile,\n                    [`${className}--open dc-drawer--open`]: this.state.is_open && !is_mobile,\n                    'dc-drawer--open-mobile': this.state.is_open && is_mobile,\n                })}\n                style={{ zIndex }}\n            >\n                <div\n                    className={classNames('dc-drawer__toggle', {\n                        'dc-drawer__toggle--open': this.state.is_open,\n                        'dc-drawer__toggle--mobile': is_mobile,\n                    })}\n                    onClick={this.toggleDrawer}\n                >\n                    {is_mobile ? (\n                        <Icon icon='IcChevronUp' className='dc-drawer__toggle-icon--mobile' />\n                    ) : (\n                        <IconDrawer />\n                    )}\n                    {is_mobile && this.state.is_open && (\n                        <Button\n                            id='db-run-panel__clear-button'\n                            className='dc-drawer__clear-button'\n                            is_disabled={is_clear_stat_disabled}\n                            text={clear_stat_button_text}\n                            onClick={onClearStatClick}\n                            secondary\n                        />\n                    )}\n                </div>\n                <div\n                    className={classNames('dc-drawer__container', {\n                        'dc-drawer__container--mobile': is_mobile,\n                    })}\n                >\n                    {header && <div className='dc-drawer__header'>{header}</div>}\n                    <div className={classNames('dc-drawer__content', contentClassName)}>{children}</div>\n                    {footer && <div className='dc-drawer__footer'>{footer}</div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    clear_stat_button_text: PropTypes.string,\n    footer: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    header: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    is_clear_stat_disabled: PropTypes.bool,\n    is_mobile: PropTypes.bool,\n    is_open: PropTypes.bool,\n    onClearStatClick: PropTypes.func,\n    toggleDrawer: PropTypes.func,\n};\n\nexport default Drawer;\n","import Drawer from './drawer.jsx';\nimport './drawer.scss';\n\nexport default Drawer;\n","import PropTypes from 'prop-types';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = arr_list => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (Array.isArray(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const findNextFocusableNode = active_node => {\n    if (!active_node) return null;\n    if (active_node.attributes.tabIndex) return active_node;\n    return findNextFocusableNode(active_node.nextSibling);\n};\n\nexport const findPreviousFocusableNode = active_node => {\n    if (!active_node) return null;\n    if (active_node.attributes.tabIndex) return active_node;\n    return findPreviousFocusableNode(active_node.previousSibling);\n};\n\nexport const listPropType = () =>\n    PropTypes.oneOfType([\n        PropTypes.arrayOf(\n            PropTypes.shape({\n                disabled: PropTypes.bool,\n                has_tooltip: PropTypes.bool,\n                text: PropTypes.string,\n                tooltip: PropTypes.string,\n                value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n        PropTypes.object,\n    ]);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport Popover from '../popover';\n\nconst Items = ({ items, ...props }) =>\n    items.map((item, idx) => {\n        return <Item key={idx} item={item} {...props} />;\n    });\n\nconst Item = ({ onKeyPressed, value, item, handleSelect, nodes, has_symbol, is_align_text_left, className }) => {\n    const item_ref = React.useRef(null);\n    const symbol_type_class_name =\n        item.text && typeof item.text === 'string' ? `symbols--${item.text.toLowerCase()}` : null;\n\n    React.useEffect(() => {\n        const removeListeners = () => {\n            nodes.delete(item.value, item_ref.current);\n            item_ref.current.removeEventListener('keydown', onKeyPressed);\n        };\n\n        if (item.disabled) removeListeners();\n        else {\n            const handleKeyPress = e => onKeyPressed(e, item);\n            item_ref.current.addEventListener('keydown', handleKeyPress);\n            nodes.set(item.value.toString(), item_ref.current);\n        }\n\n        return () => removeListeners();\n    }, [item]);\n\n    return (\n        <div\n            className={classNames(\n                'dc-list__item',\n                { 'dc-list__item--selected': value === item.value },\n                { 'dc-list__item--disabled': item.disabled }\n            )}\n            name={name}\n            value={item.value}\n            onClick={item.disabled ? null : handleSelect.bind(null, item)}\n            ref={item_ref}\n            tabIndex={item.disabled ? null : 0}\n            id={item.value}\n        >\n            {!!has_symbol && item.has_tooltip && (\n                <Popover alignment='left' message={getCurrencyDisplayCode(item.text)}>\n                    <span className={classNames('symbols', 'dc-list__item-symbol', symbol_type_class_name)} />\n                </Popover>\n            )}\n\n            {!!has_symbol && !item.has_tooltip && (\n                <span className={classNames('symbols', 'dc-list__item-text', symbol_type_class_name)} />\n            )}\n\n            {!has_symbol && (\n                <span\n                    className={classNames(\n                        'dc-list__item-text',\n                        { 'dc-list__item-text--left': is_align_text_left },\n                        className\n                    )}\n                >\n                    {item.text}\n                </span>\n            )}\n        </div>\n    );\n};\n\nItems.propTypes = {\n    className: PropTypes.string,\n    handleSelect: PropTypes.func,\n    has_symbol: PropTypes.bool,\n    onKeyPressed: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst NativeSelect = React.forwardRef(({ name, list, value, onChange }, ref) => (\n    <div className='dc-native-select dc-native-select__wrapper'>\n        <select ref={ref} className='dc-native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list)\n                ? list.map((item, idx) => (\n                      <option key={idx} value={item.value} disabled={item.disabled}>\n                          {item.nativepicker_text}\n                      </option>\n                  ))\n                : Object.keys(list).map(key => (\n                      <React.Fragment key={key}>\n                          <optgroup label={key}>\n                              {list[key].map((item, idx) => (\n                                  <option key={idx} value={item.value} disabled={item.disabled}>\n                                      {item.nativepicker_text}\n                                  </option>\n                              ))}\n                          </optgroup>\n                      </React.Fragment>\n                  ))}\n        </select>\n    </div>\n));\n\nNativeSelect.displayName = 'NativeSelect';\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string,\n    nativepicker_text: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default NativeSelect;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getDisplayText, listPropType } from './dropdown';\n\nconst DisplayText = ({ className, has_symbol, list, is_align_text_left, placeholder, name, value }) => {\n    const symbol_value_class = value && has_symbol ? `symbols--${value.toLowerCase()}` : null;\n    return (\n        <React.Fragment>\n            {has_symbol ? (\n                <span\n                    className={classNames('symbols dc-dropdown__display-symbol', symbol_value_class, className)}\n                    name={name}\n                    value={value}\n                />\n            ) : (\n                <span className={classNames('dc-dropdown__display-text', className)} name={name} value={value}>\n                    {getDisplayText(list, value)}\n                </span>\n            )}\n            {placeholder && (\n                <div\n                    className={classNames('dc-dropdown__display-placeholder', {\n                        'dc-dropdown__display-placeholder--is-title': value,\n                        'dc-dropdown__display-placeholder--is-left-text': is_align_text_left,\n                    })}\n                >\n                    <span className='dc-dropdown__display-placeholder-text'>{placeholder}</span>\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nDisplayText.propTypes = {\n    className: PropTypes.string,\n    has_symbol: PropTypes.bool,\n    is_title: PropTypes.bool,\n    list: listPropType(),\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default DisplayText;\n","import React from 'react';\n\nexport const useOnClickOutside = (ref, handler, validationFn) => {\n    React.useEffect(() => {\n        const listener = event => {\n            const path = event.path ?? event.composedPath?.();\n\n            // When component is isolated (e.g, iframe, shadow DOM) event.target refers to whole container not the component. path[0] is the node that the event originated from, it does not need to walk the array\n            if (ref && ref.current && (!ref.current.contains(event.target) && !ref.current.contains(path && path[0]))) {\n                if (validationFn && !validationFn(event)) return;\n                handler(event);\n            }\n        };\n\n        document.addEventListener('mousedown', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n        };\n    }, [ref, handler]);\n};\n","import React from 'react';\n\nexport const useLongPress = (callback = () => {}, ms = 300) => {\n    const [startLongPress, setStartLongPress] = React.useState(false);\n\n    const preventDefaults = e => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    React.useEffect(() => {\n        let timer;\n        if (startLongPress) {\n            timer = setTimeout(callback, ms);\n        } else {\n            clearTimeout(timer);\n        }\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [startLongPress]);\n\n    return {\n        onMouseDown: e => {\n            preventDefaults(e);\n            setStartLongPress(true);\n        },\n        onMouseUp: () => setStartLongPress(false),\n        onMouseLeave: () => setStartLongPress(false),\n        onTouchStart: e => {\n            preventDefaults(e);\n            setStartLongPress(true);\n        },\n        onTouchEnd: () => setStartLongPress(false),\n    };\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { mobileOSDetect } from '@deriv/shared';\nimport { listPropType, findNextFocusableNode, findPreviousFocusableNode } from './dropdown';\nimport Items from './items.jsx';\nimport NativeSelect from './native-select.jsx';\nimport DisplayText from './display-text.jsx';\nimport { useOnClickOutside } from '../../hooks';\nimport ThemedScrollbars from '../themed-scrollbars/themed-scrollbars.jsx';\nimport Icon from '../icon';\n\nconst Dropdown = ({\n    className,\n    classNameDisplay,\n    classNameItems,\n    classNameLabel,\n    disabled,\n    error,\n    handleBlur,\n    has_symbol,\n    hint,\n    label,\n    list,\n    name,\n    no_border,\n    is_alignment_top,\n    is_alignment_left,\n    is_align_text_left,\n    is_large,\n    is_nativepicker,\n    is_nativepicker_visible,\n    placeholder,\n    onChange,\n    value,\n}) => {\n    const dropdown_ref = React.useRef();\n    const list_ref = React.useRef();\n    const native_select_ref = React.useRef();\n    const wrapper_ref = React.useRef();\n    const nodes = React.useRef(new Map());\n\n    const [is_list_visible, setIsListVisible] = React.useState(!!is_nativepicker_visible);\n    const [list_dimensions, setListDimensions] = React.useState([0, 0]);\n    const initial_render = React.useRef(true);\n\n    const onClickOutSide = () => {\n        if (typeof handleBlur === 'function') handleBlur({ target: { name } });\n        setIsListVisible(false);\n    };\n\n    useOnClickOutside(wrapper_ref, onClickOutSide, () => is_list_visible);\n\n    /**\n     * Calculate the offset for the dropdown list based on its width\n     *\n     * @return {{transform: string}}\n     */\n    const computed_offset_left = () => {\n        return {\n            transform: `translate3d(calc(-${list_dimensions[0]}px - 12px), 0, 0px)`,\n        };\n    };\n\n    /**\n     * Calculate the offset for the dropdown list based on its height\n     *\n     * @return {{transform: string}}\n     */\n    const computed_offset_top = () => {\n        return {\n            transform: `translate3d(0, calc(-${list_dimensions[1]}px - 16px), 0px)`,\n        };\n    };\n\n    const isSingleOption = () => {\n        return Array.isArray(list)\n            ? list.length < 2\n            : // object has less than two props or inner object has less than two props\n              Object.keys(list).length && Object.keys(list).length < 2 && list[Object.keys(list)[0]].length < 2;\n    };\n\n    const containerClassName = () => {\n        return classNames('dc-dropdown-container', className, {\n            'dc-dropdown--has-placeholder': placeholder,\n            'dc-dropdown--left': is_alignment_left,\n            'dc-dropdown--show': is_list_visible,\n            'dc-dropdown--disabled': isSingleOption() || disabled,\n            'dc-dropdown--error': error,\n        });\n    };\n\n    const dropdownDisplayClassName = () => {\n        return classNames('dc-dropdown__display', classNameDisplay, {\n            'dc-dropdown__display--clicked': is_list_visible,\n            'dc-dropdown__display--has-symbol': has_symbol,\n            'dc-dropdown__display--no-border': no_border,\n            'dc-dropdown__display--is-left-text': is_align_text_left,\n        });\n    };\n\n    const dropdownListClassName = () => {\n        return classNames('dc-dropdown__list', {\n            'dc-dropdown__list--left': is_alignment_left,\n            'dc-dropdown__list--top': is_alignment_top,\n        });\n    };\n\n    const listClassNames = () => {\n        return classNames('dc-list', {\n            'dc-list--left': is_alignment_left,\n            'dc-list--large': is_large,\n        });\n    };\n\n    const transitionClassName = () => {\n        return {\n            enter: `dc-dropdown__list--enter${is_alignment_left ? ' dc-dropdown__list--left--enter' : ''}`,\n            enterDone: `dc-dropdown__list--enter-done${\n                is_alignment_left ? ' dc-dropdown__list--left--enter-done' : ''\n            }`,\n            exit: `dc-dropdown__list--exit${is_alignment_left ? ' dc-dropdown__list--left--exit' : ''}`,\n        };\n    };\n\n    React.useEffect(() => {\n        if (is_nativepicker && !is_nativepicker_visible && is_list_visible) {\n            setIsListVisible(false);\n        }\n    }, [is_nativepicker, is_nativepicker_visible]);\n\n    React.useEffect(() => {\n        if (!initial_render.current && !is_list_visible && value) dropdown_ref.current.focus();\n    }, [is_list_visible]);\n\n    const handleSelect = item => {\n        if (item.value !== value) onChange({ target: { name, value: item.value } });\n\n        handleVisibility();\n    };\n\n    const handleVisibility = () => {\n        if (is_nativepicker && !is_list_visible) {\n            if (mobileOSDetect() === 'iOS') {\n                /* .focus() doesn't trigger open <select /> in Android :(\n                 * so we use a CSS hack - refer to L237 in dropdown.scss\n                 * [TODO]: find alternative solution to trigger open <select /> with JS\n                 */\n                native_select_ref.current.focus();\n            }\n            setIsListVisible(true);\n        } else {\n            setIsListVisible(!is_list_visible);\n        }\n    };\n\n    const onKeyPressed = (event, item) => {\n        if (isSingleOption()) return;\n\n        // Tab -> before preventDefault() to be able to go to the next tabIndex\n        if (event.keyCode === 9 && !is_list_visible) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (event.keyCode) {\n            case 27: // esc\n                if (is_list_visible) handleVisibility();\n                break;\n            case 9: // Tab\n            case 13: // Enter\n            case 32: // Space\n                if (!item) return;\n                handleSelect(item);\n                break;\n            case 38: // Up Arrow\n            case 40: // Down Arrow\n                if (is_list_visible) {\n                    focusNextListItem(event.keyCode);\n                } else if (!is_alignment_left) {\n                    handleVisibility();\n                }\n                break;\n            case 37: // Left arrow\n            case 39: // Right Arrow\n                if (is_alignment_left) handleVisibility();\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1 && list.length) {\n            const char = event.key.toLowerCase();\n            const item_starting_with_char = list.find(li => li.value && li.value[0].toLowerCase() === char);\n            if (!item_starting_with_char) return;\n\n            const item_ref = nodes.current.get(item_starting_with_char.value);\n            if (item_ref) item_ref.focus();\n        }\n    };\n\n    const focusNextListItem = direction => {\n        const { activeElement } = document;\n\n        if (activeElement.id === 'dropdown-display') {\n            const el = Array.from(nodes.current.values())[0];\n            if (el && el.focus instanceof Function) {\n                el.focus();\n            }\n        } else {\n            const active_node = nodes.current.get(activeElement.id);\n            if (active_node) {\n                if (direction === 40) {\n                    const next_node = findNextFocusableNode(active_node.nextSibling);\n                    if (next_node) next_node.focus();\n                }\n                if (direction === 38) {\n                    const prev_node = findPreviousFocusableNode(active_node.previousSibling);\n                    if (prev_node) prev_node.focus();\n                }\n            }\n        }\n    };\n\n    // Upon render via css transition group, we use this as a callback to set the width/height of the dropdown list in the state\n    const setListDimension = () => setListDimensions([list_ref.current.offsetWidth, list_ref.current.offsetHeight]);\n\n    const getDropDownAlignment = () => {\n        if (is_alignment_left) return computed_offset_left();\n        else if (is_alignment_top) return computed_offset_top();\n\n        return null;\n    };\n\n    const DropdownItems = ({ items }) => (\n        <Items\n            onKeyPressed={onKeyPressed}\n            className={classNameItems}\n            handleSelect={handleSelect}\n            has_symbol={has_symbol}\n            items={items}\n            name={name}\n            is_align_text_left={is_align_text_left}\n            value={value}\n            nodes={nodes.current}\n        />\n    );\n\n    React.useEffect(() => {\n        if (initial_render.current) {\n            initial_render.current = false;\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <input\n                className='dc-dropdown__inner'\n                autoComplete='off'\n                name={name}\n                readOnly='readonly'\n                type='hidden'\n                value={value || 0}\n            />\n            <div ref={wrapper_ref} className={containerClassName()}>\n                <div className='dc-dropdown__container'>\n                    {label && (\n                        <span\n                            className={classNames('dc-dropdown__label', {\n                                'dc-dropdown__label--clicked': is_list_visible,\n                            })}\n                        >\n                            {label}\n                        </span>\n                    )}\n                    <div\n                        className={dropdownDisplayClassName()}\n                        tabIndex={isSingleOption() ? '-1' : '0'}\n                        onClick={handleVisibility}\n                        onKeyDown={onKeyPressed}\n                        id='dropdown-display'\n                        ref={dropdown_ref}\n                    >\n                        <DisplayText\n                            has_symbol={has_symbol}\n                            name={name}\n                            is_title={is_list_visible}\n                            placeholder={placeholder}\n                            value={value || 0}\n                            list={list}\n                            is_align_text_left={is_align_text_left}\n                        />\n                    </div>\n                    {!isSingleOption() && (\n                        <Icon\n                            icon={is_alignment_left ? 'IcChevronLeft' : 'IcChevronDown'}\n                            className={classNames('dc-dropdown__select-arrow', {\n                                'dc-dropdown__select-arrow--left': is_alignment_left,\n                                'dc-dropdown__select-arrow--up': is_list_visible,\n                                'dc-dropdown__select-arrow--error': error || hint,\n                            })}\n                        />\n                    )}\n                    {error && <p className='dc-field--error'>{error}</p>}\n                    {is_nativepicker ? (\n                        <NativeSelect\n                            ref={native_select_ref}\n                            name={name}\n                            value={value}\n                            list={list}\n                            onChange={onChange}\n                        />\n                    ) : (\n                        <CSSTransition\n                            in={is_list_visible}\n                            timeout={100}\n                            classNames={transitionClassName()}\n                            onEntered={setListDimension}\n                            unmountOnExit\n                        >\n                            <div className={dropdownListClassName()}>\n                                <div\n                                    className={listClassNames()}\n                                    ref={list_ref}\n                                    style={getDropDownAlignment()}\n                                    aria-expanded={is_list_visible}\n                                    role='list'\n                                >\n                                    <ThemedScrollbars height={list_dimensions[1] || '200px'}>\n                                        {Array.isArray(list) ? (\n                                            <DropdownItems items={list} />\n                                        ) : (\n                                            Object.keys(list).map((key, idx) => (\n                                                <React.Fragment key={key}>\n                                                    <div className={classNames('dc-list__label', classNameLabel)}>\n                                                        {key}\n                                                    </div>\n                                                    <DropdownItems items={list[key]} />\n                                                    {idx !== Object.keys(list).length - 1 && (\n                                                        <span className='dc-list__separator' />\n                                                    )}\n                                                </React.Fragment>\n                                            ))\n                                        )}\n                                    </ThemedScrollbars>\n                                </div>\n                            </div>\n                        </CSSTransition>\n                    )}\n                </div>\n                {!error && hint && <p className='dc-dropdown__hint'>{hint}</p>}\n            </div>\n        </React.Fragment>\n    );\n};\n\nDropdown.propTypes = {\n    className: PropTypes.string,\n    classNameDisplay: PropTypes.string,\n    classNameItems: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    disabled: PropTypes.bool,\n    has_symbol: PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_large: PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    is_nativepicker_visible: PropTypes.bool,\n    label: PropTypes.string,\n    list: listPropType(),\n    list_height: PropTypes.string,\n    name: PropTypes.string,\n    no_border: PropTypes.bool,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default Dropdown;\n","import Dropdown from './dropdown.jsx';\nimport './dropdown.scss';\nimport './list.scss';\n\nexport default Dropdown;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon';\n\nclass ExpansionPanel extends React.Component {\n    state = {\n        open_ids: [],\n        is_open: false,\n    };\n\n    onClick = () => {\n        // close if clicking the expansion panel that's open, otherwise open the new one\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    onArrayItemClick = id => {\n        this.setState(state => {\n            if (state.open_ids.includes(id)) {\n                const open_ids = state.open_ids.filter(open_id => open_id !== id);\n                return {\n                    ...state,\n                    open_ids,\n                };\n            }\n            return {\n                ...state,\n                open_ids: [...state.open_ids, id],\n            };\n        });\n    };\n\n    renderArrayContent = array => {\n        return (\n            <div>\n                {array.map((item, index) => {\n                    if (item && item.value !== undefined && item.value !== null && Array.isArray(item.value)) {\n                        return (\n                            <div key={index} className='dc-expansion-panel__content-array'>\n                                <div\n                                    className={classNames('dc-expansion-panel__content-array', {\n                                        'dc-expansion-panel__content-active': this.state.open_ids.includes(item.id),\n                                    })}\n                                >\n                                    <span className='dc-expansion-panel__content-array-item-index'>{index + 1}: </span>(\n                                    {item.value.length})\n                                    <Icon\n                                        className='dc-expansion-panel__content-chevron-icon'\n                                        icon='IcChevronRight'\n                                        onClick={() => this.onArrayItemClick(item.id)}\n                                    />\n                                </div>\n                                {this.state.open_ids.includes(item.id)\n                                    ? this.renderArrayContent(item.value.slice())\n                                    : null}\n                            </div>\n                        );\n                    }\n                    return (\n                        <div key={index} className='dc-expansion-panel__content-array'>\n                            <span className='dc-expansion-panel__content-array-item-index'>{index + 1}:</span>\n                            {item && item.value !== undefined && item.value !== null\n                                ? item.value.toString()\n                                : undefined}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    };\n\n    render() {\n        const { message } = this.props;\n\n        return (\n            <>\n                <div\n                    className={classNames('dc-expansion-panel__header-container', {\n                        'dc-expansion-panel__header-active': this.state.is_open,\n                    })}\n                >\n                    {message.header}\n                    <Icon\n                        icon='IcChevronDownBold'\n                        className='dc-expansion-panel__header-chevron-icon'\n                        onClick={this.onClick}\n                    />\n                </div>\n                {!!this.state.is_open && Array.isArray(message.content)\n                    ? this.renderArrayContent(message.content.slice())\n                    : message.content}\n            </>\n        );\n    }\n}\n\nExpansionPanel.propTypes = {\n    message: PropTypes.object,\n};\n\nexport default ExpansionPanel;\n","import ExpansionPanel from './expansion-panel.jsx';\nimport './expansion-panel.scss';\n\nexport default ExpansionPanel;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport posed, { PoseGroup } from 'react-pose';\n\nconst FadeInFromTopDiv = posed.div({\n    enter: {\n        y: 0,\n        opacity: 1,\n        delay: 300,\n        transition: {\n            default: { duration: 250 },\n        },\n    },\n    exit: {\n        y: -50,\n        opacity: 0,\n        transition: { duration: 250 },\n    },\n});\n\nconst FadeInFromBottomDiv = posed.div({\n    enter: {\n        y: 0,\n        opacity: 1,\n        delay: 300,\n        transition: {\n            default: { duration: 250 },\n        },\n    },\n    exit: {\n        y: 50,\n        opacity: 0,\n        transition: { duration: 250 },\n    },\n});\n\nconst FadeInOnlyDiv = posed.div({\n    enter: {\n        opacity: 1,\n        transition: { duration: 300 },\n    },\n    exit: {\n        opacity: 0,\n        transition: { duration: 300 },\n    },\n});\n\n// `flipMove={false}` is necessary to fix react-pose bug: https://github.com/Popmotion/popmotion/issues/805\nconst FadeWrapper = ({ children, className, is_visible, keyname, type }) => {\n    if (type === 'top') {\n        return (\n            <PoseGroup flipMove={false}>\n                {is_visible && (\n                    <FadeInFromTopDiv className={className} key={keyname}>\n                        {children}\n                    </FadeInFromTopDiv>\n                )}\n            </PoseGroup>\n        );\n    }\n    if (type === 'bottom') {\n        return (\n            <PoseGroup flipMove={false}>\n                {is_visible && (\n                    <FadeInFromBottomDiv className={className} key={keyname}>\n                        {children}\n                    </FadeInFromBottomDiv>\n                )}\n            </PoseGroup>\n        );\n    }\n    return (\n        <PoseGroup flipMove={false}>\n            {is_visible && (\n                <FadeInOnlyDiv className={className} key={keyname}>\n                    {children}\n                </FadeInOnlyDiv>\n            )}\n        </PoseGroup>\n    );\n};\n\nFadeWrapper.propTypes = {\n    children: PropTypes.node,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport default FadeWrapper;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dropzone from 'react-dropzone';\n\nconst FadeInMessage = ({ is_visible, children, key, timeout }) => (\n    <CSSTransition\n        appear\n        key={key}\n        in={is_visible}\n        timeout={timeout}\n        classNames={{\n            appear: 'dc-file-dropzone__message--enter',\n            enter: 'dc-file-dropzone__message--enter',\n            enterActive: 'dc-file-dropzone__message--enter-active',\n            enterDone: 'dc-file-dropzone__message--enter-done',\n            exit: 'dc-file-dropzone__message--exit',\n            exitActive: 'dc-file-dropzone__message--exit-active',\n        }}\n        unmountOnExit\n    >\n        {children}\n    </CSSTransition>\n);\n\nconst FileDropzone = ({ className, ...props }) => (\n    <Dropzone\n        // sends back accepted files array\n        onDropAccepted={props.onDropAccepted}\n        // sends back rejected files array\n        onDropRejected={props.onDropRejected}\n        // allow multiple uploads\n        multiple={props.multiple || false}\n        // accept prop is same as native HTML5 input accept - e.g - 'image/png'\n        accept={props.accept}\n        // set maximum size limit for file, in bytes (binary)\n        maxSize={props.max_size}\n    >\n        {({ getRootProps, getInputProps, isDragAccept, isDragActive, isDragReject }) => {\n            return (\n                <div\n                    {...getRootProps()}\n                    className={classNames('dc-file-dropzone', className, {\n                        'dc-file-dropzone--is-active': isDragActive,\n                        'dc-file-dropzone--has-file': isDragActive || props.value.length > 0,\n                        'dc-file-dropzone--has-error':\n                            (isDragReject || !!props.validation_error_message) && !isDragAccept,\n                    })}\n                >\n                    <input {...getInputProps()} />\n                    <div className='dc-file-dropzone__content'>\n                        <FadeInMessage\n                            // default message when not on hover or onDrag\n                            is_visible={\n                                !isDragActive &&\n                                !!props.message &&\n                                props.value.length < 1 &&\n                                !props.validation_error_message\n                            }\n                            timeout={150}\n                        >\n                            <div className='dc-file-dropzone__message'>{props.message}</div>\n                        </FadeInMessage>\n                        <FadeInMessage\n                            // message shown on hover if files are accepted onDrag\n                            is_visible={isDragActive && !isDragReject}\n                            timeout={150}\n                        >\n                            <div className='dc-file-dropzone__message'>{props.hover_message}</div>\n                        </FadeInMessage>\n                        {/* Handle cases for displaying multiple files and single filenames */}\n                        {props.multiple && (props.value.length > 0 && !props.validation_error_message)\n                            ? props.value.map((file, idx) => (\n                                  <span key={idx} className='dc-file-dropzone__filename'>\n                                      {file.name}\n                                  </span>\n                              ))\n                            : props.value[0] &&\n                              !isDragActive && (\n                                  <span className='dc-file-dropzone__filename'>{props.value[0].name}</span>\n                              )}\n                        <FadeInMessage\n                            // message shown if there are errors with the dragged file\n                            is_visible={isDragReject}\n                            timeout={150}\n                        >\n                            <div\n                                className={classNames('dc-file-dropzone__message', 'dc-file-dropzone__message--error')}\n                            >\n                                {props.error_message}\n                            </div>\n                        </FadeInMessage>\n                        <FadeInMessage\n                            // message shown on if there are validation errors with file uploaded\n                            is_visible={!!props.validation_error_message && !isDragActive}\n                            timeout={150}\n                        >\n                            <div\n                                className={classNames('dc-file-dropzone__message', 'dc-file-dropzone__message--error')}\n                            >\n                                {props.validation_error_message}\n                            </div>\n                        </FadeInMessage>\n                    </div>\n                </div>\n            );\n        }}\n    </Dropzone>\n);\n\nexport default FileDropzone;\n","import FileDropzone from './file-dropzone.jsx';\nimport './file-dropzone.scss';\n\nexport default FileDropzone;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass FormProgress extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el_completed_bar = React.createRef();\n    }\n\n    componentDidMount() {\n        this.animateCompleteBar();\n    }\n\n    componentDidUpdate() {\n        this.animateCompleteBar();\n    }\n\n    animateCompleteBar() {\n        const el_first_identifier = document.querySelector('.identifier') || {\n            offsetLeft: 0,\n            clientWidth: 1,\n        };\n        const each = 100 / this.props.steps.length;\n        this.el_completed_bar.current.style.width = `${this.props.current_step * each}%`;\n        this.el_completed_bar.current.style.transform = `translateX(${el_first_identifier.offsetLeft +\n            el_first_identifier.clientWidth / 2}px)`;\n    }\n\n    render() {\n        const { current_step, steps } = this.props;\n        return (\n            <div className='dc-form-progress'>\n                <div className='dc-form-progress__header'>\n                    <h2>{steps[current_step].header.active_title}</h2>\n                    <div className='dc-form-progress__steps'>\n                        <div\n                            className='dc-form-progress__steps--before'\n                            style={{\n                                width: `calc(100% * ${steps.length - 1} / ${steps.length})`,\n                            }}\n                        />\n                        {steps.map((item, idx) => (\n                            <div\n                                key={idx + 1}\n                                className={classNames('dc-form-progress__step', {\n                                    'dc-form-progress__step--active': idx <= current_step,\n                                    'dc-form-progress__step--current': idx === current_step,\n                                })}\n                            >\n                                <span className='identifier'>{idx + 1}</span>\n                                <p className='title'>{item.header.title}</p>\n                            </div>\n                        ))}\n                        <div ref={this.el_completed_bar} className='dc-form-progress__steps--after' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nFormProgress.propTypes = {\n    current_step: PropTypes.any,\n    nextStep: PropTypes.any,\n    prevStep: PropTypes.any,\n    steps: PropTypes.array,\n};\n\nFormProgress.defaultProps = { steps: [] };\n\nexport default FormProgress;\n","import FormProgress from './form-progress.jsx';\nimport './form-progress.scss';\n\nexport default FormProgress;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '../button/button.jsx';\n\nconst FormSubmitButton = ({\n    cancel_label,\n    className,\n    has_cancel,\n    form_error,\n    is_center,\n    is_disabled,\n    is_absolute,\n    is_loading,\n    label,\n    onCancel,\n    ...props\n}) => {\n    return (\n        <div\n            className={classNames('dc-form-submit-button', className, {\n                'dc-form-submit-button--absolute': is_absolute,\n                'dc-form-submit-button--center': !!is_center,\n                'dc-form-submit-button--relative': !is_absolute,\n            })}\n        >\n            {!!form_error && <p className='dc-form-submit-button--error'>{form_error}</p>}\n            {has_cancel && <Button has_effect onClick={onCancel} text={cancel_label} type='button' secondary large />}\n            <Button\n                has_effect\n                is_disabled={is_disabled}\n                type='submit'\n                text={label}\n                is_loading={is_loading}\n                primary\n                large\n                {...props}\n            />\n        </div>\n    );\n};\n\nFormSubmitButton.defaultProps = {\n    className: undefined,\n    has_cancel: false,\n    form_error: '',\n    is_disabled: false,\n    is_center: false,\n    is_absolute: false,\n};\n\nFormSubmitButton.propTypes = {\n    className: PropTypes.string,\n    has_cancel: PropTypes.bool,\n    is_absolute: PropTypes.bool,\n    is_center: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    label: PropTypes.string,\n};\n\nexport default FormSubmitButton;\n","import FormSubmitButton from './form-submit-button.jsx';\nimport './form-submit-button.scss';\n\nexport default FormSubmitButton;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon/icon.jsx';\n\nconst HintBox = ({ className, icon, is_info, message }) => {\n    return (\n        <div\n            className={classNames('dc-hint-box', {\n                'dc-hint-box--info': is_info,\n                className: !!className,\n            })}\n        >\n            <Icon\n                className='dc-hint-box__icon'\n                custom_color={is_info ? 'var(--status-info)' : undefined}\n                icon={icon}\n                size={16}\n            />\n            <div className='dc-hint-box__message'>{message}</div>\n        </div>\n    );\n};\n\nHintBox.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default HintBox;\n","import HintBox from './hint-box.jsx';\nimport './hint-box.scss';\n\nexport default HintBox;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon/icon.jsx';\n\nconst IconTradeTypes = ({ type, className, ...props }) => {\n    switch (type.toLowerCase()) {\n        case 'asiand':\n            return <Icon icon='IcTradetypeAsiand' className={className} color='brand' {...props} />;\n        case 'asianu':\n            return <Icon icon='IcTradetypeAsianu' className={className} color='brand' {...props} />;\n        case 'call_barrier':\n            return <Icon icon='IcTradetypeCallBarrier' className={className} color='brand' {...props} />;\n        case 'calle':\n            return <Icon icon='IcTradetypeCall' className={className} color='brand' {...props} />;\n        case 'call':\n            return <Icon icon='IcTradetypeCall' className={className} color='brand' {...props} />;\n        case 'callspread':\n            return <Icon icon='IcTradetypeCallspread' className={className} color='brand' {...props} />;\n        case 'putspread':\n            return <Icon icon='IcTradetypePutsread' className={className} color='brand' {...props} />;\n        case 'digitdiff':\n            return <Icon icon='IcTradetypeDigitdiff' className={className} color='brand' {...props} />;\n        case 'digiteven':\n            return <Icon icon='IcTradetypeDigiteven' className={className} color='brand' {...props} />;\n        case 'digitmatch':\n            return <Icon icon='IcTradetypeDigitmatch' className={className} color='brand' {...props} />;\n        case 'digitodd':\n            return <Icon icon='IcTradetypeDigitodd' className={className} color='brand' {...props} />;\n        case 'digitover':\n            return <Icon icon='IcTradetypeDigitover' className={className} color='brand' {...props} />;\n        case 'digitunder':\n            return <Icon icon='IcTradetypeDigitunder' className={className} color='brand' {...props} />;\n        case 'expirymiss':\n            return <Icon icon='IcTradetypeExpirymiss' className={className} color='brand' {...props} />;\n        case 'expiryrangee':\n        case 'expiryrange':\n            return <Icon icon='IcTradetypeExpiryrange' className={className} color='brand' {...props} />;\n        case 'lbfloatcall':\n            return <Icon icon='IcTradetypeLbcall' className={className} color='brand' {...props} />;\n        case 'lbfloatput':\n            return <Icon icon='IcTradetypeLbput' className={className} color='brand' {...props} />;\n        case 'lbhighlow':\n            return <Icon icon='IcTradetypeLbhighlow' className={className} color='brand' {...props} />;\n        case 'multdown':\n            return <Icon icon='IcTradetypeMultdown' className={className} color='brand' {...props} />;\n        case 'multup':\n            return <Icon icon='IcTradetypeMultup' className={className} color='brand' {...props} />;\n        case 'notouch':\n            return <Icon icon='IcTradetypeNotouch' className={className} color='brand' {...props} />;\n        case 'onetouch':\n            return <Icon icon='IcTradetypeOnetouch' className={className} color='brand' {...props} />;\n        case 'put_barrier':\n            return <Icon icon='IcTradetypePutBarrier' className={className} color='brand' {...props} />;\n        case 'pute':\n            return <Icon icon='IcTradetypePut' className={className} color='brand' {...props} />;\n        case 'put':\n            return <Icon icon='IcTradetypePut' className={className} color='brand' {...props} />;\n        case 'range':\n            return <Icon icon='IcTradetypeRange' className={className} color='brand' {...props} />;\n        case 'resetcall':\n            return <Icon icon='IcTradetypeResetcall' className={className} color='brand' {...props} />;\n        case 'resetput':\n            return <Icon icon='IcTradetypeResetput' className={className} color='brand' {...props} />;\n        case 'runhigh':\n            return <Icon icon='IcTradetypeRunhigh' className={className} color='brand' {...props} />;\n        case 'runlow':\n            return <Icon icon='IcTradetypeRunlow' className={className} color='brand' {...props} />;\n        case 'tickhigh':\n            return <Icon icon='IcTradetypeTickhigh' className={className} color='brand' {...props} />;\n        case 'ticklow':\n            return <Icon icon='IcTradetypeTicklow' className={className} color='brand' {...props} />;\n        case 'upordown':\n            return <Icon icon='IcTradetypeUpordown' className={className} color='brand' {...props} />;\n        default:\n            return <Icon icon='IcUnknown' className={className} {...props} />;\n    }\n};\n\nIconTradeTypes.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default IconTradeTypes;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst available_modes = [\n    'default',\n    'success',\n    'warn',\n    'danger',\n    'info',\n    'default-invert',\n    'success-invert',\n    'warn-invert',\n];\n\nconst available_sizes = ['regular', 'large'];\n\nconst Label = ({ mode, children, size = 'regular', className }) => {\n    const type = available_modes.some(m => m === mode) ? mode : 'default';\n    const scale = available_sizes.some(s => s === size) ? size : 'regular';\n\n    return (\n        <span\n            className={classNames('dc-label', className, {\n                [`dc-label--${scale}`]: scale,\n                [`dc-label--${type}`]: type,\n            })}\n        >\n            {children}\n        </span>\n    );\n};\n\nLabel.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    mode: PropTypes.oneOf(available_modes),\n};\n\nexport default Label;\n","import Label from './label.jsx';\nimport './label.scss';\n\nexport default Label;\n","import classNames from 'classnames';\nimport React from 'react';\n\nexport const LinearProgress = ({ progress }) => (\n    <div className={classNames('dc-linear-progress')}>\n        <div className={classNames('dc-linear-progress__bar')} style={{ width: `${progress}%` }} />\n    </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LinearProgress } from './linear-progress.jsx';\n\nclass LinearProgressContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeout: props.timeout / 1000,\n            total_ticks: Math.round(props.timeout / 1000),\n            current_tick: Math.round(props.timeout / 1000),\n        };\n    }\n\n    get progress() {\n        return 100 - Math.round((this.state.current_tick / this.state.total_ticks) * 100);\n    }\n\n    get remaining() {\n        return this.state.timeout >= 0 ? this.state.timeout : 0;\n    }\n\n    makeProgress = () => {\n        this.setState({\n            current_tick: this.state.current_tick - 1,\n            timeout: this.state.timeout - 1,\n        });\n    };\n\n    run = () => {\n        this.props.action();\n    };\n\n    componentDidMount() {\n        this.interval = setInterval(this.makeProgress, 1000);\n    }\n\n    componentDidUpdate() {\n        if (this.progress > 100) {\n            this.run();\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { timeout, className } = this.props;\n        if (!timeout) return null;\n\n        return (\n            <div className='dc-linear-progress-container'>\n                <div className='dc-linear-progress__countdown'>{this.props.render(this.remaining)}</div>\n                <LinearProgress className={className} progress={this.progress} height={4} />\n            </div>\n        );\n    }\n}\n\nLinearProgressContainer.propTypes = {\n    timeout: PropTypes.number,\n    action: PropTypes.func,\n    render: PropTypes.func.isRequired,\n};\n\nexport default LinearProgressContainer;\n","import Loading from './loading.jsx';\nimport './loading.scss';\n\nexport default Loading;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Swipeable } from 'react-swipeable';\nimport Icon from '../icon';\n\nexport const MobileCarousel = ({ children, ...props }) => {\n    const carousel_body = React.createRef();\n    const [min_width, setMinWidth] = React.useState(0);\n    const [index, setIndex] = React.useState(0);\n    const [total_elements, setTotal] = React.useState(0);\n\n    // Carousel is only active for more than 1 child items\n    if (children.length <= 1) {\n        return children;\n    }\n\n    React.useEffect(() => {\n        setMinWidth(carousel_body.current.children[0].clientWidth + 1);\n        carousel_body.current.scrollLeft = index * (min_width + 1);\n        setTotal(React.Children.count(children));\n    }, [index, min_width]);\n\n    const goPrev = () => {\n        if (index !== 0) {\n            setIndex(index - 1);\n        }\n    };\n\n    const goNext = () => {\n        if (index < total_elements - 1) {\n            setIndex(index + 1);\n        }\n    };\n\n    const goToIndex = idx => {\n        setIndex(idx);\n    };\n\n    const swipedLeft = () => goNext();\n    const swipedRight = () => goPrev();\n\n    return (\n        <div className='dc-carousel'>\n            <div className='dc-carousel__row'>\n                <div className='dc-carousel__pref'>\n                    <Icon icon='IcChevronLeft' onClick={goPrev} />\n                </div>\n                <Swipeable\n                    className={classNames('dc-carousel__view')}\n                    onSwipedLeft={swipedLeft}\n                    onSwipedRight={swipedRight}\n                    {...props}\n                >\n                    <div className='dc-carousel__body' ref={carousel_body}>\n                        {children}\n                    </div>\n                </Swipeable>\n                <div className='dc-carousel__next' onClick={goNext}>\n                    <Icon icon='IcChevronRight' />\n                </div>\n            </div>\n            <div className='dc-carousel__footer'>\n                {React.Children.map(children, (child, idx) => {\n                    return (\n                        <span\n                            key={idx}\n                            onClick={() => goToIndex(idx)}\n                            color={idx === index ? 'active' : 'secondary'}\n                            className={classNames('dc-carousel__circle', {\n                                'dc-carousel__circle--is-active': idx === index,\n                            })}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n","import { MobileCarousel } from './mobile-carousel.jsx';\nimport './mobile-carousel.scss';\n\nexport default MobileCarousel;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon from '../icon/icon.jsx';\nimport Div100vhContainer from '../div100vh-container';\n\nconst MobileDialog = props => {\n    const { title, visible, children, portal_element_id, renderTitle, wrapper_classname, footer } = props;\n\n    const footer_ref = React.useRef(false);\n    const [footer_height, setHeight] = React.useState(0);\n    React.useEffect(() => {\n        if (footer_ref.current && !footer_height) {\n            setHeight(footer_ref.current.offsetHeight);\n        } else {\n            footer_ref.current = true;\n        }\n    }, [footer]);\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.style.overflow = 'hidden';\n            document.getElementById(portal_element_id).style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = null;\n            document.getElementById(portal_element_id).style.overflow = null;\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = e => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n    if (!document.getElementById(portal_element_id)) return null;\n    return ReactDOM.createPortal(\n        <CSSTransition\n            in={visible}\n            timeout={250}\n            classNames={{\n                enter: 'dc-mobile-dialog--enter',\n                enterDone: 'dc-mobile-dialog--enter-done',\n                exit: 'dc-mobile-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='dc-mobile-dialog' onClick={handleClick}>\n                <Div100vhContainer\n                    className={classNames('dc-mobile-dialog__container', {\n                        'dc-mobile-dialog__container--has-scroll': props.has_content_scroll,\n                    })}\n                    height_offset={props.content_height_offset || '8px'}\n                >\n                    <div className='dc-mobile-dialog__header'>\n                        {!!renderTitle ||\n                            (!!title && (\n                                <h2 className='dc-mobile-dialog__title'>{renderTitle ? renderTitle() : title}</h2>\n                            ))}\n                        <div className='icons dc-btn-close dc-mobile-dialog__close-btn' onClick={props.onClose}>\n                            <Icon icon='IcCross' className='dc-mobile-dialog__close-btn-icon' />\n                        </div>\n                    </div>\n                    <div\n                        className='dc-mobile-dialog__content'\n                        style={footer_height ? { height: `calc(100% - ${footer_height}px)` } : undefined}\n                    >\n                        <div\n                            className={classNames({\n                                [`dc-mobile-dialog__${wrapper_classname}`]: wrapper_classname,\n                            })}\n                        >\n                            {children}\n                        </div>\n                    </div>\n                    {footer && (\n                        <div ref={footer_ref} className='dc-mobile-dialog__footer'>\n                            {footer}\n                        </div>\n                    )}\n                </Div100vhContainer>\n            </div>\n        </CSSTransition>,\n        document.getElementById(portal_element_id)\n    );\n};\n\nMobileDialog.propTypes = {\n    content_height_offset: PropTypes.string,\n    children: PropTypes.any,\n    onClose: PropTypes.func,\n    has_content_scroll: PropTypes.bool,\n    portal_element_id: PropTypes.string.isRequired,\n    renderTitle: PropTypes.func,\n    title: PropTypes.string,\n    visible: PropTypes.bool,\n    wrapper_classname: PropTypes.string,\n};\n\nexport default MobileDialog;\n","import MobileDialog from './mobile-dialog.jsx';\nimport './mobile-dialog.scss';\n\nexport default MobileDialog;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Body = ({ children, className }) => (\n    <div className={classNames('dc-mobile-drawer__body', className)}>{children}</div>\n);\n\nBody.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nexport default Body;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Footer = ({ children, className }) => (\n    <div className={classNames('dc-mobile-drawer__footer', className)}>{children}</div>\n);\n\nFooter.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nexport default Footer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ className, children }) => (\n    <div className={classNames('dc-mobile-drawer__subheader', className)}>{children}</div>\n);\n\nHeader.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nexport default Header;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Item = ({ className, children, onClick }) => (\n    <div className={classNames('dc-mobile-drawer__item', className)} onClick={onClick}>\n        {children}\n    </div>\n);\n\nItem.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nexport default Item;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon from '../icon';\n\nclass SubMenu extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_expanded: false,\n        };\n    }\n\n    toggleMenu = () => {\n        const is_expanded = !this.state.is_expanded;\n        this.setState({ is_expanded });\n        if (this.props.onToggle) {\n            this.props.onToggle(is_expanded);\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div\n                    className={classNames('dc-mobile-drawer__submenu-toggle', this.props.submenu_toggle_class)}\n                    onClick={this.toggleMenu}\n                >\n                    {this.props.submenu_icon && (\n                        <Icon className='dc-mobile-drawer__submenu-toggle-icon' icon={this.props.submenu_icon} />\n                    )}\n                    {this.props.submenu_title && (\n                        <h3 className='dc-mobile-drawer__submenu-toggle-text'>{this.props.submenu_title}</h3>\n                    )}\n                    {this.props.submenu_suffix_icon && (\n                        <Icon\n                            className='dc-mobile-drawer__submenu-toggle-suffix-icon'\n                            icon={this.props.submenu_suffix_icon}\n                        />\n                    )}\n                </div>\n                <SubMenuList\n                    has_subheader={this.props.has_subheader}\n                    is_expanded={this.state.is_expanded}\n                    submenu_title={this.props.submenu_title}\n                    collapse={this.toggleMenu}\n                >\n                    {this.props.children}\n                </SubMenuList>\n            </React.Fragment>\n        );\n    }\n}\n\nSubMenu.propTypes = {\n    children: PropTypes.node,\n    has_subheader: PropTypes.bool,\n    submenu_icon: PropTypes.string,\n    submenu_suffix_icon: PropTypes.string,\n    submenu_title: PropTypes.string,\n    submenu_toggle_class: PropTypes.string,\n};\n\nconst SubMenuList = ({ is_expanded, collapse, children, has_subheader, submenu_title }) => (\n    <CSSTransition\n        in={is_expanded}\n        classNames={{\n            enter: 'dc-mobile-drawer__submenu-list--enter',\n            enterDone: 'dc-mobile-drawer__submenu-list--enter-done',\n            exit: 'dc-mobile-drawer__submenu-list--exit',\n        }}\n        timeout={250}\n        unmountOnExit\n    >\n        <div\n            className={classNames('dc-mobile-drawer__submenu-list', {\n                'dc-mobile-drawer__submenu-list--has-subheader': has_subheader,\n            })}\n        >\n            <div className='dc-mobile-drawer__submenu-list-title' onClick={collapse}>\n                <div className='dc-mobile-drawer__submenu-back'>\n                    <Icon className='dc-mobile-drawer__submenu-back-icon' icon='IcChevronLeft' />\n                </div>\n                {submenu_title && <h3 className='dc-mobile-drawer__submenu-list-title-text'>{submenu_title}</h3>}\n            </div>\n            {children}\n        </div>\n    </CSSTransition>\n);\n\nSubMenuList.propTypes = {\n    children: PropTypes.node,\n    collapse: PropTypes.func,\n    has_subheader: PropTypes.bool,\n    is_expanded: PropTypes.bool,\n    submenu_title: PropTypes.string,\n};\n\nexport default SubMenu;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../icon';\n\nclass SubMenuSection extends React.PureComponent {\n    render() {\n        return (\n            <div className={classNames('dc-mobile-drawer__submenu-section', this.props.submenu_toggle_class)}>\n                <div className='dc-mobile-drawer__submenu-section-title'>\n                    {this.props.section_icon && (\n                        <Icon className='dc-mobile-drawer__submenu-section-title-icon' icon={this.props.section_icon} />\n                    )}\n                    {this.props.section_title && (\n                        <h3 className='dc-mobile-drawer__submenu-section-title-text'>{this.props.section_title}</h3>\n                    )}\n                </div>\n                <div className='dc-mobile-drawer__submenu-section-content'>{this.props.children}</div>\n            </div>\n        );\n    }\n}\n\nSubMenuSection.propTypes = {\n    children: PropTypes.node,\n    section_icon: PropTypes.string,\n    section_title: PropTypes.string,\n};\n\nexport default SubMenuSection;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Drawer from 'react-drag-drawer';\nimport Body from './mobile-drawer-body.jsx';\nimport Footer from './mobile-drawer-footer.jsx';\nimport SubHeader from './mobile-drawer-subheader.jsx';\nimport Item from './mobile-drawer-item.jsx';\nimport SubMenu from './mobile-drawer-submenu.jsx';\nimport SubMenuSection from './mobile-drawer-submenu-section.jsx';\nimport Icon from '../icon/icon.jsx';\n\nconst MobileDrawer = ({\n    className,\n    id,\n    height,\n    width,\n    alignment,\n    is_open,\n    title,\n    toggle,\n    children,\n    livechat: LiveChat,\n}) => (\n    <Drawer\n        direction={alignment}\n        open={is_open}\n        onRequestClose={toggle}\n        containerElementClass='dc-mobile-drawer__wrapper'\n        modalElementClass='dc-mobile-drawer'\n    >\n        <div\n            id={id}\n            className={classNames('dc-mobile-drawer__container', {\n                [`dc-mobile-drawer__container_${className}`]: className,\n            })}\n            style={{\n                height: height || 'auto',\n                width: width || 'auto',\n            }}\n        >\n            <div\n                className={classNames('dc-mobile-drawer__header', {\n                    'dc-mobile-drawer__header--right': alignment === 'right',\n                    [`dc-mobile-drawer__header--${className}`]: className,\n                })}\n            >\n                <div onClick={toggle} className='dc-mobile-drawer__header-close'>\n                    <Icon icon='IcCross' />\n                </div>\n                <div className='dc-mobile-drawer__header-wrapper'>\n                    {title && (\n                        <h3\n                            className={classNames('dc-mobile-drawer__header-title', {\n                                [`dc-mobile-drawer-header__title--${className}`]: className,\n                            })}\n                        >\n                            {title}\n                        </h3>\n                    )}\n                    {LiveChat}\n                </div>\n            </div>\n            {children}\n        </div>\n    </Drawer>\n);\n\nMobileDrawer.defaultProps = {\n    alignment: 'left',\n};\n\nMobileDrawer.Body = Body;\nMobileDrawer.Footer = Footer;\nMobileDrawer.Item = Item;\nMobileDrawer.SubHeader = SubHeader;\nMobileDrawer.SubMenu = SubMenu;\nMobileDrawer.SubMenuSection = SubMenuSection;\n\nMobileDrawer.propTypes = {\n    alignment: PropTypes.oneOf(['left', 'right']),\n    children: PropTypes.node,\n    className: PropTypes.string,\n    height: PropTypes.string,\n    id: PropTypes.string,\n    is_open: PropTypes.bool,\n    livechat_title: PropTypes.string,\n    onClickLivechat: PropTypes.func,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    toggle: PropTypes.func,\n    width: PropTypes.string,\n};\n\nexport default MobileDrawer;\n","import MobileDrawer from './mobile-drawer.jsx';\nimport './mobile-drawer.scss';\n\nexport default MobileDrawer;\n","import React from 'react';\n\nconst Body = ({ children }) => <div className='dc-modal-body'>{children}</div>;\n\nexport default Body;\n","import classNames from 'classnames';\nimport React from 'react';\n\nconst Footer = ({ children, has_separator, is_bypassed }) => {\n    if (is_bypassed) return children;\n    return (\n        <div className={classNames('dc-modal-footer', { 'dc-modal-footer--separator': has_separator })}>{children}</div>\n    );\n};\n\nexport default Footer;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Body from './modal-body.jsx';\nimport Footer from './modal-footer.jsx';\nimport Icon from '../icon/icon.jsx';\nimport { useOnClickOutside } from '../../hooks';\n\nconst ModalElement = ({\n    elements_to_ignore,\n    has_close_icon,\n    onMount,\n    onUnmount,\n    is_open,\n    toggleModal,\n    id,\n    title,\n    className,\n    is_vertical_centered,\n    is_vertical_bottom,\n    is_vertical_top,\n    header,\n    children,\n    height,\n    width,\n    renderTitle,\n    small,\n}) => {\n    const el_ref = React.useRef(document.createElement('div'));\n    const modal_root_ref = React.useRef(document.getElementById('modal_root'));\n    const wrapper_ref = React.useRef();\n\n    const is_datepicker_visible = () => modal_root_ref.current.querySelectorAll('.dc-datepicker__picker').length;\n    const validateClickOutside = e => {\n        const is_reality_check_visible = modal_root_ref.current.querySelectorAll('.dc-modal__container_reality-check')\n            .length;\n        return (\n            has_close_icon &&\n            !is_datepicker_visible() &&\n            is_open &&\n            !is_reality_check_visible &&\n            !(elements_to_ignore && e?.path.find(el => elements_to_ignore.includes(el)))\n        );\n    };\n\n    useOnClickOutside(wrapper_ref, toggleModal, validateClickOutside);\n\n    React.useEffect(() => {\n        el_ref.current.classList.add('dc-modal');\n        modal_root_ref.current.appendChild(el_ref.current);\n        if (typeof onMount === 'function') onMount();\n\n        return () => {\n            modal_root_ref.current.removeChild(el_ref.current);\n            if (typeof onUnmount === 'function') onUnmount();\n        };\n    }, []);\n\n    const rendered_title = typeof renderTitle === 'function' ? renderTitle() : null;\n\n    return ReactDOM.createPortal(\n        <div\n            ref={wrapper_ref}\n            id={id}\n            className={classNames('dc-modal__container', {\n                [`dc-modal__container_${className}`]: className,\n                'dc-modal__container--small': small,\n                'dc-modal__container--is-vertical-centered': is_vertical_centered,\n                'dc-modal__container--is-vertical-bottom': is_vertical_bottom,\n                'dc-modal__container--is-vertical-top': is_vertical_top,\n            })}\n            style={{\n                height: height || 'auto',\n                width: width || 'auto',\n            }}\n        >\n            {(header || title || rendered_title) && (\n                <div\n                    className={classNames('dc-modal-header', {\n                        [`dc-modal-header--${className}`]: className,\n                    })}\n                >\n                    {rendered_title && (\n                        <h3\n                            className={classNames('dc-modal-header__title', {\n                                [`dc-modal-header__title--${className}`]: className,\n                            })}\n                        >\n                            {rendered_title}\n                        </h3>\n                    )}\n                    {title && (\n                        <h3\n                            className={classNames('dc-modal-header__title', {\n                                [`dc-modal-header__title--${className}`]: className,\n                            })}\n                        >\n                            {title}\n                        </h3>\n                    )}\n                    {header && (\n                        <div\n                            className={classNames('dc-modal-header__section', {\n                                [`dc-modal-header__section--${className}`]: className,\n                            })}\n                        >\n                            {header}\n                        </div>\n                    )}\n                    {has_close_icon && (\n                        <div onClick={toggleModal} className='dc-modal-header__close'>\n                            <Icon icon='IcCross' />\n                        </div>\n                    )}\n                </div>\n            )}\n            {children}\n        </div>,\n        el_ref.current\n    );\n};\n\nModalElement.defaultProps = {\n    has_close_icon: true,\n};\n\nModalElement.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    has_close_icon: PropTypes.bool,\n    header: PropTypes.node,\n    id: PropTypes.string,\n    is_open: PropTypes.bool,\n    onMount: PropTypes.func,\n    onUnmount: PropTypes.func,\n    small: PropTypes.bool,\n    renderTitle: PropTypes.func,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.node]),\n    toggleModal: PropTypes.func,\n    elements_to_ignore: PropTypes.array,\n};\n\nconst Modal = ({\n    children,\n    className,\n    header,\n    id,\n    is_open,\n    has_close_icon,\n    height,\n    onEntered,\n    onExited,\n    onMount,\n    onUnmount,\n    small,\n    is_vertical_bottom,\n    is_vertical_centered,\n    is_vertical_top,\n    renderTitle,\n    title,\n    toggleModal,\n    width,\n    elements_to_ignore,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear: 'dc-modal__container--enter',\n            enter: 'dc-modal__container--enter',\n            enterDone: 'dc-modal__container--enter-done',\n            exit: 'dc-modal__container--exit',\n        }}\n        unmountOnExit\n        onEntered={onEntered}\n        onExited={onExited}\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            id={id}\n            is_open={is_open}\n            is_vertical_bottom={is_vertical_bottom}\n            is_vertical_centered={is_vertical_centered}\n            is_vertical_top={is_vertical_top}\n            title={title}\n            toggleModal={toggleModal}\n            has_close_icon={has_close_icon}\n            height={height}\n            onMount={onMount}\n            onUnmount={onUnmount}\n            renderTitle={renderTitle}\n            small={small}\n            width={width}\n            elements_to_ignore={elements_to_ignore}\n        >\n            {children}\n        </ModalElement>\n    </CSSTransition>\n);\n\nModal.Body = Body;\nModal.Footer = Footer;\n\nModal.defaultProps = {\n    has_close_icon: true,\n};\n\nModal.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    has_close_icon: PropTypes.bool,\n    header: PropTypes.node,\n    height: PropTypes.string,\n    id: PropTypes.string,\n    is_open: PropTypes.bool,\n    is_vertical_bottom: PropTypes.bool,\n    is_vertical_centered: PropTypes.bool,\n    is_vertical_top: PropTypes.bool,\n    onEntered: PropTypes.func,\n    onExited: PropTypes.func,\n    onMount: PropTypes.func,\n    onUnmount: PropTypes.func,\n    renderTitle: PropTypes.func,\n    small: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.node]),\n    toggleModal: PropTypes.func,\n    width: PropTypes.string,\n    elements_to_ignore: PropTypes.array,\n};\n\nexport default Modal;\n","import Modal from './modal.jsx';\nimport './modal.scss';\n\nexport default Modal;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { formatMoney } from '@deriv/shared';\n\nconst Money = ({ amount, className, currency = 'USD', has_sign, should_format = true }) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    // if it's formatted already then don't make any changes unless we should remove extra -/+ signs\n    const value = has_sign || should_format ? Math.abs(amount) : amount;\n    const final_amount = should_format ? formatMoney(currency, value, true) : value;\n\n    return (\n        <React.Fragment>\n            {has_sign && sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    className: PropTypes.string,\n    currency: PropTypes.string,\n    has_sign: PropTypes.bool,\n    should_format: PropTypes.bool,\n};\n\nexport default React.memo(Money);\n","import Money from './money.jsx';\nimport './money.scss';\n\nexport default Money;\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React from 'react';\nimport Icon from '../icon';\n\nclass MultiStep extends React.Component {\n    state = {\n        step: 0,\n        component: this.props.steps[0].component,\n    };\n\n    nextStep = () => {\n        this.setState(\n            {\n                step: this.state.step + 1,\n            },\n            () =>\n                this.setState({\n                    component: this.props.steps[this.state.step].component,\n                })\n        );\n    };\n\n    prevStep = () => {\n        this.setState(\n            {\n                step: this.state.step - 1,\n            },\n            () =>\n                this.setState({\n                    component: this.props.steps[this.state.step].component,\n                })\n        );\n    };\n\n    prevButton = () =>\n        this.state.step !== 0 && (\n            <div className='multi-step__header'>\n                <a onClick={this.prevStep} className='multi-step__btn'>\n                    <Icon icon='IcArrowLeftBold' className='multi-step__btn-icon' />\n                    {this.props.lbl_previous}\n                </a>\n            </div>\n        );\n\n    render() {\n        return (\n            <div className={classNames('multi-step', this.props.className)}>\n                {this.prevButton()}\n                <div className='multi-step__component'>{this.state.component}</div>\n            </div>\n        );\n    }\n}\n\nMultiStep.propTypes = {\n    className: PropTypes.string,\n    lbl_previous: PropTypes.string,\n    steps: PropTypes.array,\n};\n\nexport default MultiStep;\n","import Multistep from './multi-step.jsx';\nimport './multi-step.scss';\n\nexport default Multistep;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../button/button.jsx';\n\nconst NumberButton = ({ onSelect, className, number }) => (\n    <Button\n        className={classNames('dc-numpad__number', className, {\n            'dc-numpad__number--zero': number === 0,\n            'dc-numpad__number--r3': number > 6 && number < 10,\n            'dc-numpad__number--r2': number > 3 && number < 7,\n            'dc-numpad__number--r1': number > 0 && number < 4,\n        })}\n        type='secondary'\n        classNameSpan='dc-numpad__number--is-left-aligned'\n        has_effect\n        onClick={() => onSelect(number)}\n    >\n        {number}\n    </Button>\n);\n\nNumberButton.propTypes = {\n    className: PropTypes.oneOf([PropTypes.string, PropTypes.object]),\n    number: PropTypes.number,\n    onSelect: PropTypes.func,\n};\n\nexport default NumberButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport NumberButton from './number-button.jsx';\n\nconst NumberGrid = ({ onSelect }) => {\n    return (\n        <React.Fragment>\n            {Array.from(new Array(10), (val, index) => index).map(n => (\n                <NumberButton key={n} number={n} onSelect={onSelect} />\n            ))}\n        </React.Fragment>\n    );\n};\n\nNumberGrid.propType = {\n    onSelect: PropTypes.func,\n};\n\nexport default NumberGrid;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { isCryptocurrency } from '@deriv/shared';\nimport Input from '../input/input.jsx';\nimport Button from '../button/button.jsx';\n\nconst getDecimals = val => {\n    const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n    return array_value && array_value.length > 1 ? array_value[1].length : 0;\n};\n\nconst StepInput = ({ className, max, min, value, onChange, render, pip_size = 0, currency }) => {\n    const getSmallestScale = () => {\n        const is_crypto = !!currency && isCryptocurrency(currency);\n        const decimal_places = Number.isFinite(+value) ? getDecimals(value) : 0;\n        if (is_crypto || (!currency && decimal_places)) {\n            return parseFloat(1 * 10 ** (0 - decimal_places));\n        }\n        return 1;\n    };\n\n    const smallest_scale = getSmallestScale();\n    const is_gt_max = Number.isFinite(+max) && +value + smallest_scale > +max;\n    const is_lt_min = Number.isFinite(+min) && +value - smallest_scale < +min;\n\n    const increment = () => {\n        if (is_gt_max) return;\n\n        const parsed_value = parseFloat(value);\n\n        let increment_value;\n        if (Number.isNaN(parsed_value)) {\n            increment_value = min;\n        } else {\n            const decimal_places = Number.isFinite(+value) ? getDecimals(value) : 0;\n            const is_crypto = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && decimal_places)) {\n                const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parsed_value + 1;\n            }\n        }\n\n        onChange(increment_value, pip_size);\n    };\n\n    const decrement = () => {\n        if (is_lt_min) return;\n\n        const parsed_value = parseFloat(value);\n\n        let increment_value;\n        if (Number.isNaN(parsed_value)) {\n            increment_value = min;\n        } else {\n            const decimal_places = Number.isFinite(+value) ? getDecimals(value) : 0;\n            const is_crypto = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && decimal_places)) {\n                const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parsed_value - 1;\n            }\n        }\n\n        onChange(increment_value, pip_size);\n    };\n\n    return (\n        <div className='dc-numpad__input-area'>\n            <Button text='+' className='dc-numpad__increment' onClick={increment} is_disabled={is_gt_max} />\n            <React.Fragment>\n                {render &&\n                    render({\n                        value,\n                        className: classNames('dc-numpad__input-field', className),\n                    })}\n            </React.Fragment>\n            {!render && <Input className='dc-numpad__input-field' name='amount' value={value} readOnly />}\n            <Button text='-' className='dc-numpad__decrement' onClick={decrement} is_disabled={is_lt_min} />\n        </div>\n    );\n};\n\nStepInput.propTypes = {\n    className: PropTypes.string,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    onChange: PropTypes.func,\n    render: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default StepInput;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport NumberGrid from './number-grid.jsx';\nimport StepInput from './step-input.jsx';\nimport Button from '../button/button.jsx';\nimport { useLongPress } from '../../hooks';\n\nconst concatenate = (number, default_value) => default_value.toString().concat(number);\nconst Numpad = ({\n    className,\n    currency,\n    is_regular,\n    is_currency,\n    is_submit_disabled,\n    label,\n    reset_press_interval,\n    reset_value,\n    max = 9999999,\n    min = 0,\n    pip_size,\n    onSubmit,\n    render,\n    submit_label = 'OK',\n    value,\n    format,\n    onValueChange,\n    onValidate,\n}) => {\n    const formatNumber = v => (typeof format === 'function' ? format(v) : v);\n    const isFloat = v => String(v).match(/\\./);\n    const formatted_value = formatNumber(value);\n    const [is_float, setFloat] = React.useState(isFloat(formatted_value));\n    const [default_value, setValue] = React.useState(formatted_value);\n    const [has_error, setHasError] = React.useState(false);\n\n    React.useEffect(() => {\n        if (formatted_value !== formatNumber(default_value)) {\n            updateValue(value);\n            setFloat(isFloat(value));\n        }\n    }, [value]);\n\n    React.useEffect(() => {\n        const is_error = !onValidate(default_value) || onValidate(default_value) === 'error';\n        setHasError(is_error);\n    }, [default_value, value]);\n\n    const updateValue = val => {\n        setValue(val);\n        if (onValueChange) onValueChange(val);\n    };\n\n    const onSelect = num => {\n        switch (num) {\n            // backspace\n            case -1:\n                chop();\n                break;\n\n            // detecting floating point\n            case '.':\n                if (is_float) {\n                    break;\n                }\n                setFloat(true);\n                if (default_value.length === 0) {\n                    updateValue(concatenate(num, '0'));\n                } else {\n                    updateValue(concatenate(num, default_value));\n                }\n\n                break;\n            default:\n                if (String(default_value) === '0') {\n                    updateValue(concatenate(num, ''));\n                } else {\n                    const regex = /(?:\\d+\\.)(\\d+)$/;\n                    const matches = regex.exec(default_value);\n\n                    if (matches !== null && is_float) {\n                        matches.forEach((match, groupIndex) => {\n                            const pip_size_allowed = groupIndex === 1 && match.length < pip_size && is_float;\n                            if (pip_size_allowed) {\n                                updateValue(concatenate(num, default_value));\n                            }\n                        });\n                    } else if (concatenate(num, default_value) <= max) {\n                        updateValue(concatenate(num, default_value));\n                    }\n                }\n        }\n    };\n\n    const getDecimals = val => {\n        const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n        return array_value && array_value.length > 1 ? array_value[1].length : 0;\n    };\n\n    const chop = () => {\n        if (default_value.toString().slice(-1) === '.') {\n            setFloat(false);\n        }\n        updateValue(default_value.toString().slice(0, -1));\n    };\n\n    const is_default_enabled = ![!!is_regular, !!is_currency].includes(true);\n    React.useEffect(() => {\n        if (is_currency && typeof pip_size === 'undefined') {\n            // eslint-disable-next-line no-console\n            console.error(\"Warning: property pip_size is required when using currency type <Numpad pip_size='2' />\");\n        }\n    });\n\n    const is_backspace_disabled = !default_value.toString().length;\n\n    /**\n     * Add Long Touch Handler\n     */\n    const clearValue = () => {\n        if (is_float) setFloat(false);\n        updateValue(reset_value || '');\n    };\n    const backspaceLongPress = useLongPress(clearValue, reset_press_interval);\n\n    return (\n        <div\n            className={classNames('dc-numpad', className, {\n                'dc-numpad--is-regular': is_regular || is_default_enabled,\n                'dc-numpad--is-currency': is_currency && !is_default_enabled,\n            })}\n        >\n            <StepInput\n                className={has_error ? 'dc-numpad__input-field--has-error' : null}\n                currency={currency}\n                pip_size={pip_size}\n                value={default_value}\n                render={render}\n                onChange={v => {\n                    const amount = Number(v).toFixed(getDecimals(default_value));\n                    setFloat(isFloat(amount));\n                    updateValue(amount);\n                }}\n                min={min}\n                max={max}\n                label={label}\n            />\n            <NumberGrid onSelect={onSelect} />\n            {is_currency && (\n                <Button type='secondary' className='dc-numpad__number' has_effect onClick={() => onSelect('.')}>\n                    .\n                </Button>\n            )}\n            <div className='dc-numpad__bkspace'>\n                <Button\n                    {...backspaceLongPress}\n                    type='secondary'\n                    has_effect\n                    className='dc-numpad__number'\n                    onClick={() => {\n                        onSelect(-1);\n                    }}\n                    is_disabled={is_backspace_disabled}\n                >\n                    ⌫\n                </Button>\n            </div>\n            <div className='dc-numpad__ok'>\n                <Button\n                    type='secondary'\n                    has_effect\n                    className={classNames('dc-numpad__number', {\n                        'dc-numpad__number--is-disabled':\n                            is_submit_disabled ||\n                            !default_value.toString().length ||\n                            (min && formatNumber(default_value) < min),\n                    })}\n                    onClick={() => {\n                        if (!default_value.toString().length) return;\n                        if (min && formatNumber(default_value) < min) return;\n                        onSubmit(formatNumber(default_value));\n                    }}\n                    is_disabled={\n                        is_submit_disabled ||\n                        !default_value.toString().length ||\n                        (min && formatNumber(default_value) < min)\n                    }\n                >\n                    {submit_label}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nNumpad.propTypes = {\n    currency: PropTypes.string,\n    format: PropTypes.func,\n    is_currency: PropTypes.bool,\n    is_regular: PropTypes.bool,\n    is_submit_disabled: PropTypes.bool,\n    reset_press_interval: PropTypes.number,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    onSubmit: PropTypes.func,\n    onValidate: PropTypes.func,\n    pip_size: PropTypes.number,\n    render: PropTypes.func,\n    reset_value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    submit_label: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default Numpad;\n","import Numpad from './numpad.jsx';\nimport './numpad.scss';\n\nexport default Numpad;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ButtonLink from '../button-link/button-link.jsx';\nimport DesktopWrapper from '../desktop-wrapper/desktop-wrapper.jsx';\n\nconst PageError = ({ buttonOnClick, classNameImage, header, image_url, messages, redirect_label, redirect_url }) => (\n    // if image_url is passed we should split the page to two columns and left-align messages\n    <div className={classNames('dc-page-error__container', { 'dc-page-error__container--left': !!image_url })}>\n        {!!image_url && (\n            <DesktopWrapper>\n                <img\n                    className={classNameImage}\n                    src={image_url}\n                    alt={'404'}\n                    loading='lazy'\n                    width='771px' // width and height should be specified so it doesn't jump to the right after image loads\n                    height='448px'\n                />\n            </DesktopWrapper>\n        )}\n        <div\n            className={classNames('dc-page-error__box', {\n                'dc-page-error__box--left': !!image_url,\n            })}\n        >\n            <h3 className='dc-page-error__header'>{header}</h3>\n            <div\n                className={classNames('dc-page-error__message-wrapper', {\n                    'dc-page-error__message-wrapper--left': !!image_url,\n                })}\n            >\n                <span className={classNames('dc-page-error__message', { 'dc-page-error__message--left': !!image_url })}>\n                    {messages.map((message, index) =>\n                        message.has_html ? (\n                            <p\n                                key={index}\n                                className='dc-page-error__message-paragraph'\n                                dangerouslySetInnerHTML={{ __html: message.message }}\n                            />\n                        ) : (\n                            <p key={index} className='dc-page-error__message-paragraph'>\n                                {message}\n                            </p>\n                        )\n                    )}\n                </span>\n            </div>\n            {redirect_label && (\n                <ButtonLink className='dc-page-error__btn' to={redirect_url} onClick={buttonOnClick} size='large'>\n                    <span className='dc-page-error__btn-text dc-btn__text'>{redirect_label}</span>\n                </ButtonLink>\n            )}\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick: PropTypes.func,\n    classNameImage: PropTypes.string,\n    header: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    image_url: PropTypes.string,\n    messages: PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url: PropTypes.string,\n};\n\nexport default PageError;\n","import PageError from './page-error.jsx';\nimport './page-error.scss';\n\nexport default PageError;\n","import classNames from 'classnames';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Icon from '../icon/icon.jsx';\nimport { useOnClickOutside } from '../../hooks';\n\nconst PageOverlay = ({ children, header, id, is_open, onClickClose, portal_id }) => {\n    const page_overlay_ref = React.useRef();\n\n    useOnClickOutside(page_overlay_ref, onClickClose, () => is_open && portal_id);\n\n    const el_page_overlay = (\n        <div\n            ref={page_overlay_ref}\n            id={id}\n            className={classNames('dc-page-overlay', {\n                'dc-page-overlay-portal': !!portal_id,\n            })}\n        >\n            {header && (\n                <div className='dc-page-overlay__header'>\n                    <div className='dc-page-overlay__header-wrapper'>\n                        <div className='dc-page-overlay__header-title'>{header}</div>\n                        <div className='dc-page-overlay__header-close' onClick={onClickClose || window.history.back}>\n                            <Icon icon='IcCross' />\n                        </div>\n                    </div>\n                </div>\n            )}\n            <div className='dc-page-overlay__content'>{children}</div>\n        </div>\n    );\n\n    if (portal_id) {\n        return ReactDOM.createPortal(\n            <CSSTransition\n                appear\n                in={is_open}\n                timeout={250}\n                classNames={{\n                    appear: 'dc-page-overlay--enter',\n                    enter: 'dc-page-overlay--enter',\n                    enterDone: 'dc-page-overlay--enter-done',\n                    exit: 'dc-page-overlay--exit',\n                }}\n                unmountOnExit\n            >\n                {el_page_overlay}\n            </CSSTransition>,\n            document.getElementById(portal_id)\n        );\n    }\n\n    return <>{el_page_overlay}</>;\n};\n\nPageOverlay.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    header: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    is_open: PropTypes.bool,\n    onClickClose: PropTypes.func,\n    portal_id: PropTypes.string,\n};\n\nexport default PageOverlay;\n","import PageOverlay from './page-overlay.jsx';\nimport './page-overlay.scss';\n\nexport default PageOverlay;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../icon';\nimport Input from '../input';\n\nclass PasswordInput extends React.Component {\n    state = {\n        show_password: false,\n    };\n\n    togglePasswordVisibility = () => {\n        this.setState(prev_state => ({ show_password: !prev_state.show_password }));\n    };\n\n    render() {\n        const {\n            className,\n            trailing_icon, // Must not be passed to Input as the only trailing icon should be the visibility icon\n            ...otherProps\n        } = this.props;\n\n        return (\n            <div className='dc-password-input'>\n                <Input\n                    {...otherProps}\n                    type={this.state.show_password ? 'text' : 'password'}\n                    className={classNames('dc-password-input__field', className)}\n                    trailing_icon={\n                        <Icon\n                            icon={this.state.show_password ? 'IcPasswordEyeHide' : 'IcPasswordEyeVisible'}\n                            className='dc-password-input__visibility-icon'\n                            onClick={this.togglePasswordVisibility}\n                            color='secondary'\n                            width={18}\n                        />\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nPasswordInput.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    has_error: PropTypes.bool,\n    input: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default PasswordInput;\n","import PasswordInput from './password-input.jsx';\nimport './password-input.scss';\n\nexport default PasswordInput;\n","import classNames from 'classnames';\nimport React from 'react';\nimport zxcvbn from '@contentpass/zxcvbn';\nimport PropTypes from 'prop-types';\nimport Field from '../field';\n\nconst PasswordMeter = ({ children, has_error, input }) => {\n    // 0 - 4 Score for password strength\n    const { score, feedback } = zxcvbn(input);\n    const width_scale = has_error && input.length ? 0.25 : 0.25 * (input.length && score < 1 ? 1 : score);\n\n    // const strength_map =  {\n    //     1: 'Weak',\n    //     2: 'Average',\n    //     3: 'Good',\n    //     4: 'Strong',\n    // };\n    // const strength = strength_map[score] || strength_map[1];\n    // TODO: Add localization support for suggestion strings\n\n    return (\n        <React.Fragment>\n            <div className='dc-password-meter__container'>\n                {/* if child input field has hint, they should not show the hint while warning is shown */}\n                {typeof children === 'function' ? children({ has_warning: !!feedback.warning }) : children}\n                <div className='dc-password-meter__bg' />\n                <div\n                    className={classNames('dc-password-meter', {\n                        'dc-password-meter--weak': has_error || (input.length && score < 3),\n                        'dc-password-meter--strong': !has_error && input.length && score >= 3,\n                    })}\n                    style={{ transform: `scale(${width_scale}, 1)` }}\n                />\n                {feedback.warning && !has_error && (\n                    <Field className='dc-password-meter__warning' message={`${feedback.warning}.`} type='error' />\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nPasswordMeter.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.func]),\n    has_error: PropTypes.bool,\n    input: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default PasswordMeter;\n","import PasswordMeter from './password-meter.jsx';\nimport './password-meter.scss';\n\nexport default PasswordMeter;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction withinZeroAndOne(props, propName, componentName) {\n    if (props[propName]) {\n        const value = props[propName];\n        if (typeof value === 'number') {\n            return value >= 0 && value <= 1 ? null : new Error(`${propName} in ${componentName} is not within 0 to 1`);\n        }\n        return new Error(`${propName} in ${componentName} is not a number`);\n    }\n    return null;\n}\n\nconst ProgressBar = ({ className, danger_limit, label, value, warning_limit }) => {\n    let status;\n    if (value <= danger_limit) {\n        status = 'danger';\n    } else if (value <= warning_limit) {\n        status = 'warning';\n    } else {\n        status = 'normal';\n    }\n    return (\n        <div className={classNames('dc-progress-bar__container', className)}>\n            <p className='dc-progress-bar__label'>{label}</p>\n            <div\n                className={classNames(\n                    {\n                        [`dc-progress-bar--${status}`]: status,\n                    },\n                    'dc-progress-bar__bar'\n                )}\n                style={{\n                    width: `${value * 100}%`,\n                }}\n            />\n            <div className={classNames(`dc-progress-bar--${status}`, 'dc-progress-bar__empty')} />\n        </div>\n    );\n};\n\nProgressBar.defaultProps = {\n    danger_limit: 0.2,\n    label: '',\n    value: 0,\n    warning_limit: 0.5,\n};\n\nexport default ProgressBar;\n\nProgressBar.propTypes = {\n    className: PropTypes.string,\n    danger_limit: withinZeroAndOne,\n    label: PropTypes.string,\n    value: withinZeroAndOne,\n    warning_limit: withinZeroAndOne,\n};\n","import ProgressBar from './progress-bar.jsx';\nimport './progress-bar.scss';\n\nexport default ProgressBar;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ProgressIndicator = ({ className, value, total, style }) => {\n    return (\n        <div className={classNames('dc-progress-indicator__container', className)} style={style}>\n            <div className={classNames('dc-progress-indicator__bar')} style={{ width: `${(value / total) * 100}%` }} />\n            <div className={'dc-progress-indicator__empty'} />\n        </div>\n    );\n};\n\nProgressIndicator.propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.number,\n    total: PropTypes.number,\n    style: PropTypes.object,\n};\n\nexport default ProgressIndicator;\n","import ProgressIndicator from './progress-indicator.jsx';\nimport './progress-indicator.scss';\n\nexport default ProgressIndicator;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass RadioGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected_option: this.props.selected,\n        };\n    }\n\n    onChange = e => {\n        this.setState({\n            selected_option: e.target.value,\n        });\n        this.props.onToggle(e);\n    };\n\n    render() {\n        const { items, className, name, required } = this.props;\n\n        return (\n            <div className={classNames('dc-radio-group', className)}>\n                {items.map((item, idx) => (\n                    <label key={idx} className={classNames('dc-radio-group__item', className)}>\n                        <input\n                            id={item.id}\n                            name={name}\n                            className='dc-radio-group__input'\n                            type='radio'\n                            value={item.value}\n                            checked={this.state.selected_option === item.value}\n                            onChange={this.onChange}\n                            disabled={item.disabled}\n                            required={required}\n                        />\n                        <span\n                            className={classNames('dc-radio-group__circle', {\n                                'dc-radio-group__circle--selected': this.state.selected_option === item.value,\n                            })}\n                        />\n                        <span className='dc-radio-group__label'>{item.label}</span>\n                    </label>\n                ))}\n            </div>\n        );\n    }\n}\n\nRadioGroup.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.node.isRequired,\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number]),\n        })\n    ),\n    onToggle: PropTypes.func,\n    selected: PropTypes.any,\n    required: PropTypes.bool,\n};\n\nexport default RadioGroup;\n","import RadioGroup from './radio-group.jsx';\nimport './radio-group.scss';\n\nexport default RadioGroup;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Field from '../field';\nimport Icon from '../icon/icon.jsx';\n\nclass SelectNative extends React.Component {\n    getDisplayText = value => {\n        const { list_items } = this.props;\n        const dropdown_items = Array.isArray(list_items) ? list_items : [].concat(...Object.values(list_items));\n        const list_obj = dropdown_items.find(item => {\n            if (typeof item.value !== 'string') return item.value === value;\n            return item.value.toLowerCase() === value.toLowerCase();\n        });\n\n        if (list_obj) return list_obj.text;\n        return '';\n    };\n    render() {\n        const {\n            className,\n            classNameDisplay,\n            list_items,\n            value,\n            label,\n            placeholder,\n            use_text,\n            error,\n            hint,\n            disabled,\n            ...props\n        } = this.props;\n        return (\n            <div\n                className={classNames(className, 'dc-select-native', {\n                    'dc-select-native--disabled': disabled,\n                    'dc-select-native--error': error,\n                })}\n            >\n                <div className='dc-select-native__wrapper'>\n                    <div\n                        className={classNames('dc-input', {\n                            'dc-input__disabled': disabled,\n                            'dc-input--error': error,\n                        })}\n                    >\n                        <div className='dc-select-native__display'>\n                            {list_items && value && (\n                                <div className={classNames('dc-select-native__display-text', classNameDisplay)}>\n                                    {use_text ? value : this.getDisplayText(value)}\n                                </div>\n                            )}\n                        </div>\n                        <div\n                            className={classNames('dc-select-native__placeholder', {\n                                'dc-select-native__placeholder--has-value': value,\n                                'dc-select-native__placeholder--disabled': disabled,\n                            })}\n                        >\n                            {label}\n                        </div>\n                        <Icon icon='IcChevronDown' className='dc-select-native__arrow' />\n                        <select className='dc-select-native__picker' value={value} disabled={disabled} {...props}>\n                            {Array.isArray(list_items) ? (\n                                <React.Fragment>\n                                    {/* In native select, first option is selected by default.\n                                        Added an empty option to avoid it from selecting first item\n                                        from list_items provided */}\n                                    <option value=''>{placeholder}</option>\n                                    {/* Safari on ios allows to select a disabled option.\n                                        So, we should avoid showing it */}\n                                    {list_items\n                                        .filter(opt => !opt.disabled)\n                                        .map((option, idx) => (\n                                            <option key={idx} value={use_text ? option.text : option.value}>\n                                                {option.nativepicker_text || option.text}\n                                            </option>\n                                        ))}\n                                </React.Fragment>\n                            ) : (\n                                Object.keys(list_items).map(key => (\n                                    <optgroup key={key} label={key}>\n                                        {/* Safari on ios allows to select a disabled option.\n                                        So, we should avoid showing it */}\n                                        {list_items[key]\n                                            .filter(opt => !opt.disabled)\n                                            .map((option, idx) => (\n                                                <option key={idx} value={use_text ? option.text : option.value}>\n                                                    {option.nativepicker_text || option.text}\n                                                </option>\n                                            ))}\n                                    </optgroup>\n                                ))\n                            )}\n                        </select>\n                        {error && <Field message={error} type='error' />}\n                    </div>\n                </div>\n                {!error && hint && <p className='dc-select-native__hint'>{hint}</p>}\n            </div>\n        );\n    }\n}\n\nconst list_items_shape = PropTypes.arrayOf(\n    PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n    })\n);\n\nSelectNative.propTypes = {\n    className: PropTypes.string,\n    classNameDisplay: PropTypes.string,\n    list_items: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.string),\n        list_items_shape,\n        PropTypes.objectOf(list_items_shape),\n    ]),\n    value: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default SelectNative;\n","import SelectNative from './select-native.jsx';\nimport './select-native.scss';\n\nexport default SelectNative;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '../button/button.jsx';\nimport Icon from '../icon/icon.jsx';\n\nclass SendEmailTemplate extends React.Component {\n    resend_interval = null;\n\n    state = {\n        is_email_not_received_clicked: false,\n        resend_timeout: this.props.resend_timeout || 60,\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.resend_interval);\n    }\n\n    onClickEmailNotReceived = () => {\n        this.setState({ is_email_not_received_clicked: true });\n    };\n\n    onClickResendEmail = () => {\n        this.startCountdownTimer();\n        this.props.onClickSendEmail();\n    };\n\n    startCountdownTimer = () => {\n        this.setState(\n            prevState => ({\n                resend_timeout: prevState.resend_timeout - 1,\n            }),\n            () => {\n                this.resend_interval = setInterval(() => {\n                    if (this.state.resend_timeout === 1) {\n                        this.setState({ resend_timeout: 60 });\n                        clearInterval(this.resend_interval);\n                    } else {\n                        this.setState(prevState => ({ resend_timeout: prevState.resend_timeout - 1 }));\n                    }\n                }, 1000);\n            }\n        );\n    };\n\n    render() {\n        const is_resend_btn_disabled = this.state.resend_timeout < 60;\n        const resend_email_btn_text =\n            this.state.resend_timeout < 60\n                ? this.props.txt_resend_in.replace('{{seconds}}', this.state.resend_timeout)\n                : this.props.txt_resend;\n\n        return (\n            <div className='send-email-template'>\n                <div className='send-email-template__sent'>\n                    <Icon icon='IcEmailSent' className='send-email-template__icon' size={128} />\n                    <h1 className='send-email-template__title'>{this.props.title}</h1>\n                    <p className='send-email-template__subtitle'>{this.props.subtitle}</p>\n                    <Button\n                        className='send-email-template__btn'\n                        onClick={this.onClickEmailNotReceived}\n                        text={this.props.lbl_no_receive}\n                        tertiary\n                    />\n                </div>\n                {this.state.is_email_not_received_clicked && (\n                    <>\n                        <div className={`send-email-template__resend ${this.props.className}`}>\n                            {this.props.children}\n                        </div>\n                        <div className='send-email-template__cta'>\n                            <Button\n                                className='send-email-template__cta-btn'\n                                is_disabled={is_resend_btn_disabled}\n                                has_effect\n                                text={resend_email_btn_text}\n                                onClick={this.onClickResendEmail}\n                                primary\n                            />\n                        </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nSendEmailTemplate.propTypes = {\n    is_disabled: PropTypes.bool,\n    lbl_no_receive: PropTypes.string,\n    onClickSendEmail: PropTypes.func,\n    subtitle: PropTypes.string,\n    txt_resend: PropTypes.string,\n    txt_resend_in: PropTypes.string,\n    title: PropTypes.string,\n};\n\nexport default SendEmailTemplate;\n","import SendEmailTemplate from './send-email-template.jsx';\nimport './send-email-template.scss';\n\nexport default SendEmailTemplate;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Swipeable } from 'react-swipeable';\nimport Icon from '../icon';\n\nconst SwipeableWrapper = ({ children, className, onChange, ...props }) => {\n    const [active_index, setActiveIndex] = React.useState(0);\n\n    React.useEffect(() => {\n        if (typeof onChange === 'function') onChange(active_index);\n        return () => {\n            // Makes an empty callback when unmounted so that we can reset\n            if (typeof onChange === 'function') onChange();\n        };\n    }, [active_index]);\n\n    const swipedLeft = () => {\n        if (props.is_disabled) return;\n        const is_reached_end = active_index + 1 === React.Children.toArray(children).length;\n        if (!is_reached_end) {\n            setActiveIndex(active_index + 1);\n        }\n    };\n\n    const swipedRight = () => {\n        if (props.is_disabled) return;\n        if (active_index > 0) {\n            setActiveIndex(active_index - 1);\n        }\n    };\n\n    const childrenWithWrapperDiv = React.Children.map(children, child => {\n        return <div className='dc-swipeable__item'>{child}</div>;\n    });\n\n    return (\n        <div className='dc-swipeable'>\n            <Swipeable\n                style={{\n                    transform: `translateX(${props.is_disabled ? -100 : active_index * -100}vw)`,\n                }}\n                className={classNames('dc-swipeable__view', className)}\n                onSwipedLeft={swipedLeft}\n                onSwipedRight={swipedRight}\n                {...props}\n            >\n                {childrenWithWrapperDiv}\n            </Swipeable>\n            {!props.is_disabled && (\n                <nav className='dc-swipeable__nav'>\n                    <Icon\n                        className='dc-swipeable__nav__item'\n                        icon='IcChevronDoubleLeft'\n                        size={24}\n                        onClick={swipedRight}\n                        color={active_index === 0 || props.is_disabled ? 'disabled' : ''}\n                    />\n                    <Icon\n                        className='dc-swipeable__nav__item'\n                        icon='IcChevronDoubleRight'\n                        size={24}\n                        onClick={swipedLeft}\n                        color={\n                            active_index + 1 === React.Children.toArray(children).length || props.is_disabled\n                                ? 'disabled'\n                                : ''\n                        }\n                    />\n                </nav>\n            )}\n        </div>\n    );\n};\n\nSwipeableWrapper.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default SwipeableWrapper;\n","import { useSwipeable } from 'react-swipeable';\nimport SwipeableWrapper from './swipeable-wrapper.jsx';\nimport './swipeable-wrapper.scss';\n\nSwipeableWrapper.useSwipeable = useSwipeable;\n\nexport default SwipeableWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { toMoment, daysFromTodayTo } from '@deriv/shared';\n\nconst RelativeDatepicker = ({ onChange, min_date, max_date, title }) => {\n    const hidden_input_ref = React.useRef();\n\n    const clickHandler = () => {\n        hidden_input_ref.current.click();\n    };\n    const onChangeHandler = e => {\n        onChange(daysFromTodayTo(e.target.value));\n    };\n\n    const min_date_moment = toMoment()\n        .add(min_date || 0, 'd')\n        .format('YYYY-MM-DD');\n    const max_date_moment = max_date\n        ? toMoment()\n              .add(max_date, 'd')\n              .format('YYYY-MM-DD')\n        : null;\n    return (\n        <div className='dc-relative-datepicker' onClick={clickHandler}>\n            <span className='dc-relative-datepicker__span'>{title}</span>\n            <input\n                type='date'\n                ref={hidden_input_ref}\n                onChange={onChangeHandler}\n                min={min_date_moment}\n                max={max_date_moment}\n                className='dc-relative-datepicker__input'\n            />\n        </div>\n    );\n};\n\nRelativeDatepicker.propTypes = {\n    max_date: PropTypes.string,\n    min_date: PropTypes.string,\n    onChange: PropTypes.func,\n    title: PropTypes.string,\n};\n\nexport default RelativeDatepicker;\n","import RelativeDatepicker from './relative-datepicker.jsx';\nimport './relative-datepicker.scss';\n\nexport default RelativeDatepicker;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Head = ({ children, align, className, fixed }) => (\n    <div\n        role='columnheader'\n        className={classNames('dc-table__head', className, {\n            'dc-table__cell--right': align === 'right',\n            'dc-table__cell--fixed': fixed,\n        })}\n    >\n        {children}\n    </div>\n);\n\nHead.propTypes = {\n    align: PropTypes.oneOf(['left', 'right']),\n    children: PropTypes.node,\n    className: PropTypes.string,\n    fixed: PropTypes.bool,\n};\n\nexport default Head;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ children, className }) => (\n    <div role='rowgroup' className={classNames('dc-table__header', className)}>\n        {children}\n    </div>\n);\n\nHeader.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Body = ({ children }) => <div role='rowgroup'>{children}</div>;\n\nexport default Body;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Row = ({ children, className, has_hover }) => {\n    return (\n        <div\n            role='row'\n            className={classNames('dc-table__row', className, {\n                'dc-table__row--hover': has_hover,\n            })}\n        >\n            {children}\n        </div>\n    );\n};\n\nRow.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    has_hover: PropTypes.bool,\n};\n\nexport default Row;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Cell = ({ children, align = 'left', className, fixed }) => (\n    <div\n        role='cell'\n        className={classNames('dc-table__cell', className, {\n            'dc-table__cell--right': align === 'right',\n            'dc-table__cell--fixed': fixed,\n        })}\n    >\n        {children}\n    </div>\n);\n\nCell.propTypes = {\n    align: PropTypes.oneOf(['left', 'right']),\n    children: PropTypes.node,\n    className: PropTypes.string,\n    fixed: PropTypes.bool,\n};\n\nexport default Cell;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Head from './table-head.jsx';\nimport Header from './table-header.jsx';\nimport Body from './table-body.jsx';\nimport Row from './table-row.jsx';\nimport Cell from './table-cell.jsx';\nimport ThemedScrollbars from '../themed-scrollbars/themed-scrollbars.jsx';\n\n// TODO: update the <Table /> component to fit with the DataTable in Trader\nclass Table extends React.Component {\n    render() {\n        return (\n            <div\n                role='table'\n                className={classNames('dc-table', this.props.className, {\n                    'dc-table--scroll': this.props.fixed,\n                })}\n            >\n                {this.props.fixed ? (\n                    <ThemedScrollbars\n                        has_horizontal\n                        width={this.props.scroll_width || '100%'}\n                        height={this.props.scroll_height}\n                    >\n                        {this.props.children}\n                    </ThemedScrollbars>\n                ) : (\n                    this.props.children\n                )}\n            </div>\n        );\n    }\n}\n\nTable.Head = Head;\nTable.Header = Header;\nTable.Body = Body;\nTable.Row = Row;\nTable.Cell = Cell;\n// TODO add footer\n\nexport default Table;\n","import Table from './table.jsx';\nimport './table.scss';\n\nexport default Table;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Counter from '../counter';\n\nclass Tab extends React.Component {\n    onClick = () => {\n        const { onClick } = this.props;\n        onClick();\n    };\n\n    componentDidUpdate(prev_props) {\n        if (\n            prev_props.count !== this.props.count ||\n            prev_props.label !== this.props.label ||\n            prev_props.header_content !== this.props.header_content\n        ) {\n            this.props.setActiveLineStyle();\n        }\n    }\n\n    render() {\n        const {\n            active_tab_ref,\n            count,\n            id,\n            header_content,\n            is_active,\n            is_label_hidden,\n            label,\n            top,\n            bottom,\n            header_fit_content,\n        } = this.props;\n\n        const classes = classNames('dc-tabs__item', {\n            'dc-tabs__active': is_active,\n            'dc-tabs__item--top': top,\n            'dc-tabs__item--bottom': bottom,\n            'dc-tabs__item--header-fit-content': header_fit_content,\n            'dc-tabs__item--is-hidden': is_label_hidden,\n        });\n        return (\n            <li id={id} className={classes} onClick={this.onClick} ref={active_tab_ref}>\n                {header_content || label}\n                {!!count && <Counter className='dc-tabs__item__counter' count={count} />}\n            </li>\n        );\n    }\n}\n\nTab.propTypes = {\n    className: PropTypes.string,\n    count: PropTypes.number,\n    is_active: PropTypes.bool,\n    is_label_hidden: PropTypes.bool,\n    label: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nexport default Tab;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './tab.jsx';\n\nclass Tabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { active_index: props.active_index || 0 };\n    }\n\n    onTabItemClick = index => {\n        this.setState({ active_index: index });\n    };\n\n    componentDidUpdate(prev_props, prev_state) {\n        if (this.props.active_index !== -1 && prev_state.active_index !== this.state.active_index) {\n            this.setState({ active_index: this.state.active_index || 0 });\n\n            if (typeof this.props.onTabItemClick === 'function') {\n                this.props.onTabItemClick(this.state.active_index);\n            }\n        }\n        if (this.props.active_index !== prev_props.active_index) {\n            this.setState({ active_index: this.props.active_index });\n        }\n        if (this.props.should_delay_render !== prev_props.should_delay_render && this.props.should_delay_render) {\n            this.setActiveLineStyle();\n        }\n    }\n\n    setActiveLineStyle = () => {\n        if (this.props.header_fit_content && this.active_tab_ref && this.tabs_wrapper_ref) {\n            const tabs_wrapper_bounds = this.tabs_wrapper_ref.getBoundingClientRect();\n            const active_tab_bounds = this.active_tab_ref.getBoundingClientRect();\n            this.setState({\n                active_line_style: {\n                    left: active_tab_bounds.left - tabs_wrapper_bounds.left,\n                    width: active_tab_bounds.width,\n                },\n            });\n        }\n    };\n\n    setActiveTabRef = ref => {\n        this.active_tab_ref = ref;\n        this.setActiveLineStyle();\n    };\n\n    setTabsWrapperRef = ref => {\n        this.tabs_wrapper_ref = ref;\n        this.setActiveLineStyle();\n    };\n\n    render() {\n        const {\n            children,\n            className,\n            top,\n            bottom,\n            center,\n            fit_content,\n            header_fit_content,\n            single_tab_has_no_label,\n        } = this.props;\n        const { active_index } = this.state;\n        const tab_width = fit_content ? '150px' : `${(100 / children.length).toFixed(2)}%`;\n\n        return (\n            <div\n                className={classNames('dc-tabs', {\n                    [`dc-tabs dc-tabs--${className}`]: className,\n                })}\n                style={{ '--tab-width': `${tab_width}` }}\n            >\n                <ul\n                    className={classNames('dc-tabs__list', {\n                        'dc-tabs__list--top': top,\n                        'dc-tabs__list--bottom': bottom,\n                        'dc-tabs__list--center': center,\n                        'dc-tabs__list--header-fit-content': header_fit_content,\n                    })}\n                    ref={this.setTabsWrapperRef}\n                >\n                    {React.Children.map(children, (child, index) => {\n                        const { count, header_content, label } = child.props;\n\n                        return (\n                            <Tab\n                                count={count}\n                                is_active={index === active_index}\n                                key={label}\n                                is_label_hidden={children.length === 1 && single_tab_has_no_label}\n                                label={label}\n                                top={top}\n                                bottom={bottom}\n                                header_fit_content={header_fit_content}\n                                active_tab_ref={index === active_index ? this.setActiveTabRef : null}\n                                header_content={header_content}\n                                onClick={() => this.onTabItemClick(index)}\n                                setActiveLineStyle={this.setActiveLineStyle}\n                            />\n                        );\n                    })}\n                    <span\n                        className={classNames('dc-tabs__active-line', {\n                            'dc-tabs__active-line--top': top,\n                            'dc-tabs__active-line--bottom': bottom,\n                            'dc-tabs__active-line--fit-content': fit_content,\n                            'dc-tabs__active-line--header-fit-content': header_fit_content,\n                            'dc-tabs__active-line--is-hidden': children.length === 1 && single_tab_has_no_label,\n                        })}\n                        style={this.state.active_line_style}\n                    />\n                </ul>\n                <div className='dc-tabs__content'>\n                    {React.Children.map(children, (child, index) => {\n                        if (index !== active_index) {\n                            return undefined;\n                        }\n                        return child.props.children;\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default Tabs;\n","import Tabs from './tabs.jsx';\nimport './tabs.scss';\n\nexport default Tabs;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst ToastError = ({ children, className, is_open = true, onClose, onClick, timeout = 0 }) => {\n    const [is_visible, setVisible] = React.useState(false);\n\n    React.useEffect(() => {\n        setVisible(is_open);\n\n        if (timeout) {\n            const timeout_id = setTimeout(() => setVisible(false), timeout);\n            return () => clearTimeout(timeout_id);\n        }\n\n        return undefined;\n    }, [is_open]);\n\n    return (\n        <CSSTransition\n            in={is_visible}\n            timeout={100}\n            unmountOnExit\n            onExited={() => {\n                if (typeof onClose === 'function') {\n                    onClose();\n                }\n                setVisible(false);\n            }}\n            classNames={{\n                appear: 'dc-toast-error--enter',\n                enter: 'dc-toast-error--enter',\n                enterDone: 'dc-toast-error--enter-done',\n                exit: 'dc-toast-error--exit',\n            }}\n        >\n            <div className={classNames('dc-toast-error', className)} onClick={onClick}>\n                <div className='dc-toast-error__message'>{children}</div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nToastError.propTypes = {\n    className: PropTypes.string,\n    is_open: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    timeout: PropTypes.number,\n};\n\nexport default ToastError;\n","import ToastError from './toast-error.jsx';\nimport './toast-error.scss';\n\nexport default ToastError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass ToggleSwitch extends React.Component {\n    render() {\n        return (\n            <>\n                <input\n                    className={classNames('dc-toggle-switch', {}, this.props.className)}\n                    id={this.props.id}\n                    type='checkbox'\n                    checked={this.props.is_enabled}\n                    onChange={this.props.handleToggle}\n                />\n                <label\n                    className={classNames('dc-toggle-switch__label', {}, this.props.classNameLabel)}\n                    htmlFor={this.props.id}\n                >\n                    <span className={classNames('dc-toggle-switch__button', {}, this.props.classNameButton)} />\n                </label>\n            </>\n        );\n    }\n}\n\nToggleSwitch.propTypes = {\n    className: PropTypes.string,\n    classNameButton: PropTypes.string,\n    classNameLabel: PropTypes.string,\n    handleToggle: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    is_enabled: PropTypes.bool.isRequired,\n};\n\nexport default ToggleSwitch;\n","import ToggleSwitch from './toggle-switch.jsx';\nimport './toggle-switch.scss';\n\nexport default ToggleSwitch;\n","import classNames from 'classnames';\nimport React from 'react';\nimport throttle from 'lodash.throttle';\nimport { useSwipeable } from 'react-swipeable';\nimport Button from '../button/button.jsx';\nimport Icon from '../icon';\n\nconst THROTTLE_INTERVAL_TIME = 100;\n\nconst TickPicker = ({\n    default_value,\n    is_submit_disabled,\n    min_value,\n    max_value,\n    onSubmit,\n    submit_label,\n    singular_label,\n    plural_label,\n    onValueChange,\n}) => {\n    const normalizedTick = tick => `${tick}`.padStart(2, 0);\n    const [tick_value, setTickValue] = React.useState(parseInt(default_value));\n\n    const handleDecrease = () => {\n        if (tick_value - 1 >= min_value) {\n            setTickValue(tick_value - 1);\n        }\n    };\n    const handleIncrease = () => {\n        if (tick_value + 1 <= max_value) {\n            setTickValue(tick_value + 1);\n        }\n    };\n    const handleClick = () => {\n        onSubmit({\n            target: {\n                value: tick_value,\n                name: 'submit',\n            },\n        });\n    };\n\n    React.useEffect(() => {\n        if (onValueChange) onValueChange(tick_value);\n    }, [tick_value]);\n\n    const throttledSwipeHandler = throttle(\n        ({ dir }) => {\n            if (dir.toLowerCase() === 'up') {\n                handleIncrease();\n            }\n            if (dir.toLowerCase() === 'down') {\n                handleDecrease();\n            }\n        },\n        THROTTLE_INTERVAL_TIME,\n        { trailing: true, leading: false }\n    );\n\n    const swipe_handlers = useSwipeable({\n        onSwiping: throttledSwipeHandler,\n    });\n\n    return (\n        <div className='dc-tick-picker'>\n            <div className='dc-tick-picker__calculation'>\n                <Button rounded className='operator' onClick={handleDecrease}>\n                    <Icon icon='IcMinus' custom_color='var(--text-prominent)' />\n                </Button>\n                <div className='dc-tick-picker__holder' {...swipe_handlers}>\n                    <span className='dc-tick-picker__holder--large'>{normalizedTick(tick_value)}</span>\n                    <span className='dc-tick-picker__holder--small'>\n                        {tick_value === 1 ? singular_label : plural_label}\n                    </span>\n                </div>\n                <Button rounded className='operator' onClick={handleIncrease}>\n                    <Icon icon='IcAdd' custom_color='var(--text-prominent)' />\n                </Button>\n            </div>\n            <div\n                className={classNames('dc-tick-picker__submit-wrapper', {\n                    'dc-tick-picker__submit-wrapper--is-disabled': is_submit_disabled,\n                })}\n            >\n                <Button rounded onClick={handleClick}>\n                    {submit_label}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default TickPicker;\n","import TickPicker from './tick-picker.jsx';\nimport './tick-picker.scss';\n\nexport default TickPicker;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Tick = ({ is_on }) => {\n    return (\n        <div\n            className={classNames('dc-tick-progress__tick', {\n                'dc-tick-progress__tick--on': is_on,\n            })}\n        />\n    );\n};\n\nconst TickProgress = ({ className, rows, columns, size, value }) => {\n    return (\n        <div\n            className={classNames('dc-tick-progress', className)}\n            style={{\n                gridTemplateRows: `repeat(${rows}, 1fr)`,\n                gridTemplateColumns: `repeat(${columns}, 1fr)`,\n            }}\n        >\n            {new Array(size).fill(null).map((item, index) => {\n                return <Tick is_on={index < value} key={index} />;\n            })}\n        </div>\n    );\n};\n\nTickProgress.defaultProps = {\n    columns: 5,\n    rows: 2,\n    size: 10,\n    value: 0,\n};\n\nexport default TickProgress;\n\nTickProgress.propTypes = {\n    className: PropTypes.string,\n    columns: PropTypes.number,\n    value: PropTypes.number,\n    rows: PropTypes.number,\n    size: PropTypes.number,\n};\n","import TickProgress from './tick-progress.jsx';\nimport './tick-progress.scss';\n\nexport default TickProgress;\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst Oval = ({ children }) => {\n    return (\n        <div className='dc-timeline__oval'>\n            <span className='dc-timeline__number'>{children}</span>\n        </div>\n    );\n};\n\nconst Timeline = ({ children, ...props }) => {\n    return (\n        <div {...props}>\n            {children.map((child, idx) => (\n                <div\n                    key={idx}\n                    className={classNames('dc-timeline__flex', {\n                        'dc-timeline__flex--no-border': children.length === idx + 1,\n                    })}\n                >\n                    <Oval>{idx + 1}</Oval>\n                    <div className='dc-timeline__container'>\n                        <h2 className='dc-timeline__title'>{child.props.title}</h2>\n                        <div className='dc-timeline__content'>{child}</div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\nconst Item = ({ children, ...props }) => <div {...props}>{children}</div>;\nTimeline.Item = Item;\nexport default Timeline;\n","import Timeline from './timeline.jsx';\nimport './timeline.scss';\n\nexport default Timeline;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle\n                            className='block-ui__loading-spinner-path'\n                            cx='50'\n                            cy='50'\n                            r='20'\n                            fill='none'\n                            strokeWidth='4'\n                            strokeMiterlimit='10'\n                        />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import UILoader from './ui-loader.jsx';\nimport './ui-loader.scss';\n\nexport default UILoader;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Icon from '../icon/icon.jsx';\n\nconst Content = ({ is_routed, items, selected }) => {\n    const selected_item = items.find(item => item.label === selected.label);\n    const TabContent = selected_item.value;\n\n    const [side_note, setSideNote] = React.useState(null);\n\n    React.useEffect(() => {\n        setSideNote(null);\n    }, [selected_item]);\n\n    return (\n        <React.Fragment>\n            {is_routed ? (\n                <Switch>\n                    {items.map(({ value, component, path, icon }, idx) => {\n                        const Component = value || component;\n                        return (\n                            <Route\n                                key={idx}\n                                path={path}\n                                render={() => <Component component_icon={icon} setSideNote={setSideNote} />}\n                            />\n                        );\n                    })}\n                </Switch>\n            ) : (\n                <TabContent key={selected_item.label} className='item-id' setSideNote={setSideNote} />\n            )}\n            {selected.has_side_note && (\n                // for components that have side note, even if no note is passed currently,\n                // we want to keep the column space for side note\n                <div className='dc-vertical-tab__content-side-note'>\n                    {side_note && <div className='dc-vertical-tab__content-side-note-wrapper'>{side_note}</div>}\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default class VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            id,\n            is_floating,\n            is_routed,\n            items,\n            selected,\n            tab_container_classname,\n        } = this.props;\n\n        return (\n            <div\n                className={classNames('dc-vertical-tab__content', {\n                    'dc-vertical-tab__content--floating': is_floating,\n                })}\n            >\n                {!is_floating && action_bar && (\n                    <div\n                        className={classNames('dc-vertical-tab__action-bar', {\n                            [action_bar_classname]: !!action_bar_classname,\n                        })}\n                    >\n                        {action_bar.map(({ component, icon, onClick }, idx) => {\n                            const Component = component;\n                            return component ? (\n                                <Component key={idx} />\n                            ) : (\n                                <div\n                                    id={`dt_${id}_close_icon`}\n                                    className='dc-vertical-tab__action-bar-wrapper'\n                                    key={idx}\n                                    onClick={onClick}\n                                >\n                                    <Icon className='dc-vertical-tab__action-bar--icon' icon={icon} />\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n                <div className={classNames('dc-vertical-tab__content-container', tab_container_classname)}>\n                    {selected.has_side_note ? (\n                        <div className='dc-vertical-tab__content-inner'>\n                            <Content is_routed={is_routed} items={items} selected={selected} />\n                        </div>\n                    ) : (\n                        <Content is_routed={is_routed} items={items} selected={selected} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Counter from '../counter';\nimport Icon from '../icon/icon.jsx';\n\nconst HeaderIcon = ({ icon, is_active }) => (\n    <Icon\n        icon={icon}\n        className={classNames('dc-vertical-tab__header__icon', {\n            'dc-vertical-tab__header__icon--active': is_active,\n        })}\n    />\n);\n\nconst Header = ({ text }) => <div className='dc-vertical-tab__header__link'>{text}</div>;\n\nconst VerticalTabHeader = ({ children, className, is_floating, is_routed, item, onChange, selected }) => {\n    const label = item.label || item.title; // item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n    const is_active = selected && selected.label === item.label;\n    const handleClick = () => onChange(item);\n    const id = `dt_${label}_link`;\n    const is_disabled = !!item.is_disabled;\n    const count = item.count || 0;\n\n    return is_routed ? (\n        <NavLink\n            id={id}\n            to={item.path}\n            onClick={handleClick}\n            className={classNames('dc-vertical-tab__header', {\n                'dc-vertical-tab__header--disabled': is_disabled,\n                'dc-vertical-tab__header--floating': is_floating,\n            })}\n            activeClassName={classNames(className, {\n                'dc-vertical-tab__header--active': is_active,\n            })}\n        >\n            <HeaderIcon icon={item.icon} is_active={is_active} />\n            <Header text={label} />\n            {!!count && <Counter count={count} className='dc-vertical-tab__header__counter' />}\n            {children}\n        </NavLink>\n    ) : (\n        <div\n            id={id}\n            className={classNames('dc-vertical-tab__header', className, {\n                'dc-vertical-tab__header--active': is_active,\n                'dc-vertical-tab__header--disabled': is_disabled,\n            })}\n            onClick={handleClick}\n        >\n            <HeaderIcon icon={item.icon} is_active={is_active} />\n            <Header text={label} />\n            {children}\n            {item.component}\n        </div>\n    );\n};\n\nexport default VerticalTabHeader;\n","import classNames from 'classnames';\nimport React from 'react';\nimport Icon from '../icon/icon.jsx';\n\nconst HeaderIcon = ({ icon, is_active }) => (\n    <Icon\n        icon={icon}\n        className={classNames('dc-vertical-tab__header-group__icon', {\n            'dc-vertical-tab__header-group__icon--active': is_active,\n        })}\n    />\n);\n\nconst Header = ({ text }) => <div className='dc-vertical-tab__header-group__link'>{text}</div>;\n\nconst VerticalTabHeaderGroup = ({ children, className, group, selected, onToggle }) => {\n    const [show_items, setShowItems] = React.useState(true);\n    React.useEffect(() => {\n        onToggle(true);\n    }, [show_items]);\n    const label = group.label || group.title; // group.label.charAt(0).toUpperCase() + group.label.slice(1).toLowerCase();\n    const handleClick = () => {\n        if (!selected) setShowItems(!show_items);\n    };\n    const id = `dt_${label}_link`;\n    const is_disabled = !!group.is_disabled;\n\n    return (\n        <>\n            <div\n                id={id}\n                className={classNames('dc-vertical-tab__header-group', className, {\n                    'dc-vertical-tab__header-group--active': selected,\n                    'dc-vertical-tab__header-group--disabled': is_disabled || selected,\n                })}\n                onClick={handleClick}\n            >\n                <HeaderIcon icon={group.icon} is_active={selected} />\n                <Header text={label} />\n                <Icon\n                    icon='IcChevronUpBold' // Point up because default state of tab header group is open\n                    className={classNames('dc-vertical-tab__header-group-chevron', {\n                        'dc-vertical-tab__header-group-chevron--invert': !show_items,\n                    })}\n                />\n            </div>\n            {show_items && <div>{children}</div>}\n        </>\n    );\n};\n\nexport default VerticalTabHeaderGroup;\n","import classNames from 'classnames';\nimport React from 'react';\n\nconst VerticalTabWrapper = ({ wrapper_ref, children, className }) => (\n    <div ref={wrapper_ref} className={classNames('dc-vertical-tab__tab', className)}>\n        {children}\n    </div>\n);\n\nexport default VerticalTabWrapper;\n","import React from 'react';\n\nconst VerticalTabHeaderTitle = ({ header_title }) => (\n    <div className='dc-vertical-tab__header-title'>\n        <p>{header_title}</p>\n    </div>\n);\n\nexport default VerticalTabHeaderTitle;\n","import classNames from 'classnames';\nimport React from 'react';\nimport VerticalTabWrapper from './vertical-tab-wrapper.jsx';\nimport VerticalTabHeader from './vertical-tab-header.jsx';\nimport VerticalTabHeaderGroup from './vertical-tab-header-group.jsx';\nimport VerticalTabHeaderTitle from './vertical-tab-header-title.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    ref = React.createRef();\n    headers = [];\n    state = { top: 0, should_skip_animation: false };\n\n    componentDidMount() {\n        this.repositionActiveHighlighter();\n    }\n\n    componentDidUpdate() {\n        this.repositionActiveHighlighter();\n    }\n\n    onTabChange = item => {\n        if (typeof this.props.onChange === 'function') {\n            this.props.onChange(item);\n        }\n\n        this.repositionActiveHighlighter();\n    };\n\n    // You can pass true for `should_skip_animation` for uses such as closing a header group.\n    // Otherwise, there can be a spotlight effect where the highlighter will gradually animate over to the new offsetTop\n    // value of the tab header. This is expected.\n    repositionActiveHighlighter = should_skip_animation => {\n        this.setState({ top: this.offset_top, should_skip_animation });\n    };\n\n    get offset_top() {\n        const { selected } = this.props;\n        let calculated_offset = 0;\n\n        this.headers = this.ref.current.querySelectorAll('.dc-vertical-tab__header__link');\n\n        const selected_el = [...this.headers].find(header => header.innerText === (selected.label || selected.title));\n\n        if (selected_el) {\n            const extra_offset = this.props.is_floating ? 18 : 10;\n            calculated_offset = selected_el.offsetTop - extra_offset;\n        }\n\n        return calculated_offset;\n    }\n\n    render() {\n        return (\n            <VerticalTabWrapper\n                wrapper_ref={this.ref}\n                className={classNames(this.props.className, {\n                    'dc-vertical-tab__tab--floating': this.props.is_floating,\n                })}\n            >\n                {!this.props.is_floating && this.props.header_title && (\n                    <VerticalTabHeaderTitle header_title={this.props.header_title} />\n                )}\n                {Array.isArray(this.props.item_groups)\n                    ? this.props.item_groups.map((group, idx) => (\n                          <VerticalTabHeaderGroup\n                              onToggle={this.repositionActiveHighlighter}\n                              selected={group.subitems.includes(\n                                  // See if the index of the currently selected item is in the subitems of this group\n                                  this.props.items.findIndex(i => i === this.props.selected)\n                              )}\n                              items={this.props.items}\n                              group={group}\n                              key={idx}\n                          >\n                              {group.subitems.map((item_idx, header_idx) => (\n                                  <VerticalTabHeader\n                                      item={this.props.items[item_idx]}\n                                      onChange={this.onTabChange}\n                                      is_floating={this.props.is_floating}\n                                      is_routed={this.props.is_routed}\n                                      selected={this.props.selected}\n                                      key={header_idx}\n                                  />\n                              ))}\n                          </VerticalTabHeaderGroup>\n                      ))\n                    : this.props.items.map((item, idx) => (\n                          <VerticalTabHeader\n                              item={item}\n                              onChange={this.onTabChange}\n                              is_floating={this.props.is_floating}\n                              is_routed={this.props.is_routed}\n                              selected={this.props.selected}\n                              key={idx}\n                          />\n                      ))}\n                <span\n                    style={{\n                        transition: this.state.should_skip_animation ? 'unset' : 'transform 0.25s ease',\n                        transform: `translate3d(0, ${this.state.top}px, 0)`,\n                    }}\n                    className='dc-vertical-tab__header--highlight'\n                />\n            </VerticalTabWrapper>\n        );\n    }\n}\n\nexport default VerticalTabHeaders;\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst VerticalTabLayout = ({ children, is_full_width }) => (\n    <div\n        className={classNames('dc-vertical-tab', {\n            'dc-vertical-tab--full-screen': is_full_width,\n        })}\n    >\n        {children}\n    </div>\n);\n\nexport default VerticalTabLayout;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport VerticalTabContentContainer from './vertical-tab-content-container.jsx';\nimport VerticalTabHeader from './vertical-tab-header.jsx';\nimport VerticalTabHeaderGroup from './vertical-tab-header-group.jsx';\nimport VerticalTabHeaders from './vertical-tab-headers.jsx';\nimport VerticalTabHeaderTitle from './vertical-tab-header-title.jsx';\nimport VerticalTabLayout from './vertical-tab-layout.jsx';\nimport VerticalTabWrapper from './vertical-tab-wrapper.jsx';\n\nclass VerticalTab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { vertical_tab_index: props.vertical_tab_index || 0 };\n    }\n\n    setSelectedIndex = ({ list, selected_index, is_routed, current_path }) => {\n        let index;\n        if (typeof selected_index === 'undefined') {\n            index = is_routed\n                ? Math.max(\n                      list.indexOf(list.find(item => item.path === current_path) || list.find(item => item.default)),\n                      0\n                  )\n                : 0;\n        } else {\n            index = typeof selected_index === 'object' ? list.indexOf(selected_index) : selected_index;\n        }\n\n        this.setState({ vertical_tab_index: index });\n\n        if (typeof this.props.setVerticalTabIndex === 'function') {\n            this.props.setVerticalTabIndex(index);\n        }\n    };\n\n    changeSelected = e => {\n        this.setSelectedIndex({\n            list: this.props.list,\n            selected_index: e,\n        });\n    };\n\n    componentDidMount() {\n        this.setSelectedIndex(this.props);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            this.props.list.length !== prevProps.list.length ||\n            this.props.vertical_tab_index !== prevProps.vertical_tab_index\n        ) {\n            this.setSelectedIndex({\n                current_path: this.props.current_path,\n                list: this.props.list,\n                is_routed: this.props.is_routed,\n            });\n        }\n    }\n\n    render() {\n        const selected = this.props.list[this.state.vertical_tab_index] || this.props.list[0];\n\n        return (\n            <div\n                className={classNames('dc-vertical-tab', {\n                    'dc-vertical-tab--floating': this.props.is_floating, // This is currently only configured for use in PageOverlay\n                    'dc-vertical-tab--full-screen': this.props.is_full_width,\n                    'dc-vertical-tab--grouped': Array.isArray(this.props.list_groups),\n                })}\n            >\n                {this.props.is_sidebar_enabled && (\n                    <div\n                        className={classNames('dc-vertical-tab__tab-meta-wrapper', {\n                            'dc-vertical-tab__tab-meta-wrapper--floating': this.props.is_floating,\n                        })}\n                    >\n                        <VerticalTabHeaders\n                            className={this.props.header_classname}\n                            items={this.props.list}\n                            item_groups={this.props.list_groups}\n                            onChange={this.changeSelected}\n                            selected={selected}\n                            is_floating={this.props.is_floating}\n                            is_routed={this.props.is_routed}\n                            header_title={this.props.header_title}\n                            tab_headers_note={this.props.tab_headers_note}\n                        />\n                        {this.props.is_floating && this.props.tab_headers_note && (\n                            <div className='dc-vertical-tab__tab-bottom-note'>{this.props.tab_headers_note}</div>\n                        )}\n                    </div>\n                )}\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    is_floating={this.props.is_floating}\n                    items={this.props.list}\n                    selected={selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.defaultProps = {\n    is_sidebar_enabled: true,\n};\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n            icon: PropTypes.string,\n            onClick: PropTypes.func,\n            title: PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path: PropTypes.string,\n    header_classname: PropTypes.string,\n    header_title: PropTypes.string,\n    is_floating: PropTypes.bool,\n    is_full_width: PropTypes.bool,\n    is_routed: PropTypes.bool,\n    is_sidebar_enabled: PropTypes.bool,\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon: PropTypes.string,\n            label: PropTypes.string,\n            path: PropTypes.string,\n            value: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    list_groups: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon: PropTypes.string,\n            label: PropTypes.string,\n            subitems: PropTypes.arrayOf(PropTypes.number),\n        })\n    ),\n    tab_headers_note: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    selected_index: PropTypes.number,\n    setVerticalTabIndex: PropTypes.func,\n    vertical_tab_index: PropTypes.number,\n};\n\nVerticalTab.ContentContainer = VerticalTabContentContainer;\nVerticalTab.Header = VerticalTabHeader;\nVerticalTab.HeaderGroup = VerticalTabHeaderGroup;\nVerticalTab.Headers = VerticalTabHeaders;\nVerticalTab.HeaderTitle = VerticalTabHeaderTitle;\nVerticalTab.Layout = VerticalTabLayout;\nVerticalTab.Wrapper = VerticalTabWrapper;\n\nexport default VerticalTab;\n","import VerticalTab from './vertical-tab.jsx';\nimport './vertical-tab.scss';\n\nexport default VerticalTab;\n","class APIMiddleware {\n    constructor(config) {\n        this.config = config;\n        this.debounced_calls = {};\n    }\n\n    sendWillBeCalled({ args: [request] }) {\n        this.config.wsEvent('send');\n\n        const key = requestToKey(request);\n\n        if (key in this.debounced_calls) {\n            return this.debounced_calls[key];\n        }\n\n        return undefined;\n    }\n\n    sendIsCalled({ response_promise, args: [request, options = {}] }) {\n        const promise = promiseRejectToResolve(response_promise);\n\n        const key = requestToKey(request);\n\n        if (options.callback) {\n            promise.then(options.callback);\n        }\n\n        this.debounced_calls[key] = promise;\n\n        promise.then(() => {\n            delete this.debounced_calls[key];\n        });\n\n        return promise;\n    }\n}\n\n// Delegate error handling to the callback\nfunction promiseRejectToResolve(promise) {\n    return new Promise(r => {\n        promise.then(r, r);\n    });\n}\n\nfunction requestToKey(request) {\n    const request_copy = { ...request };\n\n    delete request_copy.passthrough;\n    delete request_copy.req_id;\n    delete request_copy.subscribe;\n\n    return JSON.stringify(request_copy);\n}\n\nmodule.exports = APIMiddleware;\n","import { addComma, getDecimalPlaces, cloneObject, compareBigUnsignedInt } from '@deriv/shared';\n\nimport Client from '_common/base/client_base';\nimport { getElementById } from '_common/common_functions';\n\nimport { localize } from '@deriv/translations';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nexport const validRequired = (value /* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst confirmRequired = value => value === true;\nconst validEmail = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nexport const validPassword = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nexport const validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nexport const validAddress = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nexport const validPostCode = value => /^[-A-Za-z0-9\\s]{0,20}$/.test(value);\nexport const validPhone = value => /^\\+((-|\\s)*[0-9]){8,35}$/.test(value);\nexport const validCountryCode = (list, value) =>\n    list.some(item => value.replace(/[ ]/g, '').startsWith(`+${item.phone_idd}`));\nconst validRegular = (value, options) => options.regex.test(value);\nconst validEmailToken = value => value.trim().length === 8;\nexport const validTaxID = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin = (value, options) => (options.min ? value.length >= options.min : true);\nexport const validLength = (value, options) => {\n    const getMessage = () => {\n        const { min, max } = options;\n        if (min && max) {\n            return localize('You should enter a value between {{min}} and {{max}} characters.', { min, max });\n        } else if (min) {\n            return localize('You should enter a value at least {{min}} characters.', { min });\n        }\n\n        return localize('Maximum allowed characters are {{max}}.', { max });\n    };\n\n    const result =\n        (options.min ? value.length >= options.min : true) && (options.max ? value.length <= options.max : true);\n    if (!result) {\n        getPreBuildDVRs().length.message = getMessage();\n    }\n\n    return result;\n};\n\nexport const validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok = false;\n        message = localize('Should be a valid number.');\n    } else if (\n        options.type === 'float' &&\n        options.decimals &&\n        !new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value)\n    ) {\n        is_ok = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok = false;\n        message = localize('Should be {{value}}', {\n            value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n        });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok = false;\n        message = localize('Should be between {{min_value}} and {{max_value}}', {\n            min_value: addComma(\n                options.min,\n                options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined\n            ),\n            max_value: addComma(\n                options.max,\n                options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined\n            ),\n        });\n    } else if ('min' in options && +value < +options.min) {\n        is_ok = false;\n        message = localize('Should be more than {{min_value}}', {\n            min_value: addComma(\n                options.min,\n                options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined\n            ),\n        });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok = false;\n        message = localize('Should be less than {{max_value}}', {\n            max_value: addComma(\n                options.max,\n                options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined\n            ),\n        });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1;\n\nconst initPreBuildDVRs = () => ({\n    address: {\n        func: validAddress,\n        message: localize(\n            'Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}',\n            { permitted_characters: \"- . ' # ; : ( ) , @ /\" }\n        ),\n    },\n    barrier: {\n        func: validBarrier,\n        message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', {\n            permitted_characters: '+ - .',\n        }),\n    },\n    compare: { func: validCompare, message: localize('The two passwords that you entered do not match.') },\n    email: { func: validEmail, message: localize('Invalid email address.') },\n    general: {\n        func: validGeneral,\n        message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.'),\n    },\n    length: { func: validLength, message: '' }, // Message will be set in validLength function on initiation\n    letter_symbol: {\n        func: validLetterSymbol,\n        message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.'),\n    },\n    min: { func: validMin, message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal: {\n        func: validNotEqual,\n        message: localize('{{value_one}} and {{value_two}} cannot be the same.', {\n            value_one: '{{value_one}}',\n            value_two: '{{value_two}}',\n        }),\n    },\n    number: { func: validNumber, message: '' },\n    password: {\n        func: validPassword,\n        message: localize('Password should have lower and uppercase letters with numbers.'),\n    },\n    phone: { func: validPhone, message: localize('Only numbers and spaces are allowed.') },\n    postcode: { func: validPostCode, message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular: { func: validRegular, message: '' },\n    req: { func: validRequired, message: field => localize('{{field}} is required', { field }) },\n    confirm: { func: confirmRequired, message: '' },\n    signup_token: { func: validEmailToken, message: localize('The length of token should be 8.') },\n    tax_id: {\n        func: validTaxID,\n        message: localize('Should start with letter or number, and may contain hyphen and underscore.'),\n    },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: /^mt$/.test(type) ? 8 : 6, max: 25 });\n","import { getUrlBase } from '@deriv/shared';\n\nconst EVERY_HOUR = 3600000; // 1000 * 60 * 60\nlet interval_id;\n\nfunction refreshOnUpdate() {\n    return swRegistrationObject => {\n        swRegistrationObject.onupdatefound = () => {\n            const updatingWorker = swRegistrationObject.installing;\n            updatingWorker.onstatechange = () => {\n                if (updatingWorker.state === 'installed' && navigator.serviceWorker.controller) {\n                    // eslint-disable-next-line no-console\n                    console.log('New version is found, refreshing the page...');\n                    clearInterval(interval_id);\n                }\n            };\n        };\n    };\n}\n\nexport default function register() {\n    // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            const sw_url = `${window.location.origin}${getUrlBase('/service-worker.js')}`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    interval_id = setInterval(() => {\n                        registration.update().then(refreshOnUpdate);\n                    }, EVERY_HOUR);\n\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // User's first visit:\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                    const new_version_received = new Event('UpdateAvailable');\n                                    document.dispatchEvent(new_version_received);\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport { getUrlSmartTrader } from '@deriv/shared';\n\nconst SmartTraderIFrame = () => {\n    const url = getUrlSmartTrader();\n    if (!url) {\n        return null;\n    }\n\n    return (\n        <iframe\n            id='localstorage-sync'\n            src={`${url}/localstorage-sync.html`}\n            style={{ display: 'none', visibility: 'hidden' }}\n            sandbox='allow-same-origin allow-scripts'\n        />\n    );\n};\n\nexport default SmartTraderIFrame;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => (this.state.hasError ? <ErrorComponent should_show_refresh={true} /> : this.props.children);\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect(store => ({\n    root_store: store,\n}))(ErrorBoundary);\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getCurrentProductionDomain } from '@deriv/shared';\n\nconst RedirectNoticeModal = ({ is_logged_in, is_eu }) => {\n    const [dialog_status, setDialogStatus] = React.useState(false);\n    const [external_link, setExternalLink] = React.useState('');\n\n    const isThirdPartyLink = href => {\n        let destination;\n        try {\n            destination = new URL(href);\n        } catch (e) {\n            return false;\n        }\n        return (\n            !!destination.host &&\n            !new RegExp(`^.*\\\\.${getCurrentProductionDomain() || 'binary\\\\.com'}$`).test(destination.host) && // destination host is not binary subdomain\n            !new RegExp('^.*\\\\.binary\\\\.bot$').test(destination.host) && // destination host is not binary subdomain\n            !/www.(betonmarkets|xodds).com/.test(destination.host) && // destination host is not binary old domain\n            !/deriv.(app|com)/.test(destination.host) && // destination host is not deriv\n            window.location.host !== destination.host\n        );\n    };\n    const onCancelDialog = () => {\n        setDialogStatus(false);\n    };\n    const onConfirmDialog = () => {\n        setDialogStatus(false);\n        window.open(external_link);\n    };\n\n    const onClickExternalLink = e => {\n        if (isThirdPartyLink(e.target.href) && is_logged_in && is_eu) {\n            setExternalLink(e.target.href);\n            e.preventDefault();\n            setDialogStatus(true);\n        }\n    };\n    React.useEffect(() => {\n        document.addEventListener('click', onClickExternalLink);\n    }, [is_logged_in, is_eu]);\n\n    React.useEffect(() => {\n        return () => {\n            document.removeEventListener('click', onClickExternalLink);\n        };\n    }, []);\n\n    return (\n        dialog_status && (\n            <Dialog\n                className='redirect-notice'\n                is_visible={dialog_status}\n                title='Redirect notice'\n                is_open={dialog_status}\n                cancel_button_text={localize('Cancel')}\n                confirm_button_text={localize('Proceed')}\n                onCancel={onCancelDialog}\n                onConfirm={onConfirmDialog}\n            >\n                {localize('You are being redirected to an external website.')}\n            </Dialog>\n        )\n    );\n};\n\nexport default RedirectNoticeModal;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@deriv/components';\nimport { getDerivComLink } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst CookieBanner = ({ onAccept, onDecline, is_open, is_dark_mode }) => (\n    <div\n        className={classNames('cookie-banner', {\n            'cookie-banner--is-closed': !is_open,\n            'cookie-banner--theme-dark': is_dark_mode,\n        })}\n    >\n        <div className='description'>\n            <Localize i18n_default_text='Cookies help us to give you a better experience and personalised content on our site.' />\n            <br />\n            <Localize\n                i18n_default_text='If you agree to our use of cookies, click on Accept. For more information, <0>see our policy</0>.'\n                components={[\n                    <a\n                        key={0}\n                        className='link link--red'\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href={getDerivComLink('/terms-and-conditions')}\n                    />,\n                ]}\n            />\n            <Button className='cookie-banner__btn-dont-accept' secondary onClick={onDecline}>\n                {localize('Don’t accept')}\n            </Button>\n            <Button className='cookie-banner__btn-accept' secondary onClick={onAccept}>\n                {localize('Accept')}\n            </Button>\n        </div>\n    </div>\n);\n\nCookieBanner.prototype = {\n    is_dark_mode: PropTypes.bool,\n    is_open: PropTypes.bool,\n    onAccept: PropTypes.func,\n    onDecline: PropTypes.func,\n};\n\nexport default CookieBanner;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport WS from 'Services/ws-methods';\nimport { DesktopWrapper, MobileWrapper, ThemedScrollbars } from '@deriv/components';\nimport RedirectNoticeModal from 'App/Components/Elements/Modals/RedirectNotice';\nimport { isMobile } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { CookieStorage } from '_common/storage';\nimport CookieBanner from '../../Components/Elements/CookieBanner/cookie-banner.jsx';\nimport { TRACKING_STATUS_KEY } from '../../Constants/app-config';\n// import InstallPWA    from './install-pwa.jsx';\n\nconst tracking_status_cookie = new CookieStorage(TRACKING_STATUS_KEY);\n\nconst AppContents = ({\n    children,\n    identifyEvent,\n    is_app_disabled,\n    is_cashier_visible,\n    is_dark_mode,\n    is_eu_country,\n    is_eu,\n    is_logged_in,\n    is_logging_in,\n    is_mt5_page,\n    is_positions_drawer_on,\n    is_route_modal_on,\n    pageView,\n    pushDataLayer,\n}) => {\n    const [show_cookie_banner, setShowCookieBanner] = React.useState(false);\n    const [is_gtm_tracking, setIsGtmTracking] = React.useState(false);\n\n    const tracking_status = tracking_status_cookie.get(TRACKING_STATUS_KEY);\n\n    React.useEffect(() => {\n        const allow_tracking = !is_eu_country || tracking_status === 'accepted';\n        if (allow_tracking && !is_gtm_tracking) {\n            pushDataLayer({ event: 'allow_tracking' });\n            setIsGtmTracking(true);\n        }\n    }, [is_eu_country]);\n\n    React.useEffect(() => {\n        if (!tracking_status && !is_logged_in && !is_logging_in) {\n            WS.wait('website_status').then(() => {\n                setShowCookieBanner(is_eu_country);\n            });\n        }\n    }, [is_logged_in, is_eu_country, is_logging_in]);\n\n    // Segment page view trigger\n    identifyEvent();\n    pageView();\n    /*\n    if (is_logged_in) {\n    TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        e.preventDefault();\n        this.props.setPWAPromptEvent(e);\n        this.props.addNotificationBar({\n            content : <InstallPWA />,\n            autoShow: 10000, // show after 10 secs\n            msg_type: 'pwa',\n        });\n    });\n    }\n    */\n\n    // handle accept/decline cookies\n    const onAccept = () => {\n        tracking_status_cookie.set(TRACKING_STATUS_KEY, 'accepted', { sameSite: 'none', secure: true });\n        pushDataLayer({ event: 'allow_tracking' });\n        setShowCookieBanner(false);\n        setIsGtmTracking(true);\n    };\n\n    const onDecline = () => {\n        tracking_status_cookie.set(TRACKING_STATUS_KEY, 'declined', { sameSite: 'none', secure: true });\n        setShowCookieBanner(false);\n    };\n\n    return (\n        <div\n            id='app_contents'\n            className={classNames('app-contents', {\n                'app-contents--show-positions-drawer': is_positions_drawer_on,\n                'app-contents--is-disabled': is_app_disabled,\n                'app-contents--is-mobile': isMobile(),\n                'app-contents--is-route-modal': is_route_modal_on,\n                'app-contents--is-scrollable': is_mt5_page || is_cashier_visible,\n            })}\n        >\n            <MobileWrapper>{children}</MobileWrapper>\n            <DesktopWrapper>\n                <RedirectNoticeModal is_logged_in={is_logged_in} is_eu={is_eu} />\n                {/* Calculate height of user screen and offset height of header and footer */}\n                <ThemedScrollbars height='calc(100vh - 84px)'>{children}</ThemedScrollbars>\n            </DesktopWrapper>\n            {show_cookie_banner && (\n                <CookieBanner\n                    onAccept={onAccept}\n                    onDecline={onDecline}\n                    is_open={show_cookie_banner}\n                    is_dark_mode={is_dark_mode}\n                />\n            )}\n        </div>\n    );\n};\n\nAppContents.propTypes = {\n    children: PropTypes.any,\n    is_app_disabled: PropTypes.bool,\n    is_cashier_visible: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_mt5_page: PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_modal_on: PropTypes.bool,\n    pwa_prompt_event: PropTypes.object,\n};\n\nexport default withRouter(\n    connect(({ client, gtm, segment, ui }) => ({\n        is_eu_country: client.is_eu_country,\n        is_eu: client.is_eu,\n        is_logged_in: client.is_logged_in,\n        is_logging_in: client.is_logging_in,\n        pushDataLayer: gtm.pushDataLayer,\n        identifyEvent: segment.identifyEvent,\n        pageView: segment.pageView,\n        is_app_disabled: ui.is_app_disabled,\n        is_cashier_visible: ui.is_cashier_visible,\n        is_dark_mode: ui.is_dark_mode_on,\n        is_mt5_page: ui.is_mt5_page,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_route_modal_on: ui.is_route_modal_on,\n        pwa_prompt_event: ui.pwa_prompt_event,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n        // addNotificationBar    : ui.addNotificationBar,\n    }))(AppContents)\n);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\n\nconst NetworkStatus = ({ is_mobile, status }) => {\n    const network_status_element = (\n        <div\n            className={classNames('network-status__circle', {\n                'network-status__circle--offline': status.class === 'offline',\n                'network-status__circle--online': status.class === 'online',\n                'network-status__circle--blinker': status.class === 'blinker',\n            })}\n        />\n    );\n    return (\n        <div\n            className={classNames('network-status__wrapper', {\n                'network-status__wrapper--is-mobile': is_mobile,\n            })}\n        >\n            {is_mobile ? (\n                network_status_element\n            ) : (\n                <Popover\n                    classNameBubble='network-status__tooltip'\n                    alignment='top'\n                    message={localize('Network status: {{status}}', {\n                        status: status.tooltip || localize('Connecting to server'),\n                    })}\n                >\n                    {network_status_element}\n                </Popover>\n            )}\n        </div>\n    );\n};\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(({ common }) => ({\n    status: common.network_status,\n}))(NetworkStatus);\n","import React from 'react';\nimport { Icon, Popover } from '@deriv/components';\nimport { getDerivComLink } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const GoToDeriv = () => (\n    <Popover alignment='top' message={localize('Go to Deriv.com')} className='footer__link'>\n        <a href={getDerivComLink('/')} target='_blank' rel='nofollow noreferrer'>\n            <Icon icon='IcDerivOutline' className='footer__icon ic-deriv__icon' />\n        </a>\n    </Popover>\n);\n","import React from 'react';\nimport { routes } from '@deriv/shared';\nimport { BinaryLink } from '../../Routes';\n\nconst EndpointNote = () => {\n    const server_url = localStorage.getItem('config.server_url');\n    return server_url ? (\n        <span style={{ fontSize: 'var(--text-size-xs)', color: 'var(--brand-red-coral)' }}>\n            The server{' '}\n            <BinaryLink className='account-settings-toggle' to={routes.endpoint}>\n                endpoint\n            </BinaryLink>{' '}\n            is: {server_url}\n        </span>\n    ) : null;\n};\n\nexport { EndpointNote };\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event: ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'],\n            element: ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit: ['exitFullscreen', 'webkitExitFullscreen', 'mozCancelFullScreen', 'msExitFullscreen'],\n        };\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach(event => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = e => {\n        e.stopPropagation();\n\n        const to_exit = this.state.is_full_screen;\n        const el = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    };\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <Popover\n                alignment='top'\n                message={this.state.is_full_screen ? localize('Exit') : localize('Full screen')}\n                className='footer__link'\n            >\n                <a className={full_screen_icon_class} onClick={this.toggleFullScreen} id='dt_fullscreen_toggle'>\n                    {this.state.is_full_screen ? (\n                        <Icon icon='IcFullScreenRestore' className='footer__icon' />\n                    ) : (\n                        <Icon icon='IcFullScreen' className='footer__icon' />\n                    )}\n                </a>\n            </Popover>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Loadable from 'react-loadable';\nimport { Icon, Modal, Popover, VerticalTab, UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport 'Sass/app/modules/settings.scss';\n\nconst ThemeSetting = Loadable({\n    loader: () =>\n        import(\n            /* webpackChunkName: \"settings-theme\", webpackPrefetch: true */ 'App/Containers/SettingsModal/settings-theme.jsx'\n        ),\n    loading: UILoader,\n});\n\nconst LanguageSettingContainer = Loadable({\n    loader: () =>\n        import(\n            /* webpackChunkName: \"settings-language\", webpackPrefetch: true */ 'App/Containers/SettingsModal/settings-language.jsx'\n        ),\n    loading: UILoader,\n});\n\nconst ModalContent = ({ settings_extension }) => {\n    const content = [\n        {\n            icon: 'IcTheme',\n            label: localize('Themes'),\n            // eslint-disable-next-line react/display-name\n            value: ThemeSetting,\n        },\n        {\n            icon: 'IcLanguage',\n            label: localize('Language'),\n            value: LanguageSettingContainer,\n        },\n        ...(settings_extension || []),\n    ];\n\n    return <VerticalTab alignment='center' classNameHeader='modal__tab-header' id='modal' list={content} />;\n};\n\nconst ToggleSettings = ({ enableApp, is_settings_visible, disableApp, toggleSettings, settings_extension }) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <Popover alignment='top' message={localize('Platform settings')} className='footer__link'>\n                <a id='dt_settings_toggle' onClick={toggleSettings} className={toggle_settings_class}>\n                    <Icon icon='IcGear' className='footer__icon ic-settings__icon' />\n                </a>\n            </Popover>\n            <Modal\n                id='dt_settings_modal'\n                className='modal-settings'\n                enableApp={enableApp}\n                is_open={is_settings_visible}\n                disableApp={disableApp}\n                title={localize('Platform settings')}\n                toggleModal={toggleSettings}\n                height='616px'\n                width='736px'\n            >\n                <ModalContent settings_extension={settings_extension} />\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings: PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import React from 'react';\nimport { Popover, Icon } from '@deriv/components';\nimport { getDerivComLink } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst HelpCentre = () => {\n    return (\n        <Popover\n            className='footer__link'\n            classNameBubble='help-centre__tooltip'\n            alignment='top'\n            message={localize('Help centre')}\n        >\n            <a\n                href={getDerivComLink('/help-centre/')}\n                id='dt_help_centre'\n                target='_blank'\n                rel='noopener noreferrer'\n                aria-label={localize('Help centre')}\n            >\n                <Icon icon='IcHelpCentre' className='footer__icon' />\n            </a>\n        </Popover>\n    );\n};\n\nexport { HelpCentre };\n","import React from 'react';\nimport { Icon, Popover } from '@deriv/components';\nimport { getDerivComLink } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const ResponsibleTrading = () => (\n    <Popover alignment='top' message={localize('Responsible trading')} className='footer__link'>\n        <a href={getDerivComLink('/responsible-trading')} target='_blank' rel='nofollow noreferrer'>\n            <Icon icon='IcVerification' className='footer__icon ic-deriv__icon' />\n        </a>\n    </Popover>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon, Popover } from '@deriv/components';\nimport { routes, getDerivComLink } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const AccountLimits = () => (\n    <Popover alignment='top' message={localize('Account limits')} className='footer__link'>\n        <Link to={routes.account_limits} href={getDerivComLink('/')}>\n            <Icon icon='IcAccountLimits' className='footer__icon ic-deriv__icon' />\n        </Link>\n    </Popover>\n);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\" {...props}><g fill=\"none\"><path fill=\"#D1010E\" d=\"M25.04 47.46V63.2l-8.3-22.74c-.94-2.6 1.32-.92 1.32-.92l4.73 3.51a5.94 5.94 0 012.25 4.42m-8.3 38.48l8.3-22.75-23.54 8c-2.68.91-.95-1.26-.95-1.26L4.2 65.4a6.34 6.34 0 014.57-2.18 6.34 6.34 0 01-4.57-2.17L.56 56.44s-1.73-2.18.95-1.26l23.54 8v15.74a5.93 5.93 0 01-2.25 4.42l-4.74 3.5s-2.25 1.68-1.3-.9\" /><path fill=\"#818084\" d=\"M118.9 64.69v4.85a7.5 7.5 0 01-3.81.94c-2 0-3.26-.88-3.26-2.7A2.4 2.4 0 01113 65.5a6.55 6.55 0 013.1-.72l2.8-.1zm1.96 11.65h6.84a19.57 19.57 0 01-.44-5.13V59.5c0-6.36-3.3-9.94-11.37-9.94-3.74-.02-7.43.85-10.77 2.53l2.6 5.25a15.02 15.02 0 016.62-1.6c2.81 0 4.58 1 4.58 3.43v.27l-4.14.17a16.3 16.3 0 00-6.9 1.6 7.46 7.46 0 00-4.37 7.12c0 5.02 3.75 8.56 8.89 8.56 2.7.04 5.3-.95 7.29-2.76l1.17 2.2zm-32.8-12.7c-2.5 0-3.7-1.98-3.7-4 0-2.76 1.6-4 3.6-4 2.53 0 3.8 2.1 3.8 4.09 0 2.59-1.6 3.92-3.7 3.92m.56 20.15c-4.15 0-6.52-1.49-6.52-3.64a3.26 3.26 0 011.1-2.4c2.66 1.38 11 .6 11 3.7 0 1.6-2.65 2.4-5.6 2.4m-1.22 5.6c9.94 0 14.64-4.25 14.64-8.95 0-9.8-17.16-5.51-17.16-9.97-.01-.4.07-.79.22-1.16.98.24 1.98.35 2.98.33 6.68 0 11.38-3.8 11.38-9.83a9.6 9.6 0 00-1.88-5.8 5.49 5.49 0 011.54-.22c.75.01 1.49.1 2.21.28l1.55-5.75a18.88 18.88 0 00-1.88-.11c-3.76 0-5.47.94-6.96 2.32-.23.22-.39.33-.67.17a11.1 11.1 0 00-5.46-1.22c-8.07 0-11.32 5.25-11.32 9.83 0 3.43 1.54 6.63 4.58 8.23-2.1 1.16-3.48 2.98-3.48 4.8a3.6 3.6 0 001.71 3.2 6.5 6.5 0 00-4.64 6.01c0 4.36 4.42 7.79 12.65 7.79M30.6 76.32h8.35V58.45a8.88 8.88 0 015.02-1.71c3.09 0 3.42 2.2 3.42 4.75v14.85h8.34v-17.9a8.71 8.71 0 014.97-1.7c3.1 0 3.48 2.1 3.48 4.64v14.96h8.33V59.22c0-7.28-4.44-9.66-9.24-9.66-2.7 0-6.02 1.16-9.17 3.7-1.39-2.32-3.81-3.7-7.12-3.7-3.15 0-6.13 1.49-8.56 3.31l-.81-2.67h-7v26.12z\" /></g></svg>);","import React from 'react';\nimport { Icon, Modal, Popover } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport MGALogo from 'Assets/SvgComponents/footer/mga.svg';\n\nconst MLTRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <div className='footer-regulatory-information__icon'>\n            <MGALogo />\n        </div>\n        <p>\n            <Localize\n                i18n_default_text='Synthetic indices in the EU and the UK are offered by Deriv (Europe) Ltd, W Business Centre, Level 3, Triq Dun Karm, Birkirkara BKR 9033, Malta, licensed and regulated respectively by the Malta Gaming Authority in Malta <0>(view licence)</0> and the UK Gambling Commission <1>(view licence)</1>. For more information, please read our <2>Terms and conditions</2>.'\n                components={[\n                    <a\n                        href='https://deriv.com/MGA_licence.pdf'\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                    />,\n                    <a\n                        href='https://secure.gamblingcommission.gov.uk/PublicRegister/Search/Detail/39495'\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={1}\n                        className='footer-regulatory-information__link'\n                    />,\n                    <a\n                        href='https://deriv.com/terms-and-conditions'\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={2}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n            />\n        </p>\n    </div>\n);\n\nconst MXRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <p>\n            <Localize\n                i18n_default_text='Synthetic indices in the Isle of Man and the UK are offered by Deriv (MX) Ltd, licensed and regulated respectively by the Gambling Supervision Commission in the Isle of Man and the Gambling Commission in the UK <0>(view licence)</0>.'\n                components={[\n                    <a\n                        href='https://secure.gamblingcommission.gov.uk/PublicRegister/Search/Detail/39172'\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n            />\n        </p>\n    </div>\n);\n\nexport const RegulatoryInformation = ({ standpoint, is_eu }) => {\n    const [should_show_modal, showModal] = React.useState(false);\n    if (!is_eu) return null;\n    return (\n        <div className='footer__link'>\n            <Popover alignment='top' message={localize('Regulatory Information')}>\n                <a onClick={() => showModal(true)}>\n                    <Icon icon='IcRegulatoryInformation' className='footer__icon ic-deriv__icon' />\n                </a>\n            </Popover>\n            <Modal\n                is_open={should_show_modal}\n                small\n                has_close_icon\n                toggleModal={() => showModal(false)}\n                title={localize('Regulatory Information')}\n            >\n                {standpoint.iom && <MXRegulatoryInformation />}\n                {standpoint.malta && <MLTRegulatoryInformation />}\n            </Modal>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Popover, Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport BinarySocket from '_common/base/socket_base';\nimport { connect } from 'Stores/connect';\n\nconst LiveChat = ({\n    email,\n    is_logged_in,\n    is_mobile_drawer,\n    loginid,\n    landing_company_shortcode,\n    currency,\n    residence,\n}) => {\n    const [is_livechat_interactive, setLiveChatInteractive] = React.useState(false);\n\n    React.useEffect(() => {\n        if (window.LiveChatWidget) {\n            BinarySocket.wait('get_settings').then(response => {\n                const get_settings = response.get_settings || {};\n                const { first_name, last_name } = get_settings;\n\n                if (email) window.LiveChatWidget.call('set_customer_email', email);\n                if (first_name && last_name)\n                    window.LiveChatWidget.call('set_customer_name', `${first_name} ${last_name}`);\n            });\n\n            window.LiveChatWidget.on('ready', () => {\n                setLiveChatInteractive(true);\n            });\n            window.LiveChatWidget.on('visibility_changed', ({ visibility }) => {\n                // only visible to CS\n                let session_variables = { loginid: '', landing_company_shortcode: '', currency: '', residence: '' };\n\n                if (visibility === 'maximized' && is_logged_in) {\n                    session_variables = {\n                        ...(loginid && { loginid }),\n                        ...(landing_company_shortcode && { landing_company_shortcode }),\n                        ...(currency && { currency }),\n                        ...(residence && { residence }),\n                    };\n\n                    window.LiveChatWidget.call('set_session_variables', session_variables);\n                }\n\n                if (visibility === 'maximized' && !is_logged_in) {\n                    window.LiveChatWidget.call('set_customer_email', ' ');\n                    window.LiveChatWidget.call('set_customer_name', ' ');\n                    window.LiveChatWidget.call('set_session_variables', session_variables);\n                }\n            });\n        }\n    }, []);\n\n    return (\n        <>\n            {is_livechat_interactive && (\n                <>\n                    {is_mobile_drawer ? (\n                        <div\n                            className='livechat gtm-deriv-livechat'\n                            onClick={() => {\n                                window.LC_API.open_chat_window();\n                            }}\n                        >\n                            <Icon icon='IcLiveChat' className='livechat__icon' />\n                            <p className='livechat__title'>{localize('Live chat')}</p>\n                        </div>\n                    ) : (\n                        <Popover\n                            className='footer__link'\n                            classNameBubble='help-centre__tooltip'\n                            alignment='top'\n                            message={localize('Live chat')}\n                        >\n                            <Icon\n                                icon='IcLiveChat'\n                                className='footer__icon gtm-deriv-livechat'\n                                onClick={() => {\n                                    window.LC_API.open_chat_window();\n                                }}\n                            />\n                        </Popover>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default connect(({ client }) => ({\n    email: client.email,\n    is_logged_in: client.is_logged_in,\n    loginid: client.loginid,\n    landing_company_shortcode: client.landing_company_shortcode,\n    currency: client.currency,\n    residence: client.residence,\n}))(LiveChat);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { toGMTFormat } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\n\nconst ServerTime = ({ is_mobile, server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div\n            className={classNames('server-time', {\n                'server-time--is-mobile': is_mobile,\n            })}\n        >\n            {gmt_time}\n        </div>\n    );\n};\n\nServerTime.propTypes = {\n    is_mobile: PropTypes.bool,\n    server_time: PropTypes.object,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ServerTime);\n","import classNames from 'classnames';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    AccountLimits,\n    EndpointNote,\n    GoToDeriv,\n    HelpCentre,\n    NetworkStatus,\n    RegulatoryInformation,\n    ResponsibleTrading,\n    ToggleFullScreen,\n    ToggleSettings,\n} from 'App/Components/Layout/Footer';\nimport LiveChat from 'App/Components/Elements/live-chat.jsx';\nimport { connect } from 'Stores/connect';\nimport ServerTime from '../server-time.jsx';\n\nconst FooterIconSeparator = () => <div className='footer-icon-separator' />;\n\nconst Footer = ({\n    enableApp,\n    footer_extension,\n    is_app_disabled,\n    is_eu,\n    is_eu_enabled, // TODO [deriv-eu] remove is_eu_enabled check once EU is ready for production\n    is_route_modal_on,\n    is_settings_modal_on,\n    disableApp,\n    toggleSettingsModal,\n    settings_extension,\n    standpoint,\n}) => (\n    <footer\n        className={classNames('footer', {\n            'footer--is-disabled': is_app_disabled || is_route_modal_on,\n        })}\n    >\n        {footer_extension && <div className='footer__links footer__links--left'>{footer_extension}</div>}\n        <EndpointNote />\n        <NetworkStatus />\n        <ServerTime />\n        <div className='footer__links'>\n            <LiveChat />\n            <FooterIconSeparator />\n            <GoToDeriv />\n            <ResponsibleTrading />\n            <AccountLimits />\n            {is_eu_enabled && (\n                <RegulatoryInformation\n                    standpoint={\n                        standpoint // TODO [deriv-eu] remove is_eu_enabled check once EU is ready for production\n                    }\n                    is_eu={is_eu}\n                />\n            )}\n            <FooterIconSeparator />\n            <HelpCentre />\n            <ToggleSettings\n                is_settings_visible={is_settings_modal_on}\n                toggleSettings={toggleSettingsModal}\n                disableApp={disableApp}\n                enableApp={enableApp}\n                settings_extension={settings_extension}\n            />\n            <ToggleFullScreen />\n        </div>\n    </footer>\n);\n\nFooter.propTypes = {\n    is_app_disabled: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_route_modal_on: PropTypes.bool,\n    is_settings_modal_on: PropTypes.bool,\n    location: PropTypes.object,\n    toggleSettingsModal: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(({ client, ui }) => ({\n        enableApp: ui.enableApp,\n        footer_extension: ui.footer_extension,\n        settings_extension: ui.settings_extension,\n        is_app_disabled: ui.is_app_disabled,\n        is_route_modal_on: ui.is_route_modal_on,\n        is_logged_in: client.is_logged_in,\n        is_eu_enabled: ui.is_eu_enabled, // TODO [deriv-eu] remove is_eu_enabled check once EU is ready for production\n        is_eu: client.is_eu,\n        standpoint: client.standpoint,\n        is_loading: ui.is_loading,\n        is_settings_modal_on: ui.is_settings_modal_on,\n        disableApp: ui.disableApp,\n        toggleSettingsModal: ui.toggleSettingsModal,\n    }))(Footer)\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length && (\n            <div className='header__menu-links'>\n                {items.map((item, idx) =>\n                    item.login_only && item.login_only !== is_logged_in ? null : (\n                        <BinaryLink\n                            id={item.id}\n                            key={idx}\n                            to={item.link_to || undefined}\n                            onClick={item.onClick || undefined}\n                            href={item.href || undefined}\n                            className='header__menu-link'\n                            active_class='header__menu-link--active'\n                        >\n                            <React.Fragment>\n                                {item.text && (\n                                    <span title={item.text()} className='header__menu-link-text'>\n                                        {item.icon}\n                                        {item.text()}\n                                        {item.logo}\n                                    </span>\n                                )}\n                                {item.image && (\n                                    <span className='header__menu-link-text'>\n                                        {item.image}\n                                        {item.logo}\n                                    </span>\n                                )}\n                            </React.Fragment>\n                        </BinaryLink>\n                    )\n                )}\n            </div>\n        )}\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon: PropTypes.shape({\n                className: PropTypes.string,\n            }),\n            is_logged_in: PropTypes.bool,\n            link_to: PropTypes.string,\n            text: PropTypes.function,\n        })\n    ),\n};\n\nexport { MenuLinks };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize } from '@deriv/translations';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        id='dt_login_button'\n        className={className}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n        tertiary\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { redirectToSignUp } from '_common/base/login';\nimport { localize } from '@deriv/translations';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        id='dt_signup_button'\n        className={className}\n        has_effect\n        text={localize('Sign up')}\n        onClick={redirectToSignUp}\n        primary\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst EmptyNotification = () => (\n    <div className='notifications-empty__container'>\n        <div className='notifications-empty'>\n            <Icon icon='IcBox' className='notifications-empty__icon' size={64} color='secondary' />\n            <div className='notifications-empty__content'>\n                <h4 className='notifications-empty__header'>{localize('No notifications')}</h4>\n                <span className='notifications-empty__message'>\n                    {localize('You have yet to receive any notifications')}\n                </span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button, DesktopWrapper, Icon, MobileDialog, MobileWrapper, ThemedScrollbars } from '@deriv/components';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { connect } from 'Stores/connect';\nimport { localize } from '@deriv/translations';\nimport { toTitleCase, isEmptyObject } from '@deriv/shared';\n\nimport { EmptyNotification } from 'App/Components/Elements/Notifications/empty-notification.jsx';\n\nclass NotificationsDialog extends React.Component {\n    setWrapperRef = node => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = event => {\n        const notifications_toggle_btn = !event.target.classList.contains('notifications-toggle__icon-wrapper');\n        if (\n            this.wrapper_ref &&\n            !this.wrapper_ref.contains(event.target) &&\n            this.props.is_visible &&\n            notifications_toggle_btn\n        ) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside, {\n            passive: true,\n        });\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    render() {\n        const notifications_list_el = (\n            <React.Fragment>\n                {this.props.notifications && this.props.notifications.length ? (\n                    this.props.notifications.map((item, idx) => (\n                        <div className='notifications-item' key={idx}>\n                            <h2 className='notifications-item__title'>\n                                {item.type && (\n                                    <Icon\n                                        icon={\n                                            item.type === 'info' || item.type === 'contract_sold'\n                                                ? 'IcAlertInfo'\n                                                : `IcAlert${toTitleCase(item.type)}`\n                                        }\n                                        className={classNames('notifications-item__title-icon', {\n                                            [`notifications-item__title-icon--${item.type}`]: item.type,\n                                        })}\n                                    />\n                                )}\n                                {item.header}\n                            </h2>\n                            <div className='notifications-item__message'>{item.message}</div>\n                            {!isEmptyObject(item.action) && (\n                                <>\n                                    {item.action.route ? (\n                                        <BinaryLink\n                                            onClick={this.props.toggleDialog}\n                                            className={classNames(\n                                                'dc-btn',\n                                                'dc-btn--secondary',\n                                                'notifications-item__cta-button'\n                                            )}\n                                            to={item.action.route}\n                                        >\n                                            <span className='dc-btn__text'>{item.action.text}</span>\n                                        </BinaryLink>\n                                    ) : (\n                                        <Button\n                                            className={classNames(\n                                                'dc-btn--secondary',\n                                                'notifications-item__cta-button'\n                                            )}\n                                            onClick={item.action.onClick}\n                                            text={item.action.text}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </div>\n                    ))\n                ) : (\n                    <EmptyNotification />\n                )}\n            </React.Fragment>\n        );\n\n        const is_empty = !(this.props.notifications && this.props.notifications.length);\n        const notifications_dialog_el = (\n            <div className='notifications-dialog' ref={this.setWrapperRef}>\n                <div className='notifications-dialog__header'>\n                    <h2 className='notifications-dialog__header-text'>{localize('Notifications')}</h2>\n                </div>\n                <div\n                    className={classNames('notifications-dialog__content', {\n                        'notifications-dialog__content--empty': is_empty,\n                    })}\n                >\n                    <DesktopWrapper>\n                        {is_empty ? (\n                            notifications_list_el\n                        ) : (\n                            <ThemedScrollbars>{notifications_list_el}</ThemedScrollbars>\n                        )}\n                    </DesktopWrapper>\n                    <MobileWrapper>{notifications_list_el}</MobileWrapper>\n                </div>\n            </div>\n        );\n\n        return (\n            <React.Fragment>\n                <MobileWrapper>\n                    <MobileDialog\n                        portal_element_id='modal_root'\n                        title={localize('Notifications')}\n                        wrapper_classname='notifications-mobile-dialog'\n                        visible={this.props.is_visible}\n                        onClose={this.props.toggleDialog}\n                    >\n                        {notifications_dialog_el}\n                    </MobileDialog>\n                </MobileWrapper>\n                <DesktopWrapper>\n                    <CSSTransition\n                        in={this.props.is_visible}\n                        classNames={{\n                            enter: 'notifications-dialog--enter',\n                            enterDone: 'notifications-dialog--enter-done',\n                            exit: 'notifications-dialog--exit',\n                        }}\n                        timeout={150}\n                        unmountOnExit\n                    >\n                        {notifications_dialog_el}\n                    </CSSTransition>\n                </DesktopWrapper>\n            </React.Fragment>\n        );\n    }\n}\n\nNotificationsDialog.propTypes = {\n    is_visible: PropTypes.bool,\n    notifications: PropTypes.array,\n    toggleDialog: PropTypes.func,\n};\n\nexport default connect(({ ui }) => ({\n    notifications: ui.notifications,\n}))(NotificationsDialog);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Counter, DesktopWrapper, Icon, MobileWrapper, Popover } from '@deriv/components';\nimport NotificationsDialog from 'App/Containers/NotificationsDialog';\nimport 'Sass/app/modules/notifications-dialog.scss';\n\nconst ToggleNotificationsDrawer = ({ count, is_visible, toggleDialog, tooltip_message }) => {\n    const notifications_toggler_el = (\n        <div\n            className={classNames('notifications-toggle__icon-wrapper', {\n                'notifications-toggle__icon-wrapper--active': is_visible,\n            })}\n            onClick={toggleDialog}\n        >\n            <Icon className='notifications-toggle__icon' icon='IcBell' />\n            {!!count && <Counter count={count} className='notifications-toggle__step' />}\n        </div>\n    );\n\n    return (\n        <div\n            className={classNames('notifications-toggle', {\n                'notifications-toggle--active': is_visible,\n            })}\n        >\n            <DesktopWrapper>\n                <Popover classNameBubble='notifications-toggle__tooltip' alignment='bottom' message={tooltip_message}>\n                    {notifications_toggler_el}\n                </Popover>\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </DesktopWrapper>\n            <MobileWrapper>\n                {notifications_toggler_el}\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </MobileWrapper>\n        </div>\n    );\n};\n\nexport default ToggleNotificationsDrawer;\n","import * as PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, DesktopWrapper, Icon, MobileWrapper, Popover } from '@deriv/components';\nimport { routes, formatMoney } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { LoginButton } from './login-button.jsx';\nimport { SignupButton } from './signup-button.jsx';\nimport ToggleNotifications from './toggle-notifications.jsx';\nimport { BinaryLink } from '../../Routes';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst AccountInfo = React.lazy(() =>\n    import(/* webpackChunkName: \"account-info\", webpackPreload: true */ 'App/Components/Layout/Header/account-info.jsx')\n);\n\nexport class AccountActions extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return (\n            nextProps.is_acc_switcher_disabled !== this.props.is_acc_switcher_disabled ||\n            nextProps.balance !== this.props.balance ||\n            nextProps.currency !== this.props.currency ||\n            nextProps.is_acc_switcher_on !== this.props.is_acc_switcher_on ||\n            nextProps.is_notifications_visible !== this.props.is_notifications_visible ||\n            nextProps.is_logged_in !== this.props.is_logged_in ||\n            nextProps.is_virtual !== this.props.is_virtual ||\n            nextProps.loginid !== this.props.loginid ||\n            nextProps.notifications_count !== this.props.notifications_count\n        );\n    }\n\n    render() {\n        const {\n            acc_switcher_disabled_message,\n            balance,\n            currency,\n            disableApp,\n            enableApp,\n            is_acc_switcher_on,\n            is_acc_switcher_disabled,\n            is_logged_in,\n            is_notifications_visible,\n            is_virtual,\n            notifications_count,\n            onClickDeposit,\n            openRealAccountSignup,\n            toggleAccountsDialog,\n            toggleNotifications,\n        } = this.props;\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <MobileWrapper>\n                        <ToggleNotifications\n                            count={notifications_count}\n                            is_visible={is_notifications_visible}\n                            toggleDialog={toggleNotifications}\n                        />\n                        <React.Suspense fallback={<div />}>\n                            <AccountInfo\n                                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                                balance={\n                                    typeof balance === 'undefined' ? balance : formatMoney(currency, balance, true)\n                                }\n                                is_disabled={is_acc_switcher_disabled}\n                                disableApp={disableApp}\n                                enableApp={enableApp}\n                                is_virtual={is_virtual}\n                                currency={currency}\n                                is_dialog_on={is_acc_switcher_on}\n                                toggleDialog={toggleAccountsDialog}\n                            />\n                        </React.Suspense>\n                    </MobileWrapper>\n                    <DesktopWrapper>\n                        <ToggleNotifications\n                            count={notifications_count}\n                            is_visible={is_notifications_visible}\n                            toggleDialog={toggleNotifications}\n                            tooltip_message={localize('View notifications')}\n                        />\n                        <Popover\n                            classNameBubble='account-settings-toggle__tooltip'\n                            alignment='bottom'\n                            message={localize('Manage account settings')}\n                        >\n                            <BinaryLink className='account-settings-toggle' to={routes.personal_details}>\n                                <Icon icon='IcUserOutline' />\n                            </BinaryLink>\n                        </Popover>\n                        <React.Suspense fallback={<div />}>\n                            <AccountInfo\n                                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                                balance={\n                                    typeof balance === 'undefined' ? balance : formatMoney(currency, balance, true)\n                                }\n                                is_disabled={is_acc_switcher_disabled}\n                                is_virtual={is_virtual}\n                                currency={currency}\n                                is_dialog_on={is_acc_switcher_on}\n                                toggleDialog={toggleAccountsDialog}\n                            />\n                        </React.Suspense>\n                        {!is_virtual && !currency && (\n                            <div className='set-currency'>\n                                <Button\n                                    onClick={openRealAccountSignup}\n                                    has_effect\n                                    type='button'\n                                    text={localize('Set currency')}\n                                    primary\n                                />\n                            </div>\n                        )}\n                        {currency && (\n                            <Button\n                                className='acc-info__button'\n                                has_effect\n                                text={localize('Deposit')}\n                                onClick={onClickDeposit}\n                                primary\n                            />\n                        )}\n                    </DesktopWrapper>\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' />\n            </React.Fragment>\n        );\n    }\n}\n\nAccountActions.propTypes = {\n    acc_switcher_disabled_message: PropTypes.any,\n    balance: PropTypes.any,\n    currency: PropTypes.any,\n    is_acc_switcher_disabled: PropTypes.any,\n    disableApp: PropTypes.any,\n    enableApp: PropTypes.any,\n    is_acc_switcher_on: PropTypes.any,\n    is_logged_in: PropTypes.any,\n    is_notifications_visible: PropTypes.any,\n    is_virtual: PropTypes.any,\n    notifications_count: PropTypes.any,\n    onClickDeposit: PropTypes.func,\n    openRealAccountSignup: PropTypes.func,\n    toggleAccountsDialog: PropTypes.any,\n    toggleNotifications: PropTypes.any,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div100vhContainer, Icon } from '@deriv/components';\nimport { routes, isDesktop, isMobile } from '@deriv/shared';\n\nimport { BinaryLink } from 'App/Components/Routes';\nimport 'Sass/app/_common/components/platform-dropdown.scss';\n\nconst PlatformBox = ({ platform: { icon, title, description } }) => (\n    <>\n        <div className='platform-dropdown__list-platform-background' />\n        <Icon className='platform-dropdown__list-platform-icon' icon={icon} size={32} />\n\n        <div className='platform-dropdown__list-platform-details'>\n            <p className='platform-dropdown__list-platform-title'>{title()}</p>\n            <p className='platform-dropdown__list-platform-description'>{description()}</p>\n        </div>\n    </>\n);\nclass PlatformDropdown extends React.PureComponent {\n    handleClickOutside = event => {\n        if (!event.target.closest('.platform-dropdown__list') && !event.target.closest('.platform-switcher')) {\n            this.props.closeDrawer();\n        }\n    };\n\n    componentWillMount() {\n        window.addEventListener('popstate', this.props.closeDrawer);\n        if (isDesktop()) document.addEventListener('click', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('popstate', this.props.closeDrawer);\n        if (isDesktop()) document.removeEventListener('click', this.handleClickOutside);\n    }\n\n    render() {\n        const { platform_config, closeDrawer } = this.props;\n\n        const platform_dropdown = (\n            <div className='platform-dropdown'>\n                <Div100vhContainer className='platform-dropdown__list' height_offset='148px' is_disabled={isDesktop()}>\n                    {platform_config.map((platform, idx) => (\n                        <div key={idx} onClick={closeDrawer}>\n                            {platform.link_to !== undefined ? (\n                                <BinaryLink\n                                    to={platform.link_to}\n                                    // This is here because in routes-config it needs to have children, but not in menu\n                                    exact={platform.link_to === routes.trade}\n                                    className='platform-dropdown__list-platform'\n                                >\n                                    <PlatformBox platform={platform} />\n                                </BinaryLink>\n                            ) : (\n                                <a href={platform.href} className='platform-dropdown__list-platform'>\n                                    <PlatformBox platform={platform} />\n                                </a>\n                            )}\n                        </div>\n                    ))}\n                </Div100vhContainer>\n            </div>\n        );\n\n        if (isMobile()) {\n            return ReactDOM.createPortal(platform_dropdown, document.getElementById('mobile_platform_switcher'));\n        }\n        return ReactDOM.createPortal(platform_dropdown, document.getElementById('deriv_app'));\n    }\n}\n\nPlatformDropdown.propTypes = {\n    platform_configs: PropTypes.array,\n};\n\nexport { PlatformDropdown };\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '@deriv/components';\nimport { getPlatformHeader, getPlatformIcon, isMobile } from '@deriv/shared';\n\nimport { PlatformSwitcherLoader } from './Components/Preloader/platform-switcher.jsx';\nimport { PlatformDropdown } from './platform-dropdown.jsx';\nimport 'Sass/app/_common/components/platform-switcher.scss';\n\nclass PlatformSwitcher extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = { is_open: false };\n    }\n\n    toggleDrawer = () => this.setState(state => ({ is_open: !state.is_open }));\n    closeDrawer = () => {\n        this.setState({ is_open: false }, () => {\n            if (typeof this.props.toggleDrawer === 'function') {\n                this.props.toggleDrawer();\n            }\n        });\n    };\n\n    render = () => {\n        return this.props.app_routing_history.length === 0 ? (\n            <div\n                className={classNames('platform-switcher__preloader', {\n                    'platform-switcher__preloader--is-mobile': isMobile(),\n                })}\n            >\n                <PlatformSwitcherLoader is_mobile={isMobile()} speed={3} />\n            </div>\n        ) : (\n            <React.Fragment>\n                <div\n                    className={classNames(\n                        'platform-switcher',\n                        { 'platform-switcher--active': this.state.is_open },\n                        { 'platform-switcher--is-mobile': isMobile() }\n                    )}\n                    onClick={this.toggleDrawer}\n                >\n                    <Icon\n                        className='platform-switcher__icon'\n                        icon={getPlatformIcon(this.props.app_routing_history)}\n                        size={32}\n                    />\n                    <h1 className='platform-switcher__header'>{getPlatformHeader(this.props.app_routing_history)}</h1>\n                    <Icon className='platform-switcher__arrow' icon='IcChevronDownBold' />\n                </div>\n                <CSSTransition\n                    mountOnEnter\n                    appear\n                    in={this.state.is_open}\n                    classNames={{\n                        enterDone: 'platform-dropdown--enter-done',\n                    }}\n                    timeout={!isMobile() && this.state.is_open ? 0 : 250}\n                    unmountOnExit\n                >\n                    <PlatformDropdown platform_config={this.props.platform_config} closeDrawer={this.closeDrawer} />\n                </CSSTransition>\n            </React.Fragment>\n        );\n    };\n}\n\nPlatformSwitcher.propTypes = {\n    platform_config: PropTypes.array,\n};\n\nexport default withRouter(PlatformSwitcher);\n","import { routes } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\n\nconst platform_config = [\n    {\n        icon: 'IcBrandDtrader',\n        title: () => localize('DTrader'),\n        description: () => localize('A whole new trading experience on a powerful yet easy to use platform.'),\n        link_to: routes.trade,\n    },\n    {\n        icon: 'IcBrandDbot',\n        title: () => localize('DBot'),\n        description: () => localize('Automated trading at your fingertips. No coding needed.'),\n        link_to: routes.bot,\n    },\n    {\n        icon: 'IcBrandDmt5',\n        title: () => localize('DMT5'),\n        description: () => localize('The platform of choice for professionals worldwide.'),\n        link_to: routes.mt5,\n    },\n    {\n        icon: 'IcBrandSmarttrader',\n        title: () => localize('SmartTrader'),\n        description: () => localize('Trade the world’s markets with our popular user-friendly platform'),\n        href: routes.smarttrader,\n    },\n];\n\nexport default platform_config;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { redirectToLogin, redirectToSignUp } from '_common/base/login';\nimport 'Sass/modal-login-prompt.scss';\n\nconst ModalLoginPrompt = () => (\n    <div className='modal-login-prompt'>\n        <h2>{localize('This is only available for existing clients.')}</h2>\n        <p>{localize('If you have an active account, please log in to continue. Otherwise, please sign up.')}</p>\n\n        <div>\n            <Button secondary text={localize('Log In')} onClick={redirectToLogin} />\n            <Button primary text={localize('Sign Up')} onClick={redirectToSignUp} />\n        </div>\n    </div>\n);\n\nexport default ModalLoginPrompt;\n","/**\n * Takes validation result of a form, sets warnings on component's state and pass errors down to the form\n *\n * @param {object} values - object containing form field values and validations\n * @return {object} object containing errors and warnings\n */\nfunction splitValidationResultTypes(values) {\n    const warnings = {};\n    const errors = {};\n    Object.keys(values).forEach(field => {\n        const item = values[field];\n        if (Array.isArray(item)) {\n            if (item[0] === 'warn') {\n                warnings[field] = item[1];\n            } else if (item[0] === 'error') {\n                errors[field] = item[1];\n            }\n        }\n    });\n    return { warnings, errors };\n}\n\nexport { splitValidationResultTypes };\n","import { Formik, Field } from 'formik';\nimport React from 'react';\nimport {\n    Modal,\n    Autocomplete,\n    AutoHeightWrapper,\n    DesktopWrapper,\n    Div100vhContainer,\n    FormSubmitButton,\n    Input,\n    MobileWrapper,\n    ThemedScrollbars,\n    SelectNative,\n} from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { splitValidationResultTypes } from 'App/Containers/RealAccountSignup/helpers/utils';\nimport { screen_height_sm_threshold } from 'App/Containers/RealAccountSignup/helpers/constants';\n\nconst InputField = props => {\n    return (\n        <Field name={props.name}>\n            {({ field, form: { errors, touched } }) => (\n                <React.Fragment>\n                    <Input\n                        type='text'\n                        autoComplete='off'\n                        maxLength='30'\n                        error={touched[field.name] && errors[field.name]}\n                        {...field}\n                        {...props}\n                    />\n                </React.Fragment>\n            )}\n        </Field>\n    );\n};\n\nconst getLocation = (location_list, value, type) => {\n    const location_obj = location_list.find(\n        location => location[type === 'text' ? 'value' : 'text'].toLowerCase() === value.toLowerCase()\n    );\n\n    if (location_obj) return location_obj[type];\n    return '';\n};\n\nclass AddressDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_fetched_states_list: false,\n            address_state_to_display: '',\n        };\n        // TODO: Find a better solution for handling no-op instead of using is_mounted flags\n        this.is_mounted = false;\n    }\n\n    async componentDidMount() {\n        this.is_mounted = true;\n        await this.props.fetchStatesList();\n        if (this.is_mounted)\n            this.setState({\n                has_fetched_states_list: true,\n                address_state_to_display: getLocation(this.props.states_list, this.props.value.address_state, 'text'),\n            });\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n    }\n\n    handleCancel = values => {\n        this.props.onSave(this.props.index, values);\n        this.props.onCancel();\n    };\n\n    get should_render_address_state() {\n        return this.state.has_fetched_states_list && this.props.states_list.length > 0;\n    }\n\n    handleValidate = values => {\n        const { errors } = splitValidationResultTypes(this.props.validate(values));\n        return errors;\n    };\n\n    render() {\n        const padding_bottom = window.innerHeight < screen_height_sm_threshold ? '10rem' : '12rem';\n        return (\n            <Formik\n                initialValues={this.props.value}\n                validate={this.handleValidate}\n                validateOnMount\n                onSubmit={(values, actions) => {\n                    if (isDesktop() && values.address_state) {\n                        values.address_state = this.props.states_list.length\n                            ? this.state.address_state_to_display\n                                ? getLocation(this.props.states_list, this.state.address_state_to_display, 'value')\n                                : getLocation(this.props.states_list, values.address_state, 'value')\n                            : values.address_state;\n                    }\n                    this.props.onSubmit(this.props.index, values, actions.setSubmitting);\n                }}\n            >\n                {({ handleSubmit, isSubmitting, errors, values, setFieldValue }) => (\n                    <AutoHeightWrapper default_height={200} height_offset={isDesktop() ? 192 : null}>\n                        {({ setRef, height }) => (\n                            <form ref={setRef} onSubmit={handleSubmit}>\n                                <Div100vhContainer\n                                    className='details-form'\n                                    height_offset='179px'\n                                    is_disabled={isDesktop()}\n                                >\n                                    <p className='details-form__description'>\n                                        <strong>\n                                            <Localize i18n_default_text='Only use an address for which you have proof of residence - ' />\n                                        </strong>\n                                        <Localize i18n_default_text='a recent utility bill (e.g. electricity, water, gas, landline, or internet), bank statement, or government-issued letter with your name and this address.' />\n                                    </p>\n                                    <ThemedScrollbars is_bypassed={isMobile()} height={height}>\n                                        <div\n                                            className='details-form__elements'\n                                            style={{ paddingBottom: isDesktop() ? padding_bottom : null }}\n                                        >\n                                            <InputField\n                                                name='address_line_1'\n                                                required={this.props.is_svg}\n                                                label={\n                                                    this.props.is_svg\n                                                        ? localize('First line of address*')\n                                                        : localize('First line of address')\n                                                }\n                                                placeholder={localize('First line of address')}\n                                            />\n                                            <InputField\n                                                name='address_line_2'\n                                                label={localize('Second line of address')}\n                                                placeholder={localize('Second line of address')}\n                                            />\n                                            <InputField\n                                                name='address_city'\n                                                required={this.props.is_svg}\n                                                label={\n                                                    this.props.is_svg ? localize('Town/City*') : localize('Town/City')\n                                                }\n                                                placeholder={localize('Town/City')}\n                                            />\n                                            {this.should_render_address_state && (\n                                                <Field name='address_state'>\n                                                    {({ field }) => (\n                                                        <>\n                                                            <DesktopWrapper>\n                                                                <Autocomplete\n                                                                    {...field}\n                                                                    {...(this.state.address_state_to_display && {\n                                                                        value: this.state.address_state_to_display,\n                                                                    })}\n                                                                    data-lpignore='true'\n                                                                    autoComplete='new-password' // prevent chrome autocomplete\n                                                                    type='text'\n                                                                    label={localize('State/Province')}\n                                                                    list_items={this.props.states_list}\n                                                                    onItemSelection={({ value, text }) => {\n                                                                        setFieldValue(\n                                                                            'address_state',\n                                                                            value ? text : '',\n                                                                            true\n                                                                        );\n                                                                        this.setState({\n                                                                            address_state_to_display: '',\n                                                                        });\n                                                                    }}\n                                                                />\n                                                            </DesktopWrapper>\n                                                            <MobileWrapper>\n                                                                <SelectNative\n                                                                    placeholder={localize('Please select')}\n                                                                    label={localize('State/Province')}\n                                                                    value={values.address_state}\n                                                                    list_items={this.props.states_list}\n                                                                    use_text={true}\n                                                                    onChange={e =>\n                                                                        setFieldValue(\n                                                                            'address_state',\n                                                                            e.target.value,\n                                                                            true\n                                                                        )\n                                                                    }\n                                                                />\n                                                            </MobileWrapper>\n                                                        </>\n                                                    )}\n                                                </Field>\n                                            )}\n                                            <InputField\n                                                name='address_postcode'\n                                                required={this.props.is_gb_residence}\n                                                label={localize('Postal/ZIP Code')}\n                                                placeholder={localize('Postal/ZIP Code')}\n                                            />\n                                        </div>\n                                    </ThemedScrollbars>\n                                </Div100vhContainer>\n                                <Modal.Footer has_separator is_bypassed={isMobile()}>\n                                    <FormSubmitButton\n                                        is_disabled={isSubmitting || Object.keys(errors).length > 0}\n                                        label={localize('Next')}\n                                        is_absolute={isMobile()}\n                                        has_cancel\n                                        cancel_label={localize('Previous')}\n                                        onCancel={this.handleCancel.bind(this, values)}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                )}\n            </Formik>\n        );\n    }\n}\n\nexport default connect(({ client }) => ({\n    is_gb_residence: client.residence === 'gb',\n    fetchStatesList: client.fetchStatesList,\n    states_list: client.states_list,\n}))(AddressDetails);\n","import { getPreBuildDVRs } from 'Utils/Validator/declarative-validation-rules';\n\n/**\n * Prepare default field and names for form.\n * @param {string} landing_company\n * @param {object} schema\n */\nexport const getDefaultFields = (landing_company, schema) => {\n    const output = {};\n    Object.entries(filterByLandingCompany(landing_company, schema)).forEach(([field_name, opts]) => {\n        output[field_name] = opts.default_value;\n    });\n\n    return output;\n};\n\nexport const filterByLandingCompany = (landing_company, schema) =>\n    Object.fromEntries(Object.entries(schema).filter(([, opts]) => opts.supported_in.includes(landing_company)));\n\n/**\n * Generate validation function for the landing_company\n * @param landing_company\n * @param schema\n * @return {function(*=): {}}\n */\nexport const generateValidationFunction = (landing_company, schema) => {\n    const rules_schema = filterByLandingCompany(landing_company, schema);\n    const rules = {};\n    Object.entries(rules_schema).forEach(([key, opts]) => {\n        rules[key] = opts.rules;\n    });\n\n    return values => {\n        const errors = {};\n\n        Object.entries(values).forEach(([field_name, value]) => {\n            if (field_name in rules) {\n                rules[field_name].some(([rule, message, options]) => {\n                    if (\n                        checkForErrors({\n                            field_name,\n                            value,\n                            rule,\n                            options,\n                            values,\n                        })\n                    ) {\n                        errors[field_name] = typeof message === 'string' ? ['error', message] : message;\n                        return true;\n                    }\n\n                    return false;\n                });\n            }\n        });\n\n        return errors;\n    };\n};\n\n/**\n * Returns true if the rule has error, false otherwise.\n * @param value\n * @param rule\n * @param options\n * @param values\n * @return {boolean}\n */\nconst checkForErrors = ({ value, rule, options, values }) => {\n    const validate = getValidationFunction(rule);\n\n    return !validate(value, options, values);\n};\n\n/**\n * Get validation function from rules array\n * @param rule\n * @throws Error when validation rule not found\n * @return {function(*=): *}\n */\nexport const getValidationFunction = rule => {\n    const func = getPreBuildDVRs()[rule]?.func ?? rule;\n    if (typeof func !== 'function') {\n        throw new Error(\n            `validation rule ${rule} not found. Available validations are: ${JSON.stringify(\n                Object.keys(getPreBuildDVRs())\n            )}`\n        );\n    }\n\n    /**\n     * Generated validation function from the DVRs.\n     */\n    return (value, options, values) => !!func(value, options, values);\n};\n","import { localize } from '@deriv/translations';\nimport AddressDetails from 'App/Containers/RealAccountSignup/address-details.jsx';\nimport { generateValidationFunction, getDefaultFields } from './form-validations';\n\nconst address_details_config = ({ account_settings }) => {\n    if (!account_settings) {\n        return {};\n    }\n\n    return {\n        address_line_1: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_line_1 ?? '',\n            rules: [\n                ['req', localize('Address line 1 is required')],\n                ['address', localize('Address is not in a proper format')],\n            ],\n        },\n        address_line_2: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_line_2 ?? '',\n            rules: [['length', localize('Address line 2 is not in a proper format'), { min: 0, max: 30 }]],\n        },\n        address_city: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_city ?? '',\n            rules: [\n                ['req', localize('City is required')],\n                [\n                    'regular',\n                    localize('City field is not in a proper format'),\n                    {\n                        regex: /^[a-zA-Z\\s\\W'.-]{1,35}$/,\n                    },\n                ],\n            ],\n        },\n        address_state: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_state ?? '',\n            rules: [\n                ['req', localize('State is required')],\n                [\n                    'regular',\n                    localize('State is not in a proper format'),\n                    {\n                        regex: /^[\\w\\s\\W'.-;,]{0,60}$/,\n                    },\n                ],\n            ],\n        },\n        address_postcode: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_postcode ?? '',\n            rules: [\n                [\n                    'postcode',\n                    localize('Please enter a {{field_name}} under {{max_number}} characters.', {\n                        field_name: localize('postal/ZIP code'),\n                        max_number: 20,\n                        interpolation: { escapeValue: false },\n                    }),\n                ],\n            ],\n        },\n    };\n};\n\nexport const addressDetailsConfig = ({ upgrade_info, real_account_signup_target, residence, account_settings }) => {\n    const config = address_details_config({ account_settings });\n    return {\n        header: {\n            active_title: localize('Complete your address details'),\n            title: localize('Address'),\n        },\n        body: AddressDetails,\n        form_value: getDefaultFields(real_account_signup_target, config),\n        props: {\n            validate: generateValidationFunction(\n                real_account_signup_target,\n                transformConfig(transformForResidence(config, residence), real_account_signup_target)\n            ),\n            is_svg: upgrade_info?.can_upgrade_to === 'svg',\n        },\n        passthrough: ['residence_list', 'is_fully_authenticated'],\n    };\n};\n\n/**\n * Transform general rules based on residence\n *\n * @param {object} rules - Original rules\n * @param {string} residence - Client's residence\n * @return {object} rules - Transformed rules\n */\nconst transformForResidence = (rules, residence) => {\n    // Isle of Man Clients do not need to fill out state since API states_list is empty.\n    if (residence === 'im') {\n        rules.address_state.rules.shift();\n    }\n    // GB residence are required to fill in the post code.\n    if (/^(im|gb)$/.test(residence)) {\n        rules.address_postcode.rules.splice(0, 0, ['req', localize('Postal/ZIP code is required')]);\n    }\n\n    return rules;\n};\n\nconst transformConfig = (config, { real_account_signup_target }) => {\n    // Remove required rule for svg clients\n    if (!real_account_signup_target || real_account_signup_target === 'svg') {\n        config.address_state.rules.shift();\n    }\n\n    return config;\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Field, Formik } from 'formik';\nimport {\n    AutoHeightWrapper,\n    FormSubmitButton,\n    Div100vhContainer,\n    MobileWrapper,\n    Modal,\n    Popover,\n    Icon,\n    ThemedScrollbars,\n} from '@deriv/components';\nimport { getCurrencyDisplayCode, isMobile, isDesktop } from '@deriv/shared';\n\nimport { connect } from 'Stores/connect';\nimport { Localize, localize } from '@deriv/translations';\nimport { splitValidationResultTypes } from 'App/Containers/RealAccountSignup/helpers/utils';\nimport 'Sass/currency-select-radio.scss';\n\n// Radio input\nexport const RadioButton = ({ field: { name, value, onChange, onBlur }, id, label, className, ...props }) => {\n    return (\n        <React.Fragment>\n            <input\n                name={name}\n                id={id}\n                type='radio'\n                value={id} // could be something else for output?\n                checked={id === value}\n                onChange={onChange}\n                onBlur={onBlur}\n                disabled={props.selected}\n                className={classNames('currency-list__radio-button')}\n                {...props}\n            />\n            <label\n                htmlFor={id}\n                className={classNames('currency-list__item', {\n                    'currency-list__item--selected': id === value,\n                    'currency-list__item--current': props.selected,\n                })}\n            >\n                <div>\n                    <Icon className='currency-list__icon' icon={`IcCurrency-${id.toLowerCase()}`} />\n                    {/^UST$/i.test(id) && (\n                        <Popover\n                            alignment='top'\n                            icon='info'\n                            disable_message_icon\n                            zIndex={9999}\n                            className='currency-list__popover'\n                            message={localize(\n                                'Deriv currently supports Tether (USDT). Please deposit USDT from your Omni Layer-enabled wallet into your Deriv account.'\n                            )}\n                        />\n                    )}\n                    <div className='label currency-list__item-text'>\n                        {label}\n                        <br />({getCurrencyDisplayCode(id)})\n                    </div>\n                </div>\n            </label>\n        </React.Fragment>\n    );\n};\n\n// Radio group\nexport const RadioButtonGroup = ({ label, className, children, is_title_enabled, is_fiat }) => {\n    return (\n        <div className={className}>\n            {is_title_enabled && <h2 className={classNames(`${className}--is-header`)}>{label}</h2>}\n            <div className='currency-list__items'>{children}</div>\n            {is_fiat && (\n                <p className='currency-selector__description'>\n                    <Localize i18n_default_text='You will not be able to change currency once you have made a deposit' />\n                </p>\n            )}\n        </div>\n    );\n};\n\nRadioButtonGroup.defaultProps = {\n    is_title_enabled: true,\n};\n\nexport const Hr = () => <div className='currency-hr' />;\n\nexport const reorderFiatCurrencies = list => {\n    // The order should be custom\n    // [USD, EUR, GBP, AUD]\n    const order = ['USD', 'EUR', 'GBP', 'AUD'];\n    return list.sort((a, b) => {\n        if (order.indexOf(a.value) < order.indexOf(b.value)) {\n            return -1;\n        }\n        if (order.indexOf(a.value) > order.indexOf(b.value)) {\n            return 1;\n        }\n        return 0;\n    });\n};\n\nclass CurrencySelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fiat_currencies: [],\n            crypto_currencies: [],\n        };\n    }\n\n    static getDerivedStateFromProps(next_props, next_state) {\n        if (next_props.legal_allowed_currencies.length === 0) {\n            return next_state;\n        }\n        const crypto = next_props.legal_allowed_currencies.filter(currency => currency.type === 'crypto');\n        const fiat = next_props.legal_allowed_currencies.filter(currency => currency.type === 'fiat');\n\n        return {\n            fiat_currencies: reorderFiatCurrencies(fiat),\n            crypto_currencies: crypto,\n        };\n    }\n\n    handleValidate = values => {\n        const { errors } = splitValidationResultTypes(this.props.validate(values));\n        return errors;\n    };\n\n    render() {\n        const { has_currency, has_real_account } = this.props;\n\n        return (\n            <Formik\n                initialValues={this.props.value}\n                onSubmit={(values, actions) => {\n                    this.props.onSubmit(this.props.index, values, actions.setSubmitting);\n                }}\n                validate={this.handleValidate}\n            >\n                {({\n                    handleSubmit,\n                    // setFieldValue,\n                    // setFieldTouched,\n                    values,\n                    errors,\n                    touched,\n                    isSubmitting,\n                }) => (\n                    <AutoHeightWrapper default_height={200}>\n                        {({ setRef, height }) => (\n                            <form ref={setRef} onSubmit={handleSubmit} className='currency-selector'>\n                                <Div100vhContainer\n                                    className={classNames('currency-selector__container', {\n                                        'currency-selector__container--no-top-margin':\n                                            !has_currency && has_real_account && isMobile(),\n                                    })}\n                                    height_offset={!has_currency && has_real_account ? '109px' : '179px'}\n                                    is_disabled={isDesktop()}\n                                >\n                                    <MobileWrapper>\n                                        {has_real_account && (\n                                            <div className='account-wizard__set-currency'>\n                                                {!has_currency && (\n                                                    <p>\n                                                        <Localize i18n_default_text='You have an account without an assigned currency. Please choose a currency to trade with this account.' />\n                                                    </p>\n                                                )}\n                                            </div>\n                                        )}\n                                    </MobileWrapper>\n                                    <ThemedScrollbars is_bypassed={isMobile()} height={`${height - 77}px`}>\n                                        <RadioButtonGroup\n                                            id='currency'\n                                            className='currency-selector__radio-group'\n                                            label={localize('Fiat currencies')}\n                                            is_fiat\n                                            value={values.currency}\n                                            error={errors.currency}\n                                            touched={touched.currency}\n                                        >\n                                            {this.state.fiat_currencies.map(currency => (\n                                                <Field\n                                                    key={currency.value}\n                                                    component={RadioButton}\n                                                    name='currency'\n                                                    id={currency.value}\n                                                    label={currency.name}\n                                                />\n                                            ))}\n                                        </RadioButtonGroup>\n                                        {this.state.crypto_currencies.length > 0 && (\n                                            <React.Fragment>\n                                                <Hr />\n                                                <RadioButtonGroup\n                                                    id='currency'\n                                                    className='currency-selector__radio-group'\n                                                    label={localize('Cryptocurrencies')}\n                                                    value={values.currency}\n                                                    error={errors.currency}\n                                                    touched={touched.currency}\n                                                >\n                                                    {this.state.crypto_currencies.map(currency => (\n                                                        <Field\n                                                            key={currency.value}\n                                                            component={RadioButton}\n                                                            name='currency'\n                                                            id={currency.value}\n                                                            label={currency.name}\n                                                        />\n                                                    ))}\n                                                </RadioButtonGroup>\n                                            </React.Fragment>\n                                        )}\n                                    </ThemedScrollbars>\n                                </Div100vhContainer>\n                                <Modal.Footer is_bypassed={isMobile()}>\n                                    <FormSubmitButton\n                                        is_disabled={isSubmitting || !values.currency}\n                                        is_center={!has_currency}\n                                        is_absolute={isMobile()}\n                                        has_cancel\n                                        onCancel={this.props.onCancel}\n                                        cancel_label={localize('Cancel')}\n                                        label={localize('Next')}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                )}\n            </Formik>\n        );\n    }\n}\n\nCurrencySelector.propTypes = {\n    controls: PropTypes.object,\n    has_currency: PropTypes.bool,\n    has_real_account: PropTypes.bool,\n    index: PropTypes.number,\n    onSubmit: PropTypes.func,\n    value: PropTypes.any,\n};\n\nexport default connect(({ client }) => ({\n    currencies: client.currencies_list,\n    has_currency: !!client.currency,\n    has_real_account: client.has_active_real_account,\n    legal_allowed_currencies: client.upgradeable_currencies,\n    selectable_currencies: client.selectable_currencies,\n}))(CurrencySelector);\n","import { localize } from '@deriv/translations';\nimport CurrencySelector from './currency-selector.jsx';\nimport { generateValidationFunction, getDefaultFields } from './form-validations';\n\nconst currency_selector_config = {\n    currency: {\n        supported_in: ['maltainvest', 'malta', 'svg', 'iom'],\n        default_value: '',\n        rules: [['req', localize('Select an item')]],\n    },\n};\n\nexport const currencySelectorConfig = ({ real_account_signup_target }) => {\n    return {\n        header: {\n            active_title: localize('Please choose your currency'),\n            title: localize('Account currency'),\n        },\n        body: CurrencySelector,\n        form_value: getDefaultFields(real_account_signup_target, currency_selector_config),\n        props: {\n            validate: generateValidationFunction(real_account_signup_target, currency_selector_config),\n        },\n        passthrough: ['legal_allowed_currencies'],\n    };\n};\n","import { Formik, Field } from 'formik';\nimport React from 'react';\nimport { FormSubHeader } from '@deriv/account';\nimport {\n    Modal,\n    Autocomplete,\n    AutoHeightWrapper,\n    Checkbox,\n    Dropdown,\n    DesktopWrapper,\n    MobileWrapper,\n    DateOfBirthPicker,\n    Div100vhContainer,\n    FormSubmitButton,\n    Input,\n    Popover,\n    RadioGroup,\n    SelectNative,\n    ThemedScrollbars,\n} from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { isDesktop, isMobile, toMoment } from '@deriv/shared';\nimport { splitValidationResultTypes } from 'App/Containers/RealAccountSignup/helpers/utils';\nimport 'Sass/details-form.scss';\n\nconst DateOfBirthField = props => (\n    <Field name={props.name}>\n        {({ field: { value }, form: { setFieldValue, errors, touched, setTouched } }) => (\n            <DateOfBirthPicker\n                error={touched.date_of_birth && errors.date_of_birth}\n                onBlur={() => setTouched({ date_of_birth: true })}\n                onChange={({ target }) =>\n                    setFieldValue(\n                        'date_of_birth',\n                        target?.value ? toMoment(target.value).format('YYYY-MM-DD') : '',\n                        true\n                    )\n                }\n                value={value}\n                portal_id='modal_root'\n                {...props}\n            />\n        )}\n    </Field>\n);\n\nconst FormInputField = ({ name, optional = false, warn, ...props }) => (\n    <Field name={name}>\n        {({ field, form: { errors, touched } }) => (\n            <Input\n                type='text'\n                required={!optional}\n                name={name}\n                autoComplete='off'\n                maxLength={props.maxLength || '30'}\n                error={touched[field.name] && errors[field.name]}\n                warn={warn}\n                {...field}\n                {...props}\n            />\n        )}\n    </Field>\n);\n\nclass PersonalDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // add padding-bottom to the form when datepicker is active\n            // to add empty spaces at the bottom when scrolling\n            paddingBottom: 'unset',\n            is_tax_residence_popover_open: false,\n            is_tin_popover_open: false,\n            warnings: {},\n        };\n    }\n\n    handleCancel = values => {\n        this.props.onSave(this.props.index, values);\n        this.props.onCancel();\n    };\n\n    onFocus = is_active => {\n        this.setState({ paddingBottom: is_active ? '18rem' : 'unset' });\n    };\n\n    handleValidate = values => {\n        const { errors, warnings } = splitValidationResultTypes(this.props.validate(values));\n        this.setState({ warnings });\n        return errors;\n    };\n\n    closeTooltipOnScroll = () => {\n        // Close any open tooltip\n        if (!this.state.is_tax_residence_popover_open || !this.state.is_tin_popover_open) {\n            this.setState({\n                is_tax_residence_popover_open: false,\n                is_tin_popover_open: false,\n            });\n        }\n    };\n\n    handleClickOutside = () => {\n        if (this.state.is_tax_residence_popover_open) {\n            this.setState({ is_tax_residence_popover_open: false });\n        }\n        if (this.state.is_tin_popover_open) {\n            this.setState({ is_tin_popover_open: false });\n        }\n    };\n\n    render() {\n        return (\n            <Formik\n                initialValues={{ ...this.props.value }}\n                validate={this.handleValidate}\n                validateOnMount\n                onSubmit={(values, actions) => {\n                    this.props.onSubmit(this.props.index, values, actions.setSubmitting);\n                }}\n            >\n                {({ handleSubmit, isSubmitting, errors, setFieldValue, touched, values, handleChange, handleBlur }) => (\n                    <AutoHeightWrapper default_height={200} height_offset={isDesktop() ? 81 : null}>\n                        {({ setRef, height }) => (\n                            <form\n                                ref={setRef}\n                                onSubmit={handleSubmit}\n                                autoComplete='off'\n                                onClick={this.handleClickOutside}\n                            >\n                                <Div100vhContainer\n                                    className='details-form'\n                                    height_offset='179px'\n                                    is_disabled={isDesktop()}\n                                >\n                                    <ThemedScrollbars\n                                        is_bypassed={isMobile()}\n                                        height={height}\n                                        onScroll={this.closeTooltipOnScroll}\n                                    >\n                                        <div\n                                            className='details-form__elements'\n                                            style={{ paddingBottom: isDesktop() ? this.state.paddingBottom : null }}\n                                        >\n                                            <FormSubHeader title={localize('Title and name')} />\n                                            {'salutation' in this.props.value && ( // TODO: [deriv-eu] Remove salutation once api is optional\n                                                <RadioGroup\n                                                    className='dc-radio__input'\n                                                    name='salutation'\n                                                    items={this.props.salutation_list.map(item => {\n                                                        if (this.props.disabled_items.includes('salutation')) {\n                                                            item.disabled = true;\n                                                        }\n                                                        return item;\n                                                    })}\n                                                    selected={values.salutation}\n                                                    onToggle={e => {\n                                                        e.persist();\n                                                        setFieldValue('salutation', e.target.value);\n                                                    }}\n                                                    required\n                                                />\n                                            )}\n                                            {'first_name' in this.props.value && (\n                                                <FormInputField\n                                                    name='first_name'\n                                                    required={this.props.is_svg}\n                                                    label={\n                                                        this.props.is_svg\n                                                            ? localize('First name*')\n                                                            : localize('First name')\n                                                    }\n                                                    disabled={this.props.disabled_items.includes('first_name')}\n                                                    placeholder={localize('John')}\n                                                />\n                                            )}\n                                            {'last_name' in this.props.value && (\n                                                <FormInputField\n                                                    name='last_name'\n                                                    required={this.props.is_svg}\n                                                    label={\n                                                        this.props.is_svg\n                                                            ? localize('Last name*')\n                                                            : localize('Last name')\n                                                    }\n                                                    disabled={this.props.disabled_items.includes('last_name')}\n                                                    placeholder={localize('Doe')}\n                                                />\n                                            )}\n                                            <FormSubHeader title={localize('Other details')} />\n                                            {'date_of_birth' in this.props.value && (\n                                                <DateOfBirthField\n                                                    name='date_of_birth'\n                                                    required={this.props.is_svg}\n                                                    label={\n                                                        this.props.is_svg\n                                                            ? localize('Date of birth*')\n                                                            : localize('Date of birth')\n                                                    }\n                                                    disabled={this.props.disabled_items.includes('date_of_birth')}\n                                                    placeholder={localize('01-07-1999')}\n                                                />\n                                            )}\n                                            {'place_of_birth' in this.props.value && (\n                                                <Field name='place_of_birth'>\n                                                    {({ field }) => (\n                                                        <React.Fragment>\n                                                            <DesktopWrapper>\n                                                                <Autocomplete\n                                                                    {...field}\n                                                                    disabled={this.props.disabled_items.includes(\n                                                                        'place_of_birth'\n                                                                    )}\n                                                                    data-lpignore='true'\n                                                                    autoComplete='off' // prevent chrome autocomplete\n                                                                    type='text'\n                                                                    label={localize('Place of birth')}\n                                                                    error={\n                                                                        touched.place_of_birth && errors.place_of_birth\n                                                                    }\n                                                                    list_items={this.props.residence_list}\n                                                                    onItemSelection={({ value, text }) =>\n                                                                        setFieldValue(\n                                                                            'place_of_birth',\n                                                                            value ? text : '',\n                                                                            true\n                                                                        )\n                                                                    }\n                                                                    required\n                                                                />\n                                                            </DesktopWrapper>\n                                                            <MobileWrapper>\n                                                                <SelectNative\n                                                                    placeholder={localize('Place of birth')}\n                                                                    name={field.name}\n                                                                    disabled={this.props.disabled_items.includes(\n                                                                        'place_of_birth'\n                                                                    )}\n                                                                    label={localize('Place of birth')}\n                                                                    list_items={this.props.residence_list}\n                                                                    value={values.place_of_birth}\n                                                                    use_text={true}\n                                                                    error={\n                                                                        touched.place_of_birth && errors.place_of_birth\n                                                                    }\n                                                                    onChange={e => {\n                                                                        handleChange(e);\n                                                                        setFieldValue(\n                                                                            'place_of_birth',\n                                                                            e.target.value,\n                                                                            true\n                                                                        );\n                                                                    }}\n                                                                    {...field}\n                                                                    required\n                                                                />\n                                                            </MobileWrapper>\n                                                        </React.Fragment>\n                                                    )}\n                                                </Field>\n                                            )}\n                                            {'citizen' in this.props.value && (\n                                                <Field name='citizen'>\n                                                    {({ field }) => (\n                                                        <React.Fragment>\n                                                            <DesktopWrapper>\n                                                                <Autocomplete\n                                                                    {...field}\n                                                                    data-lpignore='true'\n                                                                    autoComplete='off' // prevent chrome autocomplete\n                                                                    type='text'\n                                                                    label={localize('Citizenship')}\n                                                                    error={touched.citizen && errors.citizen}\n                                                                    disabled={\n                                                                        (this.props.value.citizen &&\n                                                                            this.props.is_fully_authenticated) ||\n                                                                        this.props.disabled_items.includes('citizen')\n                                                                    }\n                                                                    list_items={this.props.residence_list}\n                                                                    onItemSelection={({ value, text }) =>\n                                                                        setFieldValue(\n                                                                            'citizen',\n                                                                            value ? text : '',\n                                                                            true\n                                                                        )\n                                                                    }\n                                                                    required\n                                                                />\n                                                            </DesktopWrapper>\n                                                            <MobileWrapper>\n                                                                <SelectNative\n                                                                    placeholder={localize('Citizenship')}\n                                                                    name={field.name}\n                                                                    disabled={\n                                                                        (this.props.value.citizen &&\n                                                                            this.props.is_fully_authenticated) ||\n                                                                        this.props.disabled_items.includes('citizen')\n                                                                    }\n                                                                    label={localize('Citizenship')}\n                                                                    list_items={this.props.residence_list}\n                                                                    value={values.citizen}\n                                                                    use_text={true}\n                                                                    error={touched.citizen && errors.citizen}\n                                                                    onChange={e => {\n                                                                        handleChange(e);\n                                                                        setFieldValue('citizen', e.target.value, true);\n                                                                    }}\n                                                                    {...field}\n                                                                    required\n                                                                />\n                                                            </MobileWrapper>\n                                                        </React.Fragment>\n                                                    )}\n                                                </Field>\n                                            )}\n                                            {'phone' in this.props.value && (\n                                                <FormInputField\n                                                    name='phone'\n                                                    label={\n                                                        this.props.is_svg\n                                                            ? localize('Phone number*')\n                                                            : localize('Phone number')\n                                                    }\n                                                    placeholder={\n                                                        this.props.is_svg\n                                                            ? localize('Phone number*')\n                                                            : localize('Phone number')\n                                                    }\n                                                    maxLength={50}\n                                                />\n                                            )}\n                                            {('tax_residence' in this.props.value ||\n                                                'tax_identification_number' in this.props.value) && (\n                                                <React.Fragment>\n                                                    <FormSubHeader title={localize('Tax information')} />\n                                                    {'tax_residence' in this.props.value && (\n                                                        <Field name='tax_residence'>\n                                                            {({ field }) => (\n                                                                <div className='details-form__tax'>\n                                                                    <DesktopWrapper>\n                                                                        <Autocomplete\n                                                                            {...field}\n                                                                            data-lpignore='true'\n                                                                            autoComplete='off' // prevent chrome autocomplete\n                                                                            type='text'\n                                                                            label={localize('Tax residence')}\n                                                                            error={\n                                                                                touched.tax_residence &&\n                                                                                errors.tax_residence\n                                                                            }\n                                                                            list_items={this.props.residence_list}\n                                                                            onItemSelection={({ value, text }) =>\n                                                                                setFieldValue(\n                                                                                    'tax_residence',\n                                                                                    value ? text : '',\n                                                                                    true\n                                                                                )\n                                                                            }\n                                                                        />\n                                                                    </DesktopWrapper>\n                                                                    <MobileWrapper>\n                                                                        <SelectNative\n                                                                            placeholder={localize('Tax residence')}\n                                                                            name={field.name}\n                                                                            label={localize('Tax residence')}\n                                                                            list_items={this.props.residence_list}\n                                                                            value={values.tax_residence}\n                                                                            use_text={true}\n                                                                            error={\n                                                                                touched.tax_residence &&\n                                                                                errors.tax_residence\n                                                                            }\n                                                                            onChange={e => {\n                                                                                handleChange(e);\n                                                                                setFieldValue(\n                                                                                    'tax_residence',\n                                                                                    e.target.value,\n                                                                                    true\n                                                                                );\n                                                                            }}\n                                                                            {...field}\n                                                                            required\n                                                                        />\n                                                                    </MobileWrapper>\n                                                                    <div\n                                                                        onClick={e => {\n                                                                            this.setState({\n                                                                                is_tax_residence_popover_open: true,\n                                                                                is_tin_popover_open: false,\n                                                                            });\n                                                                            e.stopPropagation();\n                                                                        }}\n                                                                    >\n                                                                        <Popover\n                                                                            alignment='right'\n                                                                            icon='info'\n                                                                            message={localize(\n                                                                                'The country in which you meet the criteria for paying taxes. Usually the country in which you physically reside.'\n                                                                            )}\n                                                                            zIndex={9999}\n                                                                            disable_message_icon\n                                                                            is_open={\n                                                                                this.state.is_tax_residence_popover_open\n                                                                            }\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                            )}\n                                                        </Field>\n                                                    )}\n                                                    {'tax_identification_number' in this.props.value && (\n                                                        <div className='details-form__tax'>\n                                                            <FormInputField\n                                                                name='tax_identification_number'\n                                                                label={localize('Tax Identification Number')}\n                                                                placeholder={localize('Tax Identification Number')}\n                                                                warn={this.state.warnings?.tax_identification_number}\n                                                            />\n                                                            <div\n                                                                onClick={e => {\n                                                                    this.setState({\n                                                                        is_tin_popover_open: true,\n                                                                        is_tax_residence_popover_open: false,\n                                                                    });\n                                                                    e.stopPropagation();\n                                                                }}\n                                                            >\n                                                                <Popover\n                                                                    alignment='right'\n                                                                    icon='info'\n                                                                    is_open={this.state.is_tin_popover_open}\n                                                                    message={\n                                                                        <Localize\n                                                                            i18n_default_text={\n                                                                                \"Don't know your tax identification number? Click <0>here</0> to learn more.\"\n                                                                            }\n                                                                            components={[\n                                                                                <a\n                                                                                    key={0}\n                                                                                    className='link link--red'\n                                                                                    rel='noopener noreferrer'\n                                                                                    target='_blank'\n                                                                                    href='https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/'\n                                                                                />,\n                                                                            ]}\n                                                                        />\n                                                                    }\n                                                                    zIndex={9999}\n                                                                    disable_message_icon\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    )}\n                                                    {this.state.warnings?.tax_identification_number && (\n                                                        <div className='details-form__tin-warn-divider' />\n                                                    )}\n                                                    {'tax_identification_confirm' in this.props.value && (\n                                                        <Checkbox\n                                                            name='tax_identification_confirm'\n                                                            className='details-form__tin-confirm'\n                                                            data-lpignore\n                                                            onChange={() =>\n                                                                setFieldValue(\n                                                                    'tax_identification_confirm',\n                                                                    !values.tax_identification_confirm,\n                                                                    true\n                                                                )\n                                                            }\n                                                            value={values.tax_identification_confirm}\n                                                            label={localize(\n                                                                'I hereby confirm that the tax information I provided is true and complete. I will also inform Deriv Investments (Europe) Limited about any changes to this information.'\n                                                            )}\n                                                            withTabIndex='0'\n                                                        />\n                                                    )}\n                                                </React.Fragment>\n                                            )}\n                                            {'account_opening_reason' in this.props.value && ( // TODO: [deriv-eu] Remove account opening reason once api is optional\n                                                <React.Fragment>\n                                                    <FormSubHeader title={localize('Account opening reason')} />\n                                                    <Field name='account_opening_reason'>\n                                                        {({ field }) => (\n                                                            <React.Fragment>\n                                                                <DesktopWrapper>\n                                                                    <Dropdown\n                                                                        placeholder={localize('Account opening reason')}\n                                                                        name={field.name}\n                                                                        disabled={this.props.disabled_items.includes(\n                                                                            'account_opening_reason'\n                                                                        )}\n                                                                        is_alignment_top\n                                                                        is_align_text_left\n                                                                        list={this.props.account_opening_reason_list}\n                                                                        value={values.account_opening_reason}\n                                                                        onChange={handleChange}\n                                                                        handleBlur={handleBlur}\n                                                                        error={\n                                                                            touched.account_opening_reason &&\n                                                                            errors.account_opening_reason\n                                                                        }\n                                                                        {...field}\n                                                                        required\n                                                                    />\n                                                                </DesktopWrapper>\n                                                                <MobileWrapper>\n                                                                    <SelectNative\n                                                                        placeholder={localize('Please select')}\n                                                                        name={field.name}\n                                                                        label={localize('Account opening reason')}\n                                                                        list_items={\n                                                                            this.props.account_opening_reason_list\n                                                                        }\n                                                                        value={values.account_opening_reason}\n                                                                        use_text={true}\n                                                                        error={\n                                                                            touched.account_opening_reason &&\n                                                                            errors.account_opening_reason\n                                                                        }\n                                                                        onChange={e => {\n                                                                            handleChange(e);\n                                                                            setFieldValue(\n                                                                                'account_opening_reason',\n                                                                                e.target.value,\n                                                                                true\n                                                                            );\n                                                                        }}\n                                                                        {...field}\n                                                                        required\n                                                                    />\n                                                                </MobileWrapper>\n                                                            </React.Fragment>\n                                                        )}\n                                                    </Field>\n                                                </React.Fragment>\n                                            )}\n                                        </div>\n                                    </ThemedScrollbars>\n                                </Div100vhContainer>\n                                <Modal.Footer has_separator is_bypassed={isMobile()}>\n                                    <FormSubmitButton\n                                        cancel_label={localize('Previous')}\n                                        has_cancel\n                                        is_disabled={\n                                            // eslint-disable-next-line no-unused-vars\n                                            isSubmitting || Object.keys(errors).length > 0\n                                        }\n                                        is_absolute={isMobile()}\n                                        label={localize('Next')}\n                                        onCancel={this.handleCancel.bind(this, values)}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                )}\n            </Formik>\n        );\n    }\n}\n\nexport default PersonalDetails;\n","import { toMoment } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport PersonalDetails from 'App/Containers/RealAccountSignup/personal-details.jsx';\nimport { getPreBuildDVRs } from 'Utils/Validator/declarative-validation-rules';\nimport { generateValidationFunction, getDefaultFields } from './form-validations';\n\nconst personal_details_config = ({ residence_list, account_settings }) => {\n    if (!residence_list || !account_settings) {\n        return {};\n    }\n\n    const disabled_items = [\n        ...Object.keys(account_settings).filter(field_name => field_name !== 'account_opening_reason' && !!field_name),\n    ];\n\n    return [\n        {\n            account_opening_reason: {\n                supported_in: ['iom', 'malta', 'maltainvest'],\n                default_value: account_settings.account_opening_reason ?? '',\n                rules: [['req', localize('Account opening reason is required')]],\n            },\n            salutation: {\n                supported_in: ['iom', 'malta', 'maltainvest'],\n                default_value: account_settings.salutation ?? '',\n                rules: [['req', localize('Salutation is required')]],\n            },\n            first_name: {\n                supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n                default_value: account_settings.first_name ?? '',\n                rules: [\n                    ['req', localize('First name is required')],\n                    ['letter_symbol', getPreBuildDVRs().letter_symbol.message],\n                    ['length', localize('First name should be between 2 and 30 characters.'), { min: 2, max: 30 }],\n                ],\n            },\n            last_name: {\n                supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n                default_value: account_settings.last_name ?? '',\n                rules: [\n                    ['req', localize('Last name is required')],\n                    ['letter_symbol', getPreBuildDVRs().letter_symbol.message],\n                    ['length', localize('Last name should be between 2 and 30 characters.'), { min: 2, max: 30 }],\n                ],\n            },\n            date_of_birth: {\n                supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n                default_value: account_settings.date_of_birth\n                    ? toMoment(account_settings.date_of_birth).format('YYYY-MM-DD')\n                    : '',\n                rules: [\n                    ['req', localize('Date of birth is required')],\n                    [\n                        v => toMoment(v).isValid() && toMoment(v).isBefore(toMoment().subtract(18, 'years')),\n                        localize('You must be 18 years old and above.'),\n                    ],\n                ],\n            },\n            place_of_birth: {\n                supported_in: ['maltainvest', 'iom', 'malta'],\n                default_value: account_settings.place_of_birth\n                    ? residence_list.find(item => item.value === account_settings.place_of_birth).text\n                    : '',\n                rules: [['req', localize('Place of birth is required')]],\n            },\n            citizen: {\n                supported_in: ['iom', 'malta', 'maltainvest'],\n                default_value: account_settings.citizen\n                    ? residence_list.find(item => item.value === account_settings.citizen).text\n                    : '',\n                rules: [['req', localize('Citizenship is required')]],\n            },\n            phone: {\n                supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n                default_value: account_settings.phone ?? '',\n                rules: [\n                    ['req', localize('Phone is required')],\n                    ['phone', localize('Phone is not in a proper format.')],\n                ],\n            },\n            tax_residence: {\n                default_value: account_settings.tax_residence\n                    ? residence_list.find(item => item.value === account_settings.tax_residence)?.text\n                    : '',\n                supported_in: ['maltainvest'],\n                rules: [['req', localize('Tax residence is required')]],\n            },\n            tax_identification_number: {\n                default_value: account_settings.tax_identification_number ?? '',\n                supported_in: ['maltainvest'],\n                rules: [\n                    ['req', localize('Tax Identification Number is required')],\n                    [\n                        (value, options, { tax_residence }) => {\n                            return !!tax_residence;\n                        },\n                        localize('Please fill in Tax residence'),\n                    ],\n                    [\n                        (value, options, { tax_residence }) => {\n                            const from_list = residence_list.filter(\n                                res => res.text === tax_residence && res.tin_format\n                            );\n                            const tax_regex = from_list[0]?.tin_format?.[0];\n                            return tax_regex ? new RegExp(tax_regex).test(value) : true;\n                        },\n                        [\n                            'warn',\n                            localize(\n                                'This Tax Identification Number (TIN) is invalid. You may continue with account creation, but to facilitate future payment processes, valid tax information will be required.'\n                            ),\n                        ],\n                    ],\n                ],\n            },\n            tax_identification_confirm: {\n                default_value: false,\n                supported_in: ['maltainvest'],\n                rules: [['confirm', localize('Please confirm your tax information')]],\n            },\n        },\n        disabled_items,\n    ];\n};\n\nexport const personalDetailsConfig = ({\n    upgrade_info,\n    real_account_signup_target,\n    residence_list,\n    account_settings,\n}) => {\n    const [config, disabled_items] = personal_details_config({ residence_list, account_settings });\n    return {\n        header: {\n            active_title: localize('Complete your personal details'),\n            title: localize('Personal details'),\n        },\n        body: PersonalDetails,\n        form_value: getDefaultFields(real_account_signup_target, config),\n        props: {\n            validate: generateValidationFunction(\n                real_account_signup_target,\n                transformConfig(config, { real_account_signup_target })\n            ),\n            is_svg: upgrade_info?.can_upgrade_to === 'svg',\n            account_opening_reason_list: [\n                {\n                    text: localize('Hedging'),\n                    value: 'Hedging',\n                },\n                {\n                    text: localize('Income Earning'),\n                    value: 'Income Earning',\n                },\n                {\n                    text: localize('Speculative'),\n                    value: 'Speculative',\n                },\n            ],\n            salutation_list: [\n                {\n                    label: localize('Mr'),\n                    value: 'Mr',\n                },\n                {\n                    label: localize('Mrs'),\n                    value: 'Mrs',\n                },\n                {\n                    label: localize('Ms'),\n                    value: 'Ms',\n                },\n                {\n                    label: localize('Miss'),\n                    value: 'Miss',\n                },\n            ],\n            disabled_items,\n        },\n        passthrough: ['residence_list', 'is_fully_authenticated'],\n    };\n};\n\nconst transformConfig = (config, { real_account_signup_target }) => {\n    // Remove required rule for malta and iom\n    if (['malta', 'iom'].includes(real_account_signup_target)) {\n        config.tax_residence.rules.shift();\n    }\n    return config;\n};\n","import React from 'react';\nimport { Checkbox } from '@deriv/components';\n\n/*\n * This component is used with Formik's Field component.\n */\nconst CheckboxField = ({ field: { name, value, onChange }, id, label, className, ...props }) => {\n    return (\n        <div className={className}>\n            <Checkbox value={value} name={name} label={label} onChange={onChange} {...props} />\n        </div>\n    );\n};\n\nexport default CheckboxField;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Hr } from 'App/Containers/RealAccountSignup/currency-selector.jsx';\n\nexport const BrokerSpecificMessage = ({ target }) => (\n    <React.Fragment>\n        {target === 'svg' && <SVGDescription />}\n        {target === 'iom' && <IOMDescription />}\n        {target === 'malta' && <MaltaDescription />}\n        {target === 'maltainvest' && <MaltaInvestDescription />}\n    </React.Fragment>\n);\n\nexport const SVGDescription = () => (\n    <React.Fragment>\n        <h4>\n            <Localize i18n_default_text={'Jurisdiction and choice of law'} />\n        </h4>\n        <p>\n            <Localize\n                i18n_default_text={\n                    'Your account will be opened with Deriv (SVG) Limited, and will be subject to the jurisdiction and laws of Saint Vincent and the Grenadines.'\n                }\n            />\n        </p>\n        <Hr />\n        <h4>\n            <Localize i18n_default_text={'Risk warning'} />\n        </h4>\n        <p>\n            <Localize\n                i18n_default_text={\n                    'The financial trading services offered on this site are only suitable for customers who accept the possibility of losing all the money they invest and who understand and have experience of the risk involved in the purchase of financial contracts. Transactions in financial contracts carry a high degree of risk. If the contracts you purchased expire as worthless, you will lose all your investment, which includes the contract premium.'\n                }\n            />\n        </p>\n    </React.Fragment>\n);\n\nexport const IOMDescription = () => (\n    <React.Fragment>\n        <h4>\n            <Localize i18n_default_text={'Jurisdiction and choice of law'} />\n        </h4>\n        <p>\n            <Localize\n                i18n_default_text={\n                    'Your account will be opened with Deriv (MX) Ltd, regulated by the UK Gaming Commission (UKGC) and subject to the jurisdiction and laws of Isle of Man.'\n                }\n            />\n        </p>\n    </React.Fragment>\n);\n\nexport const MaltaDescription = () => (\n    <React.Fragment>\n        <h4>\n            <Localize i18n_default_text={'Jurisdiction and choice of law'} />\n        </h4>\n        <p>\n            <Localize\n                i18n_default_text={\n                    'Your account will be opened with Deriv (Europe) Limited, regulated by the Malta Gaming Authority, and will be subject to the laws of Malta.'\n                }\n            />\n        </p>\n    </React.Fragment>\n);\n\nexport const MaltaInvestDescription = () => (\n    <React.Fragment>\n        <h4>\n            <Localize i18n_default_text={'Jurisdiction and choice of law'} />\n        </h4>\n        <p>\n            <Localize\n                i18n_default_text={\n                    'Your account will be opened with Deriv Investments (Europe) Limited, regulated by the Malta Financial Services Authority (MFSA) and will be subject to the jurisdiction and laws of Malta.'\n                }\n            />\n        </p>\n        <Hr />\n        <h4>\n            <Localize i18n_default_text='Risk warning' />\n        </h4>\n        <p>\n            <Localize\n                i18n_default_text={\n                    'The financial trading services offered on this site are only suitable for customers who accept the possibility of losing all the money they invest and who understand and have experience of the risk involved in the purchase of financial contracts. Transactions in financial contracts carry a high degree of risk. If the contracts you purchased expire as worthless, you will lose all your investment, which includes the contract premium.'\n                }\n            />\n        </p>\n    </React.Fragment>\n);\nexport const SharedMessage = () => (\n    <React.Fragment>\n        <h4>\n            <Localize i18n_default_text='Real accounts are not available to politically exposed persons (PEPs).' />\n        </h4>\n        <p>\n            <Localize i18n_default_text='A politically exposed person (PEP) is someone appointed with a prominent public position. Close associates and family members of a PEP are also considered to be PEPs.' />\n        </p>\n    </React.Fragment>\n);\n","import { Field, Formik } from 'formik';\nimport React from 'react';\nimport { Div100vhContainer, Modal, ThemedScrollbars, FormSubmitButton, AutoHeightWrapper } from '@deriv/components';\nimport { getDerivComLink, isDesktop, isMobile } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport CheckboxField from 'App/Containers/RealAccountSignup/checkbox-field.jsx';\nimport { Hr } from './currency-selector.jsx';\nimport { SharedMessage, BrokerSpecificMessage } from './terms-of-use-messages.jsx';\nimport 'Sass/terms-of-use.scss';\n\nclass TermsOfUse extends React.Component {\n    render() {\n        return (\n            <Formik\n                initialValues={this.props.value}\n                onSubmit={(values, actions) => {\n                    this.props.onSubmit(this.props.index, values.agreed_tos, actions.setSubmitting);\n                }}\n            >\n                {({\n                    handleSubmit,\n                    // setFieldValue,\n                    // setFieldTouched,\n                    values,\n                    isSubmitting,\n                }) => (\n                    <AutoHeightWrapper default_height={200}>\n                        {({ setRef, height }) => (\n                            <form ref={setRef} onSubmit={handleSubmit}>\n                                <ThemedScrollbars is_bypassed={isMobile()} height={height - 72}>\n                                    <Div100vhContainer\n                                        className='terms-of-use'\n                                        height_offset='169px'\n                                        is_disabled={isDesktop()}\n                                    >\n                                        <BrokerSpecificMessage target={this.props.real_account_signup_target} />\n                                        <Hr />\n                                        <SharedMessage />\n                                        <Field\n                                            component={CheckboxField}\n                                            className='terms-of-use__checkbox'\n                                            name='agreed_tos'\n                                            id='agreed_tos'\n                                            label={localize(\n                                                'I am not a PEP, and I have not been a PEP in the last 12 months.'\n                                            )}\n                                        />\n                                        <Hr />\n                                        <Field\n                                            component={CheckboxField}\n                                            className='terms-of-use__checkbox'\n                                            name='agreed_tnc'\n                                            id='agreed_tnc'\n                                            label={\n                                                <Localize\n                                                    i18n_default_text='I agree to the <0>terms and conditions</0>.'\n                                                    components={[\n                                                        <a\n                                                            key={0}\n                                                            className='link'\n                                                            target='_blank'\n                                                            rel='noopener noreferrer'\n                                                            href={getDerivComLink('/terms-and-conditions')}\n                                                        />,\n                                                    ]}\n                                                />\n                                            }\n                                        />\n                                    </Div100vhContainer>\n                                </ThemedScrollbars>\n                                <Modal.Footer has_separator is_bypassed={isMobile()}>\n                                    <FormSubmitButton\n                                        is_disabled={isSubmitting || !values.agreed_tos || !values.agreed_tnc}\n                                        label={localize('Add account')}\n                                        has_cancel={true}\n                                        is_absolute={isMobile()}\n                                        onCancel={this.props.onCancel}\n                                        cancel_label={localize('Previous')}\n                                        form_error={this.props.form_error}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                )}\n            </Formik>\n        );\n    }\n}\n\nexport default TermsOfUse;\n","import { isDesktop } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { getDefaultFields } from './form-validations';\nimport TermsOfUse from './terms-of-use.jsx';\n\nconst terms_of_use_config = {\n    agreed_tos: {\n        supported_in: ['svg', 'iom'],\n        default_value: '',\n    },\n    agreed_tnc: {\n        supported_in: ['svg', 'iom'],\n        default_value: '',\n    },\n};\n\nexport const termsOfUseConfig = ({ real_account_signup_target }) => {\n    return {\n        header: {\n            active_title: isDesktop() ? localize('Terms of use') : null,\n            title: localize('Terms of use'),\n        },\n        body: TermsOfUse,\n        form_value: getDefaultFields(real_account_signup_target, terms_of_use_config),\n        props: {\n            real_account_signup_target,\n        },\n    };\n};\n","import { Field } from 'formik';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Dropdown, SelectNative } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nexport const EmploymentStatus = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    employment_status_enum,\n}) => (\n    <Field name='employment_status'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Employment Status')}\n                        is_align_text_left\n                        name={field.name}\n                        list={employment_status_enum}\n                        value={values.employment_status}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.employment_status && errors.employment_status}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Employment Status')}\n                        list_items={employment_status_enum}\n                        value={values.employment_status}\n                        use_text={true}\n                        error={touched.employment_status && errors.employment_status}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('employment_status', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const IncomeSource = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    income_source_enum,\n}) => (\n    <Field name='income_source'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Source of income')}\n                        is_align_text_left\n                        name={field.name}\n                        list={income_source_enum}\n                        value={values.income_source}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.income_source && errors.income_source}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Source of income')}\n                        list_items={income_source_enum}\n                        value={values.income_source}\n                        use_text={true}\n                        error={touched.income_source && errors.income_source}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('income_source', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const EmploymentIndustry = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    employment_industry_enum,\n}) => (\n    <Field name='employment_industry'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Industry of employment')}\n                        is_align_text_left\n                        name={field.name}\n                        list={employment_industry_enum}\n                        value={values.employment_industry}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.employment_industry && errors.employment_industry}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Industry of employment')}\n                        list_items={employment_industry_enum}\n                        value={values.employment_industry}\n                        use_text={true}\n                        error={touched.employment_industry && errors.employment_industry}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('employment_industry', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\nexport const Occupation = ({ values, handleChange, handleBlur, touched, errors, setFieldValue, occupation_enum }) => (\n    <Field name='occupation'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Occupation')}\n                        is_align_text_left\n                        name={field.name}\n                        list={occupation_enum}\n                        value={values.occupation}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.occupation && errors.occupation}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Occupation')}\n                        list_items={occupation_enum}\n                        value={values.occupation}\n                        use_text={true}\n                        error={touched.occupation && errors.occupation}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('occupation', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const SourceOfWealth = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    source_of_wealth_enum,\n}) => (\n    <Field name='source_of_wealth'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Source of wealth')}\n                        is_align_text_left\n                        name={field.name}\n                        list={source_of_wealth_enum}\n                        value={values.source_of_wealth}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.source_of_wealth && errors.source_of_wealth}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Source of wealth')}\n                        list_items={source_of_wealth_enum}\n                        value={values.source_of_wealth}\n                        use_text={true}\n                        error={touched.source_of_wealth && errors.source_of_wealth}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('source_of_wealth', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const EducationLevel = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    education_level_enum,\n}) => (\n    <Field name='education_level'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Level of education')}\n                        is_align_text_left\n                        name={field.name}\n                        list={education_level_enum}\n                        value={values.education_level}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.education_level && errors.education_level}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Level of education')}\n                        list_items={education_level_enum}\n                        value={values.education_level}\n                        use_text={true}\n                        error={touched.education_level && errors.education_level}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('education_level', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const NetIncome = ({ values, handleChange, handleBlur, touched, errors, setFieldValue, net_income_enum }) => (\n    <Field name='net_income'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Net annual income')}\n                        is_align_text_left\n                        name={field.name}\n                        list={net_income_enum}\n                        value={values.net_income}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.net_income && errors.net_income}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Net annual income')}\n                        list_items={net_income_enum}\n                        value={values.net_income}\n                        use_text={true}\n                        error={touched.net_income && errors.net_income}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('net_income', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const EstimatedWorth = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    estimated_worth_enum,\n}) => (\n    <Field name='estimated_worth'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Estimated net worth')}\n                        is_align_text_left\n                        name={field.name}\n                        list={estimated_worth_enum}\n                        value={values.estimated_worth}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.estimated_worth && errors.estimated_worth}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Estimated net worth')}\n                        list_items={estimated_worth_enum}\n                        value={values.estimated_worth}\n                        use_text={true}\n                        error={touched.estimated_worth && errors.estimated_worth}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('estimated_worth', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const AccountTurnover = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    account_turnover_enum,\n}) => (\n    <Field name='account_turnover'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Anticipated annual turnover')}\n                        is_align_text_left\n                        name={field.name}\n                        list={account_turnover_enum}\n                        value={values.account_turnover}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.account_turnover && errors.account_turnover}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Anticipated annual turnover')}\n                        list_items={account_turnover_enum}\n                        value={values.account_turnover}\n                        use_text={true}\n                        error={touched.account_turnover && errors.account_turnover}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('account_turnover', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const ForexTradingExperience = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    forex_trading_experience_enum,\n}) => (\n    <Field name='forex_trading_experience'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Forex trading experience')}\n                        is_align_text_left\n                        name={field.name}\n                        list={forex_trading_experience_enum}\n                        value={values.forex_trading_experience}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.forex_trading_experience && errors.forex_trading_experience}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Forex trading experience')}\n                        list_items={forex_trading_experience_enum}\n                        value={values.forex_trading_experience}\n                        use_text={true}\n                        error={touched.forex_trading_experience && errors.forex_trading_experience}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('forex_trading_experience', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const ForexTradingFrequency = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    forex_trading_frequency_enum,\n}) => (\n    <Field name='forex_trading_frequency'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Forex trading frequency')}\n                        is_align_text_left\n                        name={field.name}\n                        list={forex_trading_frequency_enum}\n                        value={values.forex_trading_frequency}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.forex_trading_frequency && errors.forex_trading_frequency}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Forex trading frequency')}\n                        list_items={forex_trading_frequency_enum}\n                        value={values.forex_trading_frequency}\n                        use_text={true}\n                        error={touched.forex_trading_frequency && errors.forex_trading_frequency}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('forex_trading_frequency', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const BinaryOptionsTradingExperience = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    binary_options_trading_experience_enum,\n}) => (\n    <Field name='binary_options_trading_experience'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Digital options trading experience')}\n                        is_align_text_left\n                        name={field.name}\n                        list={binary_options_trading_experience_enum}\n                        value={values.binary_options_trading_experience}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.binary_options_trading_experience && errors.binary_options_trading_experience}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Digital options trading experience')}\n                        list_items={binary_options_trading_experience_enum}\n                        value={values.binary_options_trading_experience}\n                        use_text={true}\n                        error={touched.binary_options_trading_experience && errors.binary_options_trading_experience}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('binary_options_trading_experience', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const BinaryOptionsTradingFrequency = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    binary_options_trading_frequency_enum,\n}) => (\n    <Field name='binary_options_trading_frequency'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Digital options trading frequency')}\n                        is_align_text_left\n                        name={field.name}\n                        list={binary_options_trading_frequency_enum}\n                        value={values.binary_options_trading_frequency}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.binary_options_trading_frequency && errors.binary_options_trading_frequency}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Digital options trading frequency')}\n                        list_items={binary_options_trading_frequency_enum}\n                        value={values.binary_options_trading_frequency}\n                        use_text={true}\n                        error={touched.binary_options_trading_frequency && errors.binary_options_trading_frequency}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('binary_options_trading_frequency', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const CFDTradingExperience = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    cfd_trading_experience_enum,\n}) => (\n    <Field name='cfd_trading_experience'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('CFD trading experience')}\n                        is_align_text_left\n                        name={field.name}\n                        list={cfd_trading_experience_enum}\n                        value={values.cfd_trading_experience}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.cfd_trading_experience && errors.cfd_trading_experience}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('CFD trading experience')}\n                        list_items={cfd_trading_experience_enum}\n                        value={values.cfd_trading_experience}\n                        use_text={true}\n                        error={touched.cfd_trading_experience && errors.cfd_trading_experience}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('cfd_trading_experience', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const CFDTradingFrequency = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    cfd_trading_frequency_enum,\n}) => (\n    <Field name='cfd_trading_frequency'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('CFD trading frequency')}\n                        is_align_text_left\n                        name={field.name}\n                        list={cfd_trading_frequency_enum}\n                        value={values.cfd_trading_frequency}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={touched.cfd_trading_frequency && errors.cfd_trading_frequency}\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('CFD trading frequency')}\n                        list_items={cfd_trading_frequency_enum}\n                        value={values.cfd_trading_frequency}\n                        use_text={true}\n                        error={touched.cfd_trading_frequency && errors.cfd_trading_frequency}\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('cfd_trading_frequency', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const OtherInstrumentsTradingExperience = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    other_instruments_trading_experience_enum,\n}) => (\n    <Field name='other_instruments_trading_experience'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Experience with trading other financial instruments')}\n                        is_align_text_left\n                        name={field.name}\n                        list={other_instruments_trading_experience_enum}\n                        value={values.other_instruments_trading_experience}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={\n                            touched.other_instruments_trading_experience && errors.other_instruments_trading_experience\n                        }\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Experience with trading other financial instruments')}\n                        list_items={other_instruments_trading_experience_enum}\n                        value={values.other_instruments_trading_experience}\n                        use_text={true}\n                        error={\n                            touched.other_instruments_trading_experience && errors.other_instruments_trading_experience\n                        }\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('other_instruments_trading_experience', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n\nexport const OtherInstrumentsTradingFrequency = ({\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    setFieldValue,\n    other_instruments_trading_frequency_enum,\n}) => (\n    <Field name='other_instruments_trading_frequency'>\n        {({ field }) => (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Dropdown\n                        placeholder={localize('Trading frequency in other financial instruments')}\n                        is_align_text_left\n                        name={field.name}\n                        list={other_instruments_trading_frequency_enum}\n                        value={values.other_instruments_trading_frequency}\n                        onChange={handleChange}\n                        handleBlur={handleBlur}\n                        error={\n                            touched.other_instruments_trading_frequency && errors.other_instruments_trading_frequency\n                        }\n                        {...field}\n                        required\n                    />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <SelectNative\n                        placeholder={localize('Please select')}\n                        name={field.name}\n                        label={localize('Trading frequency in other financial instruments')}\n                        list_items={other_instruments_trading_frequency_enum}\n                        value={values.other_instruments_trading_frequency}\n                        use_text={true}\n                        error={\n                            touched.other_instruments_trading_frequency && errors.other_instruments_trading_frequency\n                        }\n                        onChange={e => {\n                            handleChange(e);\n                            setFieldValue('other_instruments_trading_frequency', e.target.value, true);\n                        }}\n                        {...field}\n                        required\n                    />\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n    </Field>\n);\n","import { Formik } from 'formik';\nimport React from 'react';\nimport { AutoHeightWrapper, Div100vhContainer, FormSubmitButton, Modal, ThemedScrollbars } from '@deriv/components';\nimport { FormSubHeader } from '@deriv/account';\nimport { localize } from '@deriv/translations';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { splitValidationResultTypes } from 'App/Containers/RealAccountSignup/helpers/utils';\nimport { screen_height_sm_threshold } from 'App/Containers/RealAccountSignup/helpers/constants';\nimport {\n    AccountTurnover,\n    BinaryOptionsTradingExperience,\n    BinaryOptionsTradingFrequency,\n    CFDTradingExperience,\n    CFDTradingFrequency,\n    EducationLevel,\n    EmploymentIndustry,\n    EmploymentStatus,\n    EstimatedWorth,\n    ForexTradingExperience,\n    ForexTradingFrequency,\n    IncomeSource,\n    NetIncome,\n    Occupation,\n    OtherInstrumentsTradingExperience,\n    OtherInstrumentsTradingFrequency,\n    SourceOfWealth,\n} from './financial-details-partials.jsx';\n\nconst FinancialInformation = ({\n    shared_props,\n    income_source_enum,\n    employment_status_enum,\n    employment_industry_enum,\n    occupation_enum,\n    source_of_wealth_enum,\n    education_level_enum,\n    net_income_enum,\n    estimated_worth_enum,\n    account_turnover_enum,\n}) => (\n    <React.Fragment>\n        <FormSubHeader\n            title={localize('Financial information')}\n            description={localize(\"We're legally obliged to ask for your financial information.\")}\n        />\n        <IncomeSource {...shared_props} income_source_enum={income_source_enum} />\n        <EmploymentStatus {...shared_props} employment_status_enum={employment_status_enum} />\n        <EmploymentIndustry {...shared_props} employment_industry_enum={employment_industry_enum} />\n        <Occupation {...shared_props} occupation_enum={occupation_enum} />\n        <SourceOfWealth {...shared_props} source_of_wealth_enum={source_of_wealth_enum} />\n        <EducationLevel {...shared_props} education_level_enum={education_level_enum} />\n        <NetIncome {...shared_props} net_income_enum={net_income_enum} />\n        <EstimatedWorth {...shared_props} estimated_worth_enum={estimated_worth_enum} />\n        <AccountTurnover {...shared_props} account_turnover_enum={account_turnover_enum} />\n    </React.Fragment>\n);\n\nconst TradingExperience = ({\n    shared_props,\n    forex_trading_experience_enum,\n    forex_trading_frequency_enum,\n    binary_options_trading_experience_enum,\n    binary_options_trading_frequency_enum,\n    cfd_trading_experience_enum,\n    cfd_trading_frequency_enum,\n    other_instruments_trading_experience_enum,\n    other_instruments_trading_frequency_enum,\n}) => (\n    <React.Fragment>\n        <FormSubHeader\n            title={localize('Trading experience')}\n            subtitle={localize('(All fields are required)')}\n            description={localize('Tell us about your trading experience.')}\n        />\n        <ForexTradingExperience {...shared_props} forex_trading_experience_enum={forex_trading_experience_enum} />\n        <ForexTradingFrequency {...shared_props} forex_trading_frequency_enum={forex_trading_frequency_enum} />\n        <BinaryOptionsTradingExperience\n            {...shared_props}\n            binary_options_trading_experience_enum={binary_options_trading_experience_enum}\n        />\n        <BinaryOptionsTradingFrequency\n            {...shared_props}\n            binary_options_trading_frequency_enum={binary_options_trading_frequency_enum}\n        />\n        <CFDTradingExperience {...shared_props} cfd_trading_experience_enum={cfd_trading_experience_enum} />\n        <CFDTradingFrequency {...shared_props} cfd_trading_frequency_enum={cfd_trading_frequency_enum} />\n        <OtherInstrumentsTradingExperience\n            {...shared_props}\n            other_instruments_trading_experience_enum={other_instruments_trading_experience_enum}\n        />\n        <OtherInstrumentsTradingFrequency\n            {...shared_props}\n            other_instruments_trading_frequency_enum={other_instruments_trading_frequency_enum}\n        />\n    </React.Fragment>\n);\n\nconst FinancialDetails = props => {\n    const padding_bottom = window.innerHeight < screen_height_sm_threshold ? '10rem' : '12rem';\n\n    const handleCancel = values => {\n        props.onSave(props.index, values);\n        props.onCancel();\n    };\n\n    const handleValidate = values => {\n        const { errors } = splitValidationResultTypes(props.validate(values));\n        return errors;\n    };\n\n    return (\n        <Formik\n            initialValues={{ ...props.value }}\n            validate={handleValidate}\n            onSubmit={(values, actions) => {\n                props.onSubmit(props.index, values, actions.setSubmitting);\n            }}\n            validateOnMount\n        >\n            {({ handleSubmit, isSubmitting, errors, values, setFieldValue, handleChange, handleBlur, touched }) => {\n                const shared_props = {\n                    values,\n                    handleChange,\n                    handleBlur,\n                    touched,\n                    errors,\n                    setFieldValue,\n                };\n\n                return (\n                    <AutoHeightWrapper default_height={200}>\n                        {({ setRef, height }) => (\n                            <form ref={setRef} onSubmit={handleSubmit}>\n                                <Div100vhContainer\n                                    className='details-form'\n                                    height_offset='179px'\n                                    is_disabled={isDesktop()}\n                                >\n                                    <ThemedScrollbars\n                                        is_bypassed={isMobile()}\n                                        autoHide={!(window.innerHeight < 890)}\n                                        height={height - 77}\n                                    >\n                                        <div\n                                            className='details-form__elements  details-form__elements--wide'\n                                            style={{ paddingBottom: isDesktop() ? padding_bottom : null }}\n                                        >\n                                            <FinancialInformation\n                                                shared_props={shared_props}\n                                                income_source_enum={props.income_source_enum}\n                                                employment_status_enum={props.employment_status_enum}\n                                                employment_industry_enum={props.employment_industry_enum}\n                                                occupation_enum={props.occupation_enum}\n                                                source_of_wealth_enum={props.source_of_wealth_enum}\n                                                education_level_enum={props.education_level_enum}\n                                                net_income_enum={props.net_income_enum}\n                                                estimated_worth_enum={props.estimated_worth_enum}\n                                                account_turnover_enum={props.account_turnover_enum}\n                                            />\n                                            <TradingExperience\n                                                shared_props={shared_props}\n                                                forex_trading_experience_enum={props.forex_trading_experience_enum}\n                                                forex_trading_frequency_enum={props.forex_trading_frequency_enum}\n                                                binary_options_trading_experience_enum={\n                                                    props.binary_options_trading_experience_enum\n                                                }\n                                                binary_options_trading_frequency_enum={\n                                                    props.binary_options_trading_frequency_enum\n                                                }\n                                                cfd_trading_experience_enum={props.cfd_trading_experience_enum}\n                                                cfd_trading_frequency_enum={props.cfd_trading_frequency_enum}\n                                                other_instruments_trading_experience_enum={\n                                                    props.other_instruments_trading_experience_enum\n                                                }\n                                                other_instruments_trading_frequency_enum={\n                                                    props.other_instruments_trading_frequency_enum\n                                                }\n                                            />\n                                        </div>\n                                    </ThemedScrollbars>\n                                </Div100vhContainer>\n                                <Modal.Footer has_separator is_bypassed={isMobile()}>\n                                    <FormSubmitButton\n                                        is_disabled={\n                                            // eslint-disable-next-line no-unused-vars\n                                            isSubmitting || Object.keys(errors).length > 0\n                                        }\n                                        is_absolute={isMobile()}\n                                        label={localize('Next')}\n                                        has_cancel\n                                        cancel_label={localize('Previous')}\n                                        onCancel={() => handleCancel(values)}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                );\n            }}\n        </Formik>\n    );\n};\n\nexport default connect(({ client }) => ({\n    is_gb_residence: client.residence === 'gb',\n    fetchStatesList: client.fetchStatesList,\n    states_list: client.states_list,\n}))(FinancialDetails);\n","import { localize } from '@deriv/translations';\nimport FinancialDetails from 'App/Containers/RealAccountSignup/financial-details.jsx';\nimport { generateValidationFunction, getDefaultFields } from './form-validations';\n\nconst financial_details_config = {\n    account_turnover: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    binary_options_trading_experience: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    binary_options_trading_frequency: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    cfd_trading_experience: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    cfd_trading_frequency: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    education_level: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    forex_trading_experience: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    forex_trading_frequency: {\n        supported_in: ['maltainvest'],\n        default_value: '',\n        rules: [['req', localize('Please select an option')]],\n    },\n    employment_industry: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [['req', localize('Please select an option')]],\n    },\n    employment_status: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [],\n    },\n    estimated_worth: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [['req', localize('Please select an option')]],\n    },\n    income_source: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [['req', localize('Please select an option')]],\n    },\n    net_income: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [['req', localize('Please select an option')]],\n    },\n    occupation: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [['req', localize('Please select an option')]],\n    },\n    other_instruments_trading_experience: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [['req', localize('Please select an option')]],\n    },\n    other_instruments_trading_frequency: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [['req', localize('Please select an option')]],\n    },\n    source_of_wealth: {\n        default_value: '',\n        supported_in: ['maltainvest'],\n        rules: [],\n    },\n};\n\nexport const financialDetailsConfig = ({ real_account_signup_target }) => {\n    return {\n        header: {\n            active_title: localize('Complete your financial assessment'),\n            title: localize('Financial assessment'),\n        },\n        body: FinancialDetails,\n        form_value: getDefaultFields(real_account_signup_target, financial_details_config),\n        props: {\n            validate: generateValidationFunction(real_account_signup_target, financial_details_config),\n            account_turnover_enum: account_turnover_enum(),\n            binary_options_trading_experience_enum: binary_options_trading_experience_enum(),\n            binary_options_trading_frequency_enum: binary_options_trading_frequency_enum(),\n            cfd_trading_experience_enum: cfd_trading_experience_enum(),\n            cfd_trading_frequency_enum: cfd_trading_frequency_enum(),\n            education_level_enum: education_level_enum(),\n            employment_industry_enum: employment_industry_enum(),\n            employment_status_enum: employment_status_enum(),\n            forex_trading_experience_enum: forex_trading_experience_enum(),\n            forex_trading_frequency_enum: forex_trading_frequency_enum(),\n            estimated_worth_enum: estimated_worth_enum(),\n            income_source_enum: income_source_enum(),\n            net_income_enum: net_income_enum(),\n            occupation_enum: occupation_enum(),\n            other_instruments_trading_experience_enum: other_instruments_trading_experience_enum(),\n            other_instruments_trading_frequency_enum: other_instruments_trading_frequency_enum(),\n            source_of_wealth_enum: source_of_wealth_enum(),\n        },\n        passthrough: ['residence_list', 'is_fully_authenticated'],\n    };\n};\nconst account_turnover_enum = () => [\n    {\n        value: 'Less than $25,000',\n        text: localize('Less than $25,000'),\n    },\n    {\n        value: '$25,000 - $50,000',\n        text: localize('$25,000 - $50,000'),\n    },\n    {\n        value: '$50,001 - $100,000',\n        text: localize('$50,001 - $100,000'),\n    },\n    {\n        value: '$100,001 - $500,000',\n        text: localize('$100,001 - $500,000'),\n    },\n    {\n        value: 'Over $500,000',\n        text: localize('Over $500,000'),\n    },\n];\nconst binary_options_trading_experience_enum = () => [\n    {\n        value: '0-1 year',\n        text: localize('0-1 year'),\n    },\n    {\n        value: '1-2 years',\n        text: localize('1-2 years'),\n    },\n    {\n        value: 'Over 3 years',\n        text: localize('Over 3 years'),\n    },\n];\nconst binary_options_trading_frequency_enum = () => [\n    {\n        value: '0-5 transactions in the past 12 months',\n        text: localize('0-5 transactions in the past 12 months'),\n    },\n    {\n        value: '6-10 transactions in the past 12 months',\n        text: localize('6-10 transactions in the past 12 months'),\n    },\n    {\n        value: '11-39 transactions in the past 12 months',\n        text: localize('11-39 transactions in the past 12 months'),\n    },\n    {\n        value: '40 transactions or more in the past 12 months',\n        text: localize('40 transactions or more in the past 12 months'),\n    },\n];\nconst cfd_trading_experience_enum = binary_options_trading_experience_enum; // Keeping alias to have a uniform readability\nconst cfd_trading_frequency_enum = binary_options_trading_frequency_enum;\nconst education_level_enum = () => [\n    {\n        value: 'Primary',\n        text: localize('Primary'),\n    },\n    {\n        value: 'Secondary',\n        text: localize('Secondary'),\n    },\n    {\n        value: 'Tertiary',\n        text: localize('Tertiary'),\n    },\n];\nconst employment_industry_enum = () => [\n    {\n        value: 'Construction',\n        text: localize('Construction'),\n    },\n    {\n        value: 'Education',\n        text: localize('Education'),\n    },\n    {\n        value: 'Finance',\n        text: localize('Finance'),\n    },\n    {\n        value: 'Health',\n        text: localize('Health'),\n    },\n    {\n        value: 'Tourism',\n        text: localize('Tourism'),\n    },\n    {\n        value: 'Information & Communications Technology',\n        text: localize('Information & Communications Technology'),\n    },\n    {\n        value: 'Science & Engineering',\n        text: localize('Science & Engineering'),\n    },\n    {\n        value: 'Legal',\n        text: localize('Legal'),\n    },\n    {\n        value: 'Social & Cultural',\n        text: localize('Social & Cultural'),\n    },\n    {\n        value: 'Agriculture',\n        text: localize('Agriculture'),\n    },\n    {\n        value: 'Real Estate',\n        text: localize('Real Estate'),\n    },\n    {\n        value: 'Food Services',\n        text: localize('Food Services'),\n    },\n    {\n        value: 'Manufacturing',\n        text: localize('Manufacturing'),\n    },\n    {\n        value: 'Unemployed',\n        text: localize('Unemployed'),\n    },\n];\nconst employment_status_enum = () => [\n    {\n        value: 'Employed',\n        text: localize('Employed'),\n    },\n    {\n        value: 'Pensioner',\n        text: localize('Pensioner'),\n    },\n    {\n        value: 'Self-Employed',\n        text: localize('Self-Employed'),\n    },\n    {\n        value: 'Student',\n        text: localize('Student'),\n    },\n    {\n        value: 'Unemployed',\n        text: localize('Unemployed'),\n    },\n];\nconst estimated_worth_enum = () => [\n    {\n        value: 'Less than $100,000',\n        text: localize('Less than $100,000'),\n    },\n    {\n        value: '$100,000 - $250,000',\n        text: localize('$100,000 - $250,000'),\n    },\n    {\n        value: '$250,001 - $500,000',\n        text: localize('$250,001 - $500,000'),\n    },\n    {\n        value: '$500,001 - $1,000,000',\n        text: localize('$500,001 - $1,000,000'),\n    },\n    {\n        value: 'Over $1,000,000',\n        text: localize('Over $1,000,000'),\n    },\n];\nconst forex_trading_experience_enum = binary_options_trading_experience_enum; // Keeping alias to have a uniform readability\nconst forex_trading_frequency_enum = binary_options_trading_frequency_enum;\nconst income_source_enum = () => [\n    {\n        value: 'Salaried Employee',\n        text: localize('Salaried Employee'),\n    },\n    {\n        value: 'Self-Employed',\n        text: localize('Self-Employed'),\n    },\n    {\n        value: 'Investments & Dividends',\n        text: localize('Investments & Dividends'),\n    },\n    {\n        value: 'Pension',\n        text: localize('Pension'),\n    },\n    {\n        value: 'State Benefits',\n        text: localize('State Benefits'),\n    },\n    {\n        value: 'Savings & Inheritance',\n        text: localize('Savings & Inheritance'),\n    },\n];\nconst net_income_enum = account_turnover_enum;\nconst occupation_enum = () => [\n    {\n        value: 'Chief Executives, Senior Officials and Legislators',\n        text: localize('Chief Executives, Senior Officials and Legislators'),\n    },\n    {\n        value: 'Managers',\n        text: localize('Managers'),\n    },\n    {\n        value: 'Professionals',\n        text: localize('Professionals'),\n    },\n    {\n        value: 'Clerks',\n        text: localize('Clerks'),\n    },\n    {\n        value: 'Personal Care, Sales and Service Workers',\n        text: localize('Personal Care, Sales and Service Workers'),\n    },\n    {\n        value: 'Agricultural, Forestry and Fishery Workers',\n        text: localize('Agricultural, Forestry and Fishery Workers'),\n    },\n    {\n        value: 'Craft, Metal, Electrical and Electronics Workers',\n        text: localize('Craft, Metal, Electrical and Electronics Workers'),\n    },\n    {\n        value: 'Plant and Machine Operators and Assemblers',\n        text: localize('Plant and Machine Operators and Assemblers'),\n    },\n    {\n        value: 'Cleaners and Helpers',\n        text: localize('Cleaners and Helpers'),\n    },\n    {\n        value: 'Mining, Construction, Manufacturing and Transport Workers',\n        text: localize('Mining, Construction, Manufacturing and Transport Workers'),\n    },\n    {\n        value: 'Armed Forces',\n        text: localize('Armed Forces'),\n    },\n    {\n        value: 'Government Officers',\n        text: localize('Students'),\n    },\n    {\n        value: 'Unemployed',\n        text: localize('Unemployed'),\n    },\n];\nconst other_instruments_trading_experience_enum = binary_options_trading_experience_enum; // Keeping alias to have a uniform readability\nconst other_instruments_trading_frequency_enum = binary_options_trading_frequency_enum;\nconst source_of_wealth_enum = () => [\n    {\n        value: 'Accumulation of Income/Savings',\n        text: localize('Accumulation of Income/Savings'),\n    },\n    {\n        value: 'Cash Business',\n        text: localize('Cash Business'),\n    },\n    {\n        value: 'Company Ownership',\n        text: localize('Company Ownership'),\n    },\n    {\n        value: 'Divorce Settlement',\n        text: localize('Divorce Settlement'),\n    },\n    {\n        value: 'Inheritance',\n        text: localize('Inheritance'),\n    },\n    {\n        value: 'Investment Income',\n        text: localize('Investment Income'),\n    },\n    {\n        value: 'Sale of Property',\n        text: localize('Sale of Property'),\n    },\n];\n","import PropTypes from 'prop-types';\nimport fromEntries from 'object.fromentries';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Div100vhContainer, FormProgress } from '@deriv/components';\nimport { isDesktop, toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport { makeCancellablePromise } from '_common/base/cancellable_promise';\n\nimport { getItems } from './account-wizard-form';\n\n// TODO: [deriv-eu] remove and merge this with the original function in PersonalDetails\nconst getLocation = (location_list, value, type) => {\n    const location_obj = location_list.find(\n        location => location[type === 'text' ? 'value' : 'text'].toLowerCase() === value.toLowerCase()\n    );\n\n    if (location_obj) return location_obj[type];\n    return '';\n};\n\nconst SetCurrencyHeader = ({ has_target, has_real_account, has_currency, items, step }) => (\n    <React.Fragment>\n        {(!has_real_account || has_target) && (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <FormProgress steps={items} current_step={step} />\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <div className='account-wizard__header-steps'>\n                        <h4 className='account-wizard__header-steps-title'>\n                            <Localize\n                                i18n_default_text='Step {{step}}: {{step_title}} ({{step}} of {{steps}})'\n                                values={{\n                                    step: step + 1,\n                                    steps: items.length,\n                                    step_title: items[step].header.title,\n                                }}\n                            />\n                        </h4>\n                        {items[step].header.active_title && (\n                            <h4 className='account-wizard__header-steps-subtitle'>{items[step].header.active_title}</h4>\n                        )}\n                    </div>\n                </MobileWrapper>\n            </React.Fragment>\n        )}\n        <DesktopWrapper>\n            {has_real_account && !has_target && (\n                <div className='account-wizard__set-currency'>\n                    {!has_currency && (\n                        <p>\n                            <Localize i18n_default_text='You have an account that do not have currency assigned. Please choose a currency to trade with this account.' />\n                        </p>\n                    )}\n                    <h2>\n                        <Localize i18n_default_text='Please choose your currency' />\n                    </h2>\n                </div>\n            )}\n        </DesktopWrapper>\n    </React.Fragment>\n);\n\nclass AccountWizard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            finished: undefined,\n            mounted: true,\n            step: 0,\n            form_error: '',\n            items: [],\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchStatesList();\n        const { cancel, promise } = makeCancellablePromise(this.props.fetchResidenceList());\n        this.cancel = cancel;\n        promise\n            .then(() => {\n                this.setState({\n                    items: getItems(this.props),\n                    mounted: false,\n                });\n\n                if (!this.residence_list?.length) {\n                    const items = this.state.items.slice(0);\n                    this.getCountryCode().then(phone_idd => {\n                        if ('phone' in items[1].form_value) {\n                            items[1].form_value.phone = items[1].form_value.phone || phone_idd || '';\n                            this.setState(items);\n                        }\n                    });\n                }\n\n                const previous_data = this.fetchFromStorage();\n                if (previous_data.length > 0) {\n                    const items = this.state.items.slice(0);\n                    previous_data.forEach((item, index) => {\n                        if (item instanceof Object) {\n                            items[index].form_value = item;\n                        }\n                    });\n                    this.setState({\n                        items,\n                        step: 1,\n                    });\n                }\n            })\n            // eslint-disable-next-line no-unused-vars\n            .catch(error => {\n                // Cancelled. no op.\n            });\n    }\n\n    fetchFromStorage = () => {\n        const stored_items = localStorage.getItem('real_account_signup_wizard');\n        try {\n            const items = JSON.parse(stored_items);\n            localStorage.removeItem('real_account_signup_wizard');\n            return items || [];\n        } catch (e) {\n            localStorage.removeItem('real_account_signup_wizard');\n            return [];\n        }\n    };\n\n    get form_values() {\n        return this.state.items\n            .map(item => item.form_value)\n            .reduce((obj, item) => {\n                const values = fromEntries(new Map(Object.entries(item)));\n                if (values.date_of_birth) {\n                    values.date_of_birth = toMoment(values.date_of_birth).format('YYYY-MM-DD');\n                }\n                if (values.place_of_birth) {\n                    values.place_of_birth = values.place_of_birth\n                        ? getLocation(this.props.residence_list, values.place_of_birth, 'value')\n                        : '';\n                }\n                if (values.citizen) {\n                    values.citizen = values.citizen\n                        ? getLocation(this.props.residence_list, values.citizen, 'value')\n                        : '';\n                }\n\n                if (values.tax_residence) {\n                    values.tax_residence = values.tax_residence\n                        ? getLocation(this.props.residence_list, values.tax_residence, 'value')\n                        : values.tax_residence;\n                }\n\n                if (values.address_state) {\n                    values.address_state = this.props.states_list.length\n                        ? getLocation(this.props.states_list, values.address_state, 'value')\n                        : values.address_state;\n                }\n\n                return {\n                    ...obj,\n                    ...values,\n                };\n            });\n    }\n\n    get state_index() {\n        return this.state.step;\n    }\n\n    get has_target() {\n        return this.props.real_account_signup_target !== 'manage';\n    }\n\n    getCountryCode = async () => {\n        await this.props.fetchResidenceList();\n        this.props.fetchStatesList();\n        const response = this.props.residence_list.find(item => item.value === this.props.residence);\n        if (!response || !response.phone_idd) return '';\n        return `+${response.phone_idd}`;\n    };\n\n    clearError = () => {\n        this.setState({\n            form_error: '',\n        });\n    };\n\n    getCurrent = key => {\n        return key ? this.state.items[this.state_index][key] : this.state.items[this.state_index];\n    };\n\n    getFinishedComponent = () => {\n        return this.state.finished;\n    };\n\n    nextStep = setSubmitting => {\n        this.clearError();\n        // Check if account wizard is not finished\n        if (this.hasMoreSteps()) {\n            this.goNext();\n        } else {\n            this.props.onLoading();\n            this.createRealAccount(setSubmitting);\n        }\n    };\n\n    prevStep = () => {\n        if (this.state.step - 1 < 0) {\n            this.cancel();\n            this.props.onClose();\n            return;\n        }\n\n        this.setState({\n            step: this.state.step - 1,\n            form_error: '',\n        });\n    };\n\n    submitForm = () => {\n        const clone = { ...this.form_values };\n        delete clone?.tax_identification_confirm; // This is a manual field and it does not require to be sent over\n\n        return this.props.realAccountSignup(clone);\n    };\n\n    setAccountCurrency = () => this.props.setAccountCurrency(this.form_values.currency);\n\n    updateValue = (index, value, setSubmitting) => {\n        this.saveFormData(index, value);\n        this.nextStep(setSubmitting);\n    };\n\n    saveFormData = (index, value) => {\n        const cloned_items = Object.assign([], this.state.items);\n        cloned_items[index].form_value = value;\n\n        this.setState({\n            items: cloned_items,\n        });\n    };\n\n    getPropsForChild = () => {\n        const passthrough = this.getCurrent('passthrough');\n        const props = this.getCurrent('props') || {};\n\n        if (passthrough && passthrough.length) {\n            passthrough.forEach(item => {\n                Object.assign(props, { [item]: this.props[item] });\n            });\n        }\n        return props;\n    };\n\n    createRealAccount(setSubmitting) {\n        if (this.props.has_real_account && !this.props.has_currency) {\n            this.setAccountCurrency()\n                .then(response => {\n                    this.props.onFinishSuccess(response.echo_req.set_account_currency.toLowerCase());\n                })\n                .catch(error_message => {\n                    this.setState(\n                        {\n                            form_error: error_message,\n                        },\n                        () => setSubmitting(false)\n                    );\n                });\n        } else {\n            this.submitForm()\n                .then(response => {\n                    if (this.props.real_account_signup_target === 'maltainvest') {\n                        this.props.onFinishSuccess(response.new_account_maltainvest.currency.toLowerCase());\n                    } else {\n                        this.props.onFinishSuccess(response.new_account_real.currency.toLowerCase());\n                    }\n                })\n                .catch(error => {\n                    this.props.onError(error, this.state.items);\n                });\n        }\n    }\n\n    goNext() {\n        this.setState({\n            step: this.state.step + 1,\n        });\n    }\n\n    hasMoreSteps() {\n        if (!this.props.has_currency && this.props.has_real_account) {\n            return false;\n        }\n        return this.state.step + 1 < this.state.items.length;\n    }\n\n    render() {\n        if (this.state.mounted) return null;\n        if (!this.state.finished) {\n            const BodyComponent = this.getCurrent('body');\n            const passthrough = this.getPropsForChild();\n            return (\n                <div className='account-wizard'>\n                    <SetCurrencyHeader\n                        has_real_account={this.props.has_real_account}\n                        step={this.state.step}\n                        items={this.state.items}\n                        has_currency={this.props.has_currency}\n                        has_target={this.has_target}\n                    />\n                    <Div100vhContainer className='account-wizard__body' is_disabled={isDesktop()} height_offset='110px'>\n                        <BodyComponent\n                            value={this.getCurrent('form_value')}\n                            index={this.state_index}\n                            onSubmit={this.updateValue}\n                            onCancel={this.prevStep}\n                            onSave={this.saveFormData}\n                            has_currency={this.props.has_currency}\n                            form_error={this.state.form_error}\n                            {...passthrough}\n                        />\n                    </Div100vhContainer>\n                </div>\n            );\n        }\n\n        const FinishedModalItem = this.getFinishedComponent();\n        return <FinishedModalItem />;\n    }\n}\n\nAccountWizard.propTypes = {\n    fetchResidenceList: PropTypes.func,\n    has_currency: PropTypes.bool,\n    has_real_account: PropTypes.bool,\n    onError: PropTypes.func,\n    onLoading: PropTypes.func,\n    onFinishSuccess: PropTypes.func,\n    realAccountSignup: PropTypes.func,\n    residence: PropTypes.string,\n    residence_list: PropTypes.array,\n    setAccountCurrency: PropTypes.func,\n};\n\nexport default connect(({ client, ui }) => ({\n    account_settings: client.account_settings,\n    is_fully_authenticated: client.is_fully_authenticated,\n    realAccountSignup: client.realAccountSignup,\n    has_real_account: client.has_active_real_account,\n    upgrade_info: client.upgrade_info,\n    real_account_signup_target: ui.real_account_signup_target,\n    has_currency: !!client.currency,\n    setAccountCurrency: client.setAccountCurrency,\n    residence: client.residence,\n    residence_list: client.residence_list,\n    states_list: client.states_list,\n    fetchStatesList: client.fetchStatesList,\n    fetchResidenceList: client.fetchResidenceList,\n    refreshNotifications: client.refreshNotifications,\n}))(AccountWizard);\n","export const makeCancellablePromise = listener => {\n    let done = false;\n    let cancel = () => (done = true);\n    const promise = new Promise((resolve, reject) => {\n        cancel = () => {\n            // If it is already done, don't do anything.\n            if (!done) {\n                done = true;\n                reject(new Error('Cancelled'));\n            }\n        };\n        listener\n            .then(result => {\n                if (done) {\n                    // Promise is canceled or done.\n                    reject(result);\n                }\n                done = true;\n                resolve(result);\n            })\n            .catch(error => {\n                done = true;\n                reject(error);\n            });\n    });\n    return { promise, cancel };\n};\n","import { addressDetailsConfig } from './address-details-form';\nimport { currencySelectorConfig } from './currency-selector-form';\nimport { personalDetailsConfig } from './personal-details-form';\nimport { termsOfUseConfig } from './terms-of-use-form';\nimport { financialDetailsConfig } from './financial-details-form';\n\nconst shouldShowFinancialDetails = ({ real_account_signup_target }) => real_account_signup_target === 'maltainvest';\n\nexport const getItems = props => {\n    return [\n        currencySelectorConfig(props),\n        personalDetailsConfig(props),\n        addressDetailsConfig(props),\n        ...(shouldShowFinancialDetails(props) ? [financialDetailsConfig(props)] : []),\n        termsOfUseConfig(props),\n    ];\n};\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport { Hr, RadioButtonGroup, RadioButton } from './currency-selector.jsx';\n\nconst messages = [\n    'Choose your preferred cryptocurrency',\n    'You can open an account for each cryptocurrency.',\n    'Add a real account',\n    'Choose a currency you would like to trade with.',\n];\n\nconst Headers = ({ heading, subheading }) => (\n    <React.Fragment>\n        <h1 className='add-crypto-currency__title'>\n            <Localize i18n_default_text={heading} />\n        </h1>\n        <h3 className='add-crypto-currency__sub-title'>\n            <Localize i18n_default_text={subheading} />\n        </h3>\n    </React.Fragment>\n);\n\nclass AddCryptoCurrency extends React.Component {\n    state = {\n        available_fiat_currencies: [],\n    };\n\n    static getDerivedStateFromProps(props) {\n        const fiat = props.legal_allowed_currencies.filter(currency => currency.type === 'fiat');\n        return {\n            available_fiat_currencies: fiat,\n        };\n    }\n\n    get can_add_fiat() {\n        return !this.props.has_fiat;\n    }\n\n    get crypto_currencies() {\n        return this.props.legal_allowed_currencies.filter(currency => currency.type === 'crypto');\n    }\n\n    canAddCrypto = currency => {\n        // check if the cryptocurrency has not been created\n        return this.props.available_crypto_currencies.map(e => e.value).indexOf(currency.value) === -1;\n    };\n\n    render() {\n        return (\n            <Formik\n                initialValues={{\n                    currency: this.props.value.currency,\n                }}\n                onSubmit={(values, actions) => {\n                    this.props.onSubmit(false, values, actions.setSubmitting);\n                }}\n            >\n                {({\n                    handleSubmit,\n                    // setFieldValue,\n                    // setFieldTouched,\n                    values,\n                    errors,\n                    touched,\n                    isSubmitting,\n                }) => (\n                    <form onSubmit={handleSubmit}>\n                        {!this.can_add_fiat && <Headers heading={messages[0]} subheading={messages[1]} />}\n                        {this.can_add_fiat && <Headers heading={messages[2]} subheading={messages[3]} />}\n                        {this.props.available_crypto_currencies.length !== 0 ? (\n                            <RadioButtonGroup\n                                id='crypto_currency'\n                                className='currency-selector__radio-group'\n                                label={localize('Cryptocurrencies')}\n                                value={values.currency}\n                                error={errors.currency}\n                                touched={touched.currency}\n                                is_title_enabled={this.can_add_fiat}\n                            >\n                                {this.crypto_currencies.map(currency => (\n                                    <Field\n                                        key={currency.value}\n                                        component={RadioButton}\n                                        name='currency'\n                                        id={currency.value}\n                                        label={currency.name}\n                                        selected={this.canAddCrypto(currency)}\n                                    />\n                                ))}\n                            </RadioButtonGroup>\n                        ) : (\n                            <RadioButtonGroup\n                                id='crypto_currency'\n                                className='currency-selector__radio-group'\n                                label={localize('Cryptocurrencies')}\n                                is_title_enabled={this.can_add_fiat}\n                            >\n                                {this.crypto_currencies.map(currency => (\n                                    <Field\n                                        key={currency.value}\n                                        component={RadioButton}\n                                        name='currency'\n                                        id={currency.value}\n                                        label={currency.name}\n                                        selected\n                                    />\n                                ))}\n                            </RadioButtonGroup>\n                        )}\n                        {this.can_add_fiat && (\n                            <React.Fragment>\n                                <Hr />\n                                <RadioButtonGroup\n                                    id='fiat_currency'\n                                    is_fiat\n                                    className='currency-selector__radio-group'\n                                    label={localize('Fiat currencies')}\n                                    value={values.currency}\n                                    error={errors.currency}\n                                    touched={touched.currency}\n                                    is_title_enabled={this.can_add_fiat}\n                                >\n                                    {this.state.available_fiat_currencies.map(currency => (\n                                        <Field\n                                            key={currency.value}\n                                            component={RadioButton}\n                                            name='currency'\n                                            id={currency.value}\n                                            label={currency.name}\n                                        />\n                                    ))}\n                                </RadioButtonGroup>\n                            </React.Fragment>\n                        )}\n                        <FormSubmitButton\n                            is_disabled={isSubmitting || !values.currency}\n                            label={localize('Add account')}\n                            is_center={true}\n                            form_error={this.props.form_error}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n}\n\nAddCryptoCurrency.propTypes = {\n    accounts: PropTypes.object,\n    available_crypto_currencies: PropTypes.array,\n    currencies: PropTypes.object,\n    legal_allowed_currencies: PropTypes.array,\n    selectable_currencies: PropTypes.array,\n};\nexport default connect(({ client }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    accounts: client.accounts,\n    currencies: client.currencies_list,\n    legal_allowed_currencies: client.upgradeable_currencies,\n    has_fiat: client.has_fiat,\n}))(AddCryptoCurrency);\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton } from '@deriv/components';\nimport { connect } from 'Stores/connect';\nimport { localize, Localize } from '@deriv/translations';\nimport { RadioButtonGroup, RadioButton, reorderFiatCurrencies } from './currency-selector.jsx';\n\nclass ChangeAccountCurrency extends React.Component {\n    state = {\n        selectable_currencies: [],\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {\n            selectable_currencies: reorderFiatCurrencies(\n                props.legal_allowed_currencies.filter(currency => currency.type === 'fiat')\n            ),\n        };\n    }\n\n    render() {\n        return (\n            <Formik\n                initialValues={{\n                    fiat: this.props.value.fiat,\n                }}\n                onSubmit={(values, actions) => {\n                    this.props.onSubmit(false, values, actions.setSubmitting);\n                }}\n            >\n                {({\n                    handleSubmit,\n                    // setFieldValue,\n                    // setFieldTouched,\n                    values,\n                    errors,\n                    touched,\n                    isSubmitting,\n                }) => (\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault();\n                            handleSubmit();\n                        }}\n                    >\n                        <h1 className='change-currency__title'>\n                            <Localize i18n_default_text='Change your currency' />\n                        </h1>\n                        <h3 className='change-currency__sub-title'>\n                            <Localize i18n_default_text='Choose the currency you would like to trade with.' />\n                        </h3>\n                        <RadioButtonGroup\n                            id='fiat'\n                            label={localize('Cryptocurrencies')}\n                            value={values.fiat}\n                            error={errors.fiat}\n                            touched={touched.fiat}\n                            is_title_enabled={false}\n                        >\n                            {this.state.selectable_currencies.map(currency => (\n                                <Field\n                                    key={currency.value}\n                                    component={RadioButton}\n                                    name='fiat'\n                                    id={currency.value}\n                                    label={currency.name}\n                                    selected={currency.value === this.props.currency}\n                                />\n                            ))}\n                        </RadioButtonGroup>\n                        <FormSubmitButton\n                            is_disabled={isSubmitting || !values.fiat}\n                            label={localize('Change currency')}\n                            is_absolute={false}\n                            is_center\n                            form_error={this.props.form_error}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n}\n\nChangeAccountCurrency.propTypes = {\n    currencies: PropTypes.object,\n    form_error: PropTypes.string,\n    legal_allowed_currencies: PropTypes.array,\n    selectable_currencies: PropTypes.array,\n};\nexport default connect(({ client }) => ({\n    currencies: client.currencies_list,\n    legal_allowed_currencies: client.upgradeable_currencies,\n    selectable_currencies: client.selectable_currencies,\n    currency: client.currency,\n}))(ChangeAccountCurrency);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Div100vhContainer, ThemedScrollbars } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode, isDesktop, isMobile } from '@deriv/shared';\nimport { website_name } from 'App/Constants/app-config';\nimport { connect } from 'Stores/connect';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport ChangeAccountCurrency from './change-account-currency.jsx';\nimport 'Sass/add-or-manage.scss';\nimport 'Sass/change-account.scss';\n\nclass AddOrManageAccounts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            finished: undefined,\n            form_error: '',\n            form_value: {\n                crypto: '',\n                fiat: '',\n            },\n        };\n    }\n\n    clearError = () => {\n        this.setState({\n            form_error: '',\n        });\n    };\n\n    manageOrChangeAccount = (obj, setSubmitting) => {\n        this.props.onLoading();\n        Object.entries(obj).map(([key, value]) => {\n            if (key === 'fiat') {\n                this.props\n                    .setCurrency(value)\n                    .then(response => {\n                        setSubmitting(false);\n                        this.props.onSuccessSetAccountCurrency(\n                            response.passthrough.previous_currency,\n                            response.echo_req.set_account_currency\n                        );\n                    })\n                    .catch(error_message => {\n                        this.props.onError(error_message);\n                    });\n            } else {\n                // Add Crypto Account\n                this.props\n                    .createCryptoAccount(value)\n                    .then(() => {\n                        this.props.onSuccessAddCurrency(value);\n                        setSubmitting(false);\n                    })\n                    .catch(error_message => {\n                        this.props.onError(error_message);\n                    });\n            }\n        });\n    };\n\n    updateValue = (index, value, setSubmitting) => {\n        this.manageOrChangeAccount(value, setSubmitting);\n    };\n\n    get no_crypto_available() {\n        return this.props.available_crypto_currencies.length === 0 && this.props.has_fiat;\n    }\n\n    get should_hide_crypto() {\n        return this.props.is_eu_enabled && this.props.is_eu; // TODO [deriv-eu] remove is_eu_enabled once released\n    }\n\n    render() {\n        return (\n            <ThemedScrollbars is_bypassed={isMobile()} autohide={false}>\n                <Div100vhContainer\n                    className='account-wizard add-or-manage'\n                    is_disabled={isDesktop()}\n                    height_offset='40px'\n                >\n                    {!this.should_hide_crypto && (\n                        <div\n                            className={classNames('add-crypto-currency', {\n                                'account-wizard--disabled': this.no_crypto_available,\n                            })}\n                        >\n                            {this.no_crypto_available && (\n                                <div className='account-wizard--disabled-message'>\n                                    <p className='add-crypto-currency'>\n                                        {localize(\n                                            'You already have an account for each of the cryptocurrencies available on {{website_name}}.',\n                                            { website_name }\n                                        )}\n                                    </p>\n                                </div>\n                            )}\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={this.updateValue}\n                                value={this.state.form_value}\n                                form_error={this.state.form_error}\n                                {...this.props}\n                            />\n                        </div>\n                    )}\n                    {this.props.has_fiat && (\n                        <div\n                            className={classNames('change-currency', {\n                                'account-wizard--disabled': !this.props.can_change_fiat_currency,\n                            })}\n                        >\n                            {!this.props.can_change_fiat_currency && (\n                                <div className='account-wizard--disabled-message'>\n                                    <p>\n                                        {this.props.current_currency_type === 'fiat' ? (\n                                            <Localize\n                                                i18n_default_text='Currency change is not available because either you have deposited money into your {{currency}} account or you have created a real MetaTrader 5 (MT5) account.'\n                                                values={{\n                                                    currency: getCurrencyDisplayCode(this.props.currency),\n                                                }}\n                                            />\n                                        ) : (\n                                            <Localize\n                                                i18n_default_text='Please switch to your {{fiat_currency}} account to change currencies.'\n                                                values={{\n                                                    fiat_currency: this.props.current_fiat_currency.toUpperCase(),\n                                                }}\n                                            />\n                                        )}\n                                    </p>\n                                </div>\n                            )}\n                            <ChangeAccountCurrency\n                                className='account-wizard__body'\n                                onSubmit={this.updateValue}\n                                value={this.state.form_value}\n                                form_error={this.state.form_error}\n                                {...this.props}\n                            />\n                        </div>\n                    )}\n                </Div100vhContainer>\n            </ThemedScrollbars>\n        );\n    }\n}\n\nAddOrManageAccounts.propTypes = {\n    onError: PropTypes.func,\n    onLoading: PropTypes.func,\n    onSuccessAddCurrency: PropTypes.func,\n    onSuccessSetAccountCurrency: PropTypes.func,\n};\n\nexport default connect(({ client, ui }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    can_change_fiat_currency: client.can_change_fiat_currency,\n    currency: client.currency,\n    current_currency_type: client.current_currency_type,\n    current_fiat_currency: client.current_fiat_currency,\n    is_eu_enabled: ui.is_eu_enabled, // TODO [deriv-eu] remove is_eu_enabled once eu is released.\n    is_eu: client.is_eu,\n    has_fiat: client.has_fiat,\n    setCurrency: client.setAccountCurrency,\n    createCryptoAccount: client.createCryptoAccount,\n}))(AddOrManageAccounts);\n","import React from 'react';\nimport { Button, Icon, Div100vhContainer } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst FinishedSetCurrency = ({ current, onCancel, onSubmit, prev }) => {\n    const IconPrevCurrency = () => <Icon icon={`IcCurrency-${prev.toLowerCase()}`} height={120} width={90} />;\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconArrow = () => <Icon icon='IcArrowPointerRight' color='red' width={50} height={20} />;\n\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            <div className='status-dialog__icon-area'>\n                <IconPrevCurrency />\n                <IconArrow />\n                <IconNextCurrency />\n                <IconWon className='bottom-right-overlay' />\n            </div>\n            <div className='status-dialog__body-area'>\n                <h2>\n                    <Localize i18n_default_text='Success!' />\n                </h2>\n                <Localize\n                    i18n_default_text='<0>You have successfully changed your currency to {{currency}}.</0><0>Make a deposit now to start trading.</0>'\n                    values={{\n                        currency: current,\n                    }}\n                    components={[<p key={current} />]}\n                />\n            </div>\n            <div className='status-dialog__btn-area'>\n                <Button onClick={onCancel} text={localize('Maybe later')} secondary />\n                <Button onClick={onSubmit} text={localize('Deposit now')} primary />\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default FinishedSetCurrency;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Icon } from '@deriv/components';\nimport { getDerivComLink } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\nconst SignupErrorContent = ({ message, code, onConfirm }) => {\n    const Heading = () => {\n        switch (code) {\n            case 'InvalidPhone':\n                return (\n                    <h1>\n                        <Localize i18n_default_text='Let’s try that again' />\n                    </h1>\n                );\n            case 'DuplicateAccount':\n                return (\n                    <h1>\n                        <Localize i18n_default_text='Already signed up?' />\n                    </h1>\n                );\n            default:\n                return (\n                    <h1>\n                        <Localize i18n_default_text='Something’s not right' />\n                    </h1>\n                );\n        }\n    };\n\n    const Message = () => {\n        switch (code) {\n            case 'DuplicateAccount':\n                return (\n                    <p>\n                        <Localize\n                            i18n_default_text='An account with your details already exists. If you are having problems signing into your account please email <0>support@deriv.com</0>'\n                            components={[\n                                <a\n                                    className='email-inline'\n                                    key={0}\n                                    href='mailto:support@deriv.com'\n                                    target='_blank'\n                                    rel='noreferrer nofollow'\n                                />,\n                            ]}\n                        />\n                    </p>\n                );\n            default:\n                return <p>{message}</p>;\n        }\n    };\n\n    const ErrorCTA = () => {\n        switch (code) {\n            case 'InvalidPhone':\n                return (\n                    <Button primary onClick={onConfirm} large>\n                        <Localize i18n_default_text='Try again using a different phone number' />\n                    </Button>\n                );\n            case 'DuplicateAccount':\n                return null;\n            default:\n                return (\n                    <a\n                        href={getDerivComLink('help-centre')}\n                        type='button'\n                        className='dc-btn dc-btn--primary'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <span className='dc-btn__text'>\n                            <Localize i18n_default_text='OK' />\n                        </span>\n                    </a>\n                );\n        }\n    };\n\n    return (\n        <div className='account-wizard--error'>\n            <Icon icon='IcAccountError' size={115} />\n            <Heading />\n            <Message />\n            <ErrorCTA />\n        </div>\n    );\n};\n\nSignupErrorContent.propTypes = {\n    code: PropTypes.string,\n    message: PropTypes.string,\n    onConfirm: PropTypes.func,\n};\n\nexport default SignupErrorContent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n * @component\n *\n * @param {EXPERIAN} status - Experian result\n */\nconst IOMHeading = ({ status }) => (\n    <h2>\n        {status === EXPERIAN.SUCCESS && <Localize i18n_default_text='Your account is ready' />}\n        {status === EXPERIAN.WARN && <Localize i18n_default_text='Proof of address verification failed' />}\n        {status === EXPERIAN.DANGER && (\n            <Localize i18n_default_text='Proof of identity and address verification failed' />\n        )}\n        {status === EXPERIAN.PENDING && (\n            <Localize i18n_default_text='Your proofs of identity and address were submitted successfully' />\n        )}\n    </h2>\n);\n\n/**\n * @component\n * Get the title to use in the dialog\n *\n * @param {EXPERIAN} status\n * @param {string} landing_company_shortcode\n *\n * @return {null|*}\n */\nexport const DialogHeading = ({ status, landing_company_shortcode }) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            return <IOMHeading status={status} />;\n        default:\n            return (\n                <h2>\n                    <Localize i18n_default_text='Your account is ready' />\n                </h2>\n            );\n    }\n};\n\nDialogHeading.propTypes = {\n    status: PropTypes.number.isRequired,\n    landing_company_shortcode: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n *\n * @param {String} landing_company_shortcode\n * @param {EXPERIAN} status\n */\nexport const DialogMessage = ({ status = EXPERIAN.SUCCESS, landing_company_shortcode }) => {\n    let message = '';\n    if (landing_company_shortcode === 'maltainvest') {\n        message = (\n            <Localize i18n_default_text='We need proofs of your identity and address before you can start trading.' />\n        );\n    } else {\n        switch (status) {\n            case EXPERIAN.WARN:\n                message = (\n                    <Localize i18n_default_text='We were unable to verify your proof of address document. You can upload a new document to try again.' />\n                );\n                break;\n            case EXPERIAN.DANGER:\n                message = (\n                    <Localize i18n_default_text='We were unable to verify your proof of identity and address documents. You can upload new documents to try again.' />\n                );\n                break;\n            default:\n                message = <Localize i18n_default_text='Fund your account to start trading.' />;\n        }\n    }\n\n    return <p className='status-dialog__text'>{message}</p>;\n};\n\nDialogMessage.propTypes = {\n    currency: PropTypes.string,\n    is_isle_of_man_residence: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    status: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\nconst getDismissButton = ({ status, landing_company_shortcode, closeModal, switchToVirtual }) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            if (status === EXPERIAN.SUCCESS) {\n                return {\n                    label: localize('Maybe later'),\n                    action: closeModal,\n                };\n            } else if (status === EXPERIAN.WARN) {\n                return {\n                    label: localize('Trade on demo account'),\n                    action: () => {\n                        closeModal();\n                        switchToVirtual();\n                    },\n                };\n            }\n            // Danger\n            return {\n                label: localize('Maybe later'),\n                action: closeModal,\n            };\n        // case 'svg':\n        default:\n            return {\n                label: localize('Maybe later'),\n                action: closeModal,\n            };\n    }\n};\n\nconst getActionButton = ({\n    status,\n    landing_company_shortcode,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n}) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            if (status === EXPERIAN.DANGER) {\n                return {\n                    label: localize('Submit proofs'),\n                    action: closeModalAndOpenPOI,\n                };\n            } else if (status === EXPERIAN.WARN) {\n                return {\n                    label: localize('Upload documents'),\n                    action: closeModalAndOpenPOA,\n                };\n            }\n\n            return {\n                label: localize('Deposit now'),\n                action: closeModalAndOpenCashier,\n            };\n        case 'maltainvest':\n            return {\n                label: localize('Submit proof'),\n                action: closeModalAndOpenPOI,\n            };\n        case 'svg':\n        case 'malta':\n        default:\n            return {\n                label: localize('Deposit now'),\n                action: closeModalAndOpenCashier,\n            };\n    }\n};\nconst DialogPrimaryButton = ({\n    status,\n    landing_company_shortcode,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n}) => {\n    // Check if the button is necessary\n    // Fetch proper action from store based on status + landing_company_shortcode\n    const { label, action } = getActionButton({\n        status,\n        landing_company_shortcode,\n        closeModalAndOpenCashier,\n        closeModalAndOpenPOI,\n        closeModalAndOpenPOA,\n    });\n\n    return <Button primary text={label} onClick={action} />;\n};\nconst DialogDismissButton = ({ status, landing_company_shortcode, closeModal, switchToVirtual }) => {\n    const { label, action } = getDismissButton({\n        status,\n        landing_company_shortcode,\n        closeModal,\n        switchToVirtual,\n    });\n\n    return <Button secondary text={label} onClick={action} />;\n};\nexport const DialogButtons = ({\n    status,\n    landing_company_shortcode,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOA,\n    closeModalAndOpenPOI,\n    switchToVirtual,\n}) => {\n    return (\n        <div className='status-dialog__btn-area'>\n            <DialogDismissButton\n                closeModal={closeModal}\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                switchToVirtual={switchToVirtual}\n            />\n            <DialogPrimaryButton\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n            />\n        </div>\n    );\n};\n\nDialogButtons.propTypes = {\n    status: PropTypes.number,\n    landing_company_shortcode: PropTypes.string,\n    closeModal: PropTypes.func,\n    closeModalAndOpenCashier: PropTypes.func,\n    closeModalAndOpenPOI: PropTypes.func,\n    switchToVirtual: PropTypes.func,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Div100vhContainer, Icon } from '@deriv/components';\nimport { routes, isDesktop } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport { DialogHeading } from './helpers/dialog-heading.jsx';\nimport { DialogMessage } from './helpers/dialog-message.jsx';\nimport { DialogButtons } from './helpers/dialog-buttons.jsx';\n\nconst MainIcon = ({ currency }) => <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={120} />;\nconst Checkmark = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' size={24} />;\nconst Warning = ({ className }) => <Icon className={className} icon='IcAlertDanger' size={24} />;\nconst Danger = ({ className }) => <Icon className={className} icon='IcCrossCircle' size={24} color='red' />;\n\nclass StatusDialogContainer extends React.Component {\n    static defaultProps = {\n        icon_size: 'large',\n        has_cancel: false,\n        has_submit: true,\n    };\n\n    closeModalAndOpenCashier = () => {\n        this.props.closeModal();\n        this.props.history.push(routes.cashier_deposit);\n    };\n\n    closeModalAndOpenPOI = () => {\n        this.props.closeModal();\n        this.props.history.push(routes.proof_of_identity);\n    };\n\n    closeModalAndOpenPOA = () => {\n        this.props.closeModal();\n        this.props.history.push(routes.proof_of_address);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    get status() {\n        const {\n            landing_company_shortcode,\n            is_fully_authenticated,\n            is_age_verified,\n            is_isle_of_man_residence,\n            is_belgium_residence,\n        } = this.props;\n\n        return getExperianResult({\n            landing_company_shortcode,\n            is_fully_authenticated,\n            is_age_verified,\n            is_isle_of_man_residence,\n            is_belgium_residence,\n        });\n    }\n\n    render() {\n        const {\n            landing_company_shortcode,\n            currency,\n            closeModal,\n            icon_size,\n            switchToVirtual,\n            is_isle_of_man_residence,\n            is_belgium_residence,\n        } = this.props;\n\n        return (\n            <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n                <div\n                    className={classNames('status-dialog__icon-area', {\n                        'status-dialog__icon-area--large': icon_size === 'large',\n                        'status-dialog__icon-area--xlarge': icon_size === 'xlarge',\n                    })}\n                >\n                    <MainIcon currency={currency} />\n                    {this.status === EXPERIAN.SUCCESS && <Checkmark className='bottom-right-overlay' />}\n                    {this.status === EXPERIAN.WARN && <Warning className='bottom-right-overlay' />}\n                    {this.status === EXPERIAN.DANGER && <Danger className='bottom-right-overlay' />}\n                </div>\n                <div className='status-dialog__body-area'>\n                    <DialogHeading status={this.status} landing_company_shortcode={landing_company_shortcode} />\n                    <DialogMessage\n                        status={this.status}\n                        landing_company_shortcode={landing_company_shortcode}\n                        currency={currency}\n                        is_isle_of_man_residence={is_isle_of_man_residence}\n                        is_belgium_residence={is_belgium_residence}\n                    />\n                </div>\n                <DialogButtons\n                    landing_company_shortcode={landing_company_shortcode}\n                    status={this.status}\n                    closeModal={closeModal}\n                    closeModalAndOpenPOI={this.closeModalAndOpenPOI}\n                    closeModalAndOpenPOA={this.closeModalAndOpenPOA}\n                    closeModalAndOpenCashier={this.closeModalAndOpenCashier}\n                    switchToVirtual={switchToVirtual}\n                />\n            </Div100vhContainer>\n        );\n    }\n}\n\nStatusDialogContainer.propTypes = {\n    currency: PropTypes.string,\n    has_cancel: PropTypes.bool,\n    has_submit: PropTypes.bool,\n    heading: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    icon: PropTypes.object,\n    icon_size: PropTypes.string,\n    icon_type: PropTypes.string,\n    is_isle_of_man_residence: PropTypes.bool,\n    is_belgium_residence: PropTypes.bool,\n    is_real: PropTypes.bool,\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    text_submit: PropTypes.string,\n};\n\nexport default connect(({ client, ui }) => ({\n    landing_company_shortcode: client.landing_company_shortcode,\n    currency: client.currency,\n    is_fully_authenticated: client.is_fully_authenticated,\n    is_age_verified: client.is_age_verified,\n    is_isle_of_man_residence: client.residence === 'im', // TODO: [deriv-eu] refactor this once more residence checks are required\n    is_belgium_residence: client.residence === 'be', // TODO: [deriv-eu] refactor this once more residence checks are required\n    closeModal: ui.closeRealAccountSignup,\n    switchToVirtual: () => client.switchAccount(client.virtual_account_loginid),\n}))(withRouter(StatusDialogContainer));\n","import classNames from 'classnames';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Modal, Loading, DesktopWrapper, MobileDialog, MobileWrapper } from '@deriv/components';\nimport { routes, isNavigationFromPlatform } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport ModalLoginPrompt from './modal-login-prompt.jsx';\nimport AccountWizard from './account-wizard.jsx';\nimport AddOrManageAccounts from './add-or-manage-accounts.jsx';\nimport FinishedSetCurrency from './finished-set-currency.jsx';\nimport SignupErrorContent from './signup-error-content.jsx';\nimport StatusDialogContainer from './status-dialog-container.jsx';\nimport 'Sass/account-wizard.scss';\nimport 'Sass/real-account-signup.scss';\n\nconst LoadingModal = props => (\n    <div className='account-signup-loader'>\n        <Loading {...props} is_fullscreen={false} />\n    </div>\n);\n\nconst WizardHeading = ({ real_account_signup_target, currency, is_isle_of_man_residence, is_belgium_residence }) => {\n    if (!currency) {\n        return <Localize i18n_default_text='Set a currency for your real account' />;\n    }\n\n    if (\n        (real_account_signup_target === 'iom' && is_isle_of_man_residence) ||\n        (real_account_signup_target === 'malta' && is_belgium_residence)\n    ) {\n        return <Localize i18n_default_text='Add a Deriv Synthetic account' />;\n    }\n\n    switch (real_account_signup_target) {\n        case 'malta':\n        case 'iom':\n            return <Localize i18n_default_text='Add a Deriv Synthetic account' />;\n        case 'maltainvest':\n            return <Localize i18n_default_text='Add a Deriv Financial account' />;\n        default:\n            return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n};\n\nclass RealAccountSignup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal_content: [\n                {\n                    body: () => (\n                        <AccountWizard\n                            onFinishSuccess={this.showStatusDialog}\n                            onLoading={this.showLoadingModal}\n                            onError={this.showErrorModal}\n                            onClose={this.closeModal}\n                            onSuccessSetAccountCurrency={this.showSetCurrencySuccess}\n                        />\n                    ),\n                    title: WizardHeading,\n                },\n                {\n                    body: () => (\n                        <AddOrManageAccounts\n                            onSuccessSetAccountCurrency={this.showSetCurrencySuccess}\n                            onSuccessAddCurrency={this.showStatusDialog}\n                            onLoading={this.showLoadingModal}\n                            onError={this.showErrorModal}\n                        />\n                    ),\n                    title: () => localize('Add or manage account'),\n                },\n                {\n                    body: () => (\n                        <FinishedSetCurrency\n                            prev={this.props.state_value.previous_currency}\n                            current={this.props.state_value.current_currency}\n                            onCancel={this.closeModal}\n                            onSubmit={this.closeModalThenOpenCashier}\n                        />\n                    ),\n                },\n                {\n                    body: () => <StatusDialogContainer />,\n                },\n                {\n                    body: () => <LoadingModal className='loading-modal' />,\n                },\n                {\n                    body: () => (\n                        <SignupErrorContent\n                            message={this.props.state_value.error_message}\n                            code={this.props.state_value.error_code}\n                            onConfirm={this.openPersonalDetails}\n                        />\n                    ),\n                    title: () => localize('Add a real account'),\n                },\n            ],\n        };\n    }\n\n    get modal_height() {\n        const { currency, has_real_account, is_eu, is_eu_enabled } = this.props; // TODO [deriv-eu] remove is_eu_enabled once eu is released.\n        if (this.active_modal_index === 3) return 'auto'; // Status dialog\n        if (!currency) return '688px'; // Set currency modal\n        if (has_real_account && currency) {\n            if (is_eu && is_eu_enabled && this.active_modal_index === 1) {\n                // TODO [deriv-eu] remove is_eu_enabled once eu is released.\n                // Manage account\n                return '400px'; // Since crypto is disabled for EU clients, lower the height of modal\n            }\n            if (this.active_modal_index === 2) {\n                return 'auto';\n            }\n            return '702px'; // Add or manage account modal\n        }\n        return '740px'; // Account wizard modal\n    }\n\n    showStatusDialog = () => {\n        this.props.setParams({\n            active_modal_index: 3,\n        });\n    };\n\n    closeModalThenOpenCashier = () => {\n        this.props.closeRealAccountSignup();\n        this.props.history.push(routes.cashier_deposit);\n    };\n\n    showSetCurrencySuccess = (previous_currency, current_currency) => {\n        this.props.setParams({\n            previous_currency,\n            current_currency,\n            active_modal_index: 2,\n        });\n    };\n\n    showLoadingModal = () => {\n        this.props.setParams({\n            active_modal_index: 4,\n        });\n    };\n\n    cacheFormValues = payload => {\n        localStorage.setItem(\n            'real_account_signup_wizard',\n            JSON.stringify(\n                payload.map(item => {\n                    if (typeof item.form_value === 'object') {\n                        return item.form_value;\n                    }\n                    return false;\n                })\n            )\n        );\n    };\n\n    showErrorModal = (error, payload) => {\n        if (payload) {\n            this.cacheFormValues(payload);\n        }\n\n        this.props.setParams({\n            active_modal_index: 5,\n            error_message: error.message,\n            error_code: error.code,\n        });\n    };\n\n    closeModal = e => {\n        // Do not close modal on external link click event\n        if (e?.target.getAttribute('rel') === 'noopener noreferrer') {\n            return;\n        }\n        if (e?.target.closest('.redirect-notice')) {\n            return;\n        }\n        if (this.active_modal_index !== 3) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n        this.props.closeRealAccountSignup();\n\n        if (isNavigationFromPlatform(this.props.routing_history, routes.smarttrader)) {\n            window.location = routes.smarttrader;\n        }\n    };\n\n    openPersonalDetails = () => {\n        this.props.setParams({\n            active_modal_index: 0,\n        });\n    };\n\n    get is_manage_target() {\n        return this.props.real_account_signup_target === 'manage';\n    }\n\n    get active_modal_index() {\n        const ACCOUNT_WIZARD = 0;\n        const ADD_OR_MANAGE_ACCOUNT = 1;\n\n        if (this.props.state_value.active_modal_index === -1) {\n            return this.props.has_real_account && this.props.currency && this.is_manage_target\n                ? ADD_OR_MANAGE_ACCOUNT\n                : ACCOUNT_WIZARD;\n        }\n\n        return this.props.state_value.active_modal_index;\n    }\n\n    static text_cancel = () => {\n        const post_signup = JSON.parse(sessionStorage.getItem('post_real_account_signup'));\n        if (post_signup) {\n            return localize('Continue to DMT5');\n        }\n        return localize('Maybe later');\n    };\n\n    render() {\n        const { is_real_acc_signup_on, is_logged_in } = this.props;\n        const { title: Title, body: ModalContent } = is_logged_in\n            ? this.state.modal_content[this.active_modal_index]\n            : {\n                  title: this.state.modal_content[this.active_modal_index].title\n                      ? () => this.state.modal_content[this.active_modal_index].title\n                      : null,\n                  body: ModalLoginPrompt,\n              };\n        const has_close_icon = this.active_modal_index < 2 || this.active_modal_index === 5;\n\n        return (\n            <>\n                <DesktopWrapper>\n                    <Modal\n                        id='real_account_signup_modal'\n                        className={classNames('real-account-signup-modal', {\n                            'dc-modal__container_real-account-signup-modal--error': this.active_modal_index === 5,\n                            'dc-modal__container_real-account-signup-modal--success':\n                                this.active_modal_index >= 2 && this.active_modal_index < 5,\n                            'dc-modal__container_real-account-signup-modal--loading': this.active_modal_index === 4,\n                        })}\n                        is_open={is_real_acc_signup_on}\n                        has_close_icon={has_close_icon}\n                        renderTitle={() => {\n                            if (Title) {\n                                return <Title {...this.props} />;\n                            }\n                            return null;\n                        }}\n                        toggleModal={this.closeModal}\n                        height={this.modal_height}\n                        width={!has_close_icon ? 'auto' : '904px'}\n                    >\n                        <ModalContent passthrough={this.props.state_index} />\n                    </Modal>\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <MobileDialog\n                        portal_element_id='modal_root'\n                        wrapper_classname='account-signup-mobile-dialog'\n                        visible={is_real_acc_signup_on}\n                        onClose={this.closeModal}\n                        renderTitle={() => <Title {...this.props} />}\n                    >\n                        <ModalContent />\n                    </MobileDialog>\n                </MobileWrapper>\n            </>\n        );\n    }\n}\n\nexport default connect(({ ui, client, common }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    can_change_fiat_currency: client.can_change_fiat_currency,\n    has_real_account: client.has_active_real_account,\n    currency: client.currency,\n    is_eu: client.is_eu,\n    is_eu_enabled: ui.is_eu_enabled, // TODO [deriv-eu] remove is_eu_enabled once eu is released.\n    is_real_acc_signup_on: ui.is_real_acc_signup_on,\n    real_account_signup_target: ui.real_account_signup_target,\n    is_logged_in: client.is_logged_in,\n    closeRealAccountSignup: ui.closeRealAccountSignup,\n    closeSignupAndOpenCashier: ui.closeSignupAndOpenCashier,\n    setParams: ui.setRealAccountSignupParams,\n    residence: client.residence,\n    is_isle_of_man_residence: client.residence === 'im', // TODO: [deriv-eu] refactor this once more residence checks are required\n    is_belgium_residence: client.residence === 'be', // TODO: [deriv-eu] refactor this once more residence checks are required\n    state_value: ui.real_account_signup,\n    routing_history: common.app_routing_history,\n}))(withRouter(RealAccountSignup));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\n\nconst SetAccountCurrencyModal = ({ is_visible, is_virtual, setCurrency, toggleModal }) => (\n    <Modal\n        id='dt_set_account_currency_modal'\n        has_close_icon={false}\n        is_open={is_visible}\n        small\n        toggleModal={toggleModal}\n        title={localize('You have an account that needs action')}\n    >\n        <Modal.Body>\n            {localize('Please set a currency for your existing real account before creating another account.')}\n        </Modal.Body>\n        <Modal.Footer>\n            {!is_virtual ? (\n                <>\n                    <Button has_effect text={localize('Cancel')} onClick={toggleModal} secondary />\n                    <Button\n                        has_effect\n                        text={localize('Set currency')}\n                        onClick={() => {\n                            toggleModal();\n                            // timeout is to ensure no jumpy animation when modals are overlapping enter/exit transitions\n                            setTimeout(function() {\n                                setCurrency();\n                            }, 250);\n                        }}\n                        primary\n                    />\n                </>\n            ) : (\n                <Button has_effect text={localize('OK')} onClick={toggleModal} primary />\n            )}\n        </Modal.Footer>\n    </Modal>\n);\n\nSetAccountCurrencyModal.propTypes = {\n    is_virtual: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    setCurrency: PropTypes.func,\n    toggleModal: PropTypes.func,\n};\n\nexport default connect(({ client, ui }) => ({\n    is_virtual: client.is_virtual,\n    toggleModal: ui.toggleSetCurrencyModal,\n    setCurrency: ui.openRealAccountSignup,\n    is_visible: ui.is_set_currency_modal_visible,\n}))(SetAccountCurrencyModal);\n","import React from 'react';\n\n/**\n * Listens on emitted events to show notification on available updates.\n *  - IgnorePWAUpdate event will prevent notification\n *  - ListenPWAUpdate event is usefull to re-assign notify on update behavior\n * @param onUpdate\n * @return {null}\n * @constructor\n */\nconst NewVersionNotification = ({ onUpdate }) => {\n    React.useEffect(() => {\n        const removeUpdateListener = () => {\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n\n        const addUpdateListener = () => {\n            document.addEventListener('UpdateAvailable', onUpdate);\n        };\n\n        document.addEventListener('UpdateAvailable', onUpdate);\n        document.addEventListener('IgnorePWAUpdate', removeUpdateListener);\n        document.addEventListener('ListenPWAUpdate', addUpdateListener);\n\n        return () => {\n            document.removeEventListener('IgnorePWAUpdate', removeUpdateListener);\n            document.removeEventListener('ListenPWAUpdate', addUpdateListener);\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n    }, []);\n\n    return null;\n};\n\nexport default NewVersionNotification;\n","import React from 'react';\nimport { getDerivComLink, routes, isMobile, formatDate, isEmptyObject } from '@deriv/shared';\n\nimport { localize, Localize } from '@deriv/translations';\nimport { WS } from 'Services';\n\nimport { getRiskAssessment, isAccountOfType, shouldAcceptTnc, shouldCompleteTax } from '_common/base/client_base';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { website_name } from 'App/Constants/app-config';\nimport { LocalStore, State } from '_common/storage';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nexport const clientNotifications = (ui = {}, client = {}) => {\n    const notifications = {\n        currency: {\n            action: {\n                text: localize('Set currency'),\n                onClick: () => {\n                    ui.toggleNotificationsModal();\n                    ui.openRealAccountSignup();\n                },\n            },\n            key: 'currency',\n            header: localize('Set account currency'),\n            message: localize('Please set the currency of your account to enable trading.'),\n            type: 'danger',\n        },\n        self_exclusion: excluded_until => ({\n            key: 'self_exclusion',\n            header: localize('Self-exclusion detected'),\n            message: (\n                <Localize\n                    i18n_default_text='You have opted to be excluded from {{website_domain}} until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                    values={{\n                        website_domain: website_name,\n                        exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'),\n                        interpolation: { escapeValue: false },\n                    }}\n                    components={[<a key={0} className='link' target='_blank' href={getDerivComLink('contact-us')} />]}\n                />\n            ),\n            type: 'danger',\n        }),\n        authenticate: {\n            action: {\n                route: routes.proof_of_identity,\n                text: localize('Authenticate'),\n            },\n            key: 'authenticate',\n            header: localize('Account authentication'),\n            message: localize('Authenticate your account now to take full advantage of all payment methods available.'),\n            type: 'info',\n        },\n        cashier_locked: {\n            key: 'cashier_locked',\n            header: localize('Cashier disabled'),\n            message: localize(\n                'Deposits and withdrawals have been disabled on your account. Please check your email for more details.'\n            ),\n            type: 'warning',\n        },\n        withdrawal_locked_review: {\n            key: 'withdrawal_locked_review',\n            header: localize('Withdrawal disabled'),\n            message: localize(\n                'Withdrawals have been disabled on your account. Please wait until your uploaded documents are verified.'\n            ),\n            type: 'warning',\n        },\n        withdrawal_locked: {\n            key: 'withdrawal_locked',\n            header: localize('Withdrawal disabled'),\n            message: localize(\n                'Withdrawals have been disabled on your account. Please check your email for more details.'\n            ),\n            type: 'warning',\n        },\n        mt5_withdrawal_locked: {\n            key: 'mt5_withdrawal_locked',\n            header: localize('MT5 withdrawal disabled'),\n            message: localize(\n                'MT5 withdrawals have been disabled on your account. Please check your email for more details.'\n            ),\n            type: 'warning',\n        },\n        document_needs_action: {\n            key: 'document_needs_action',\n            header: localize('Authentication failed'),\n            message: (\n                <Localize\n                    i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                    components={[<BinaryLink key={0} className='link' to={routes.proof_of_identity} />]}\n                />\n            ),\n            type: 'warning',\n        },\n        unwelcome: {\n            ...(isMobile() && {\n                action: {\n                    text: localize('Contact us'),\n                    onClick: () => {\n                        window.open(getDerivComLink('contact-us'));\n                    },\n                },\n            }),\n            key: 'unwelcome',\n            header: localize('Trading and deposits disabled'),\n            message: isMobile() ? (\n                <Localize i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact customer support for assistance.' />\n            ) : (\n                <Localize\n                    i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                    components={[<a key={0} className='link' target='_blank' href={getDerivComLink('contact-us')} />]}\n                />\n            ),\n            type: 'danger',\n        },\n        max_turnover_limit_not_set: {\n            key: 'max_turnover_limit_not_set',\n            header: localize('Remove deposit limits'),\n            message: (\n                <Localize\n                    i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                    components={[<BinaryLink key={0} className='link' to={routes.cashier_deposit} />]}\n                />\n            ),\n            type: 'danger',\n        },\n        mf_retail: {\n            ...(isMobile() && {\n                action: {\n                    text: localize('Contact us'),\n                    onClick: () => {\n                        window.open(getDerivComLink('contact-us'));\n                    },\n                },\n            }),\n            key: 'mf_retail',\n            header: localize('Digital options trading disabled'),\n            message: isMobile() ? (\n                <Localize i18n_default_text='Digital Options Trading has been disabled on your account. Kindly contact customer support for assistance.' />\n            ) : (\n                <Localize\n                    i18n_default_text='Digital Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                    components={[<a key={0} className='link' target='_blank' href={getDerivComLink('contact-us')} />]}\n                />\n            ),\n            type: 'danger',\n        },\n        risk: {\n            action: {\n                text: localize('Complete form'),\n                route: routes.financial_assessment,\n            },\n            key: 'risk',\n            header: localize('Withdrawal and trading limits'),\n            message: localize(\n                'Please complete the Financial Assessment form to lift your withdrawal and trading limits.'\n            ),\n            type: 'warning',\n        },\n        tax: {\n            action: {\n                route: routes.personal_details,\n                text: localize('Complete details'),\n            },\n            key: 'tax',\n            header: localize('Complete your personal details'),\n            message: localize('Please complete your Personal Details before you proceed.'),\n            type: 'danger',\n        },\n        tnc: {\n            action: {\n                onClick: async () => {\n                    await WS.tncApproval();\n                    WS.getSettings();\n                },\n                text: localize('I accept'),\n            },\n            key: 'tnc',\n            header: localize('Terms & conditions updated'),\n            message: (\n                <Localize\n                    i18n_default_text='Please accept our <0>updated Terms and Conditions</0> to proceed.'\n                    components={[\n                        <a\n                            key={0}\n                            className='link'\n                            rel='noopener'\n                            target='_blank'\n                            href={getDerivComLink('terms-and-conditions')}\n                        />,\n                    ]}\n                />\n            ),\n            type: 'warning',\n        },\n        required_fields: {\n            action: {\n                route: routes.personal_details,\n                text: localize('Complete details'),\n            },\n            key: 'required_fields',\n            header: localize('Complete your personal details'),\n            message: localize('Please complete your Personal Details before you proceed.'),\n            type: 'danger',\n        },\n        you_are_offline: {\n            key: 'you_are_offline',\n            header: localize('You are offline'),\n            message: <Localize i18n_default_text='Check your connection.' />,\n            type: 'danger',\n        },\n        password_changed: {\n            key: 'password_changed',\n            header: localize('Password updated.'),\n            message: <Localize i18n_default_text='Please log in with your updated password.' />,\n            type: 'info',\n        },\n        needs_poi: {\n            action: {\n                route: routes.proof_of_identity,\n                text: localize('Verify identity'),\n            },\n            key: 'needs_poi',\n            header: localize('Please verify your proof of identity'),\n            message: localize('To continue trading with us, please confirm who you are.'),\n            type: 'danger',\n        },\n        needs_poa: {\n            action: {\n                route: routes.proof_of_address,\n                text: localize('Verify address'),\n            },\n            key: 'needs_poa',\n            header: localize('Please verify your proof of address'),\n            message: localize('To continue trading with us, please confirm where you live.'),\n            type: 'danger',\n        },\n        needs_poi_virtual: {\n            action: {\n                onClick: async () => {\n                    const { switchAccount, first_switchable_real_loginid } = client;\n\n                    await switchAccount(first_switchable_real_loginid);\n                },\n                text: localize('Verify identity'),\n            },\n            key: 'needs_poi_virtual',\n            header: localize('Please Verify your identity'),\n            message: localize(\n                'We couldn’t verify your personal details with our records, to enable deposit, withdrawals and trading, you need to upload proof of your identity.'\n            ),\n            type: 'danger',\n        },\n        needs_poa_virtual: {\n            action: {\n                route: routes.proof_of_address,\n                text: localize('Verify address'),\n            },\n            key: 'needs_poa_virtual',\n            header: localize('Please Verify your address'),\n            message: localize(\n                'We couldn’t verify your personal details with our records, to enable deposit, withdrawals and trading, you need to upload proof of your address.'\n            ),\n            type: 'danger',\n        },\n        poa_expired: {\n            action: {\n                route: routes.proof_of_address,\n                text: localize('Proof of address'),\n            },\n            key: 'poa_expired',\n            header: localize('Document expired'),\n            message: localize('Your documents for proof of address is expired. Please submit again.'),\n            type: 'danger',\n        },\n        poa_rejected: {\n            key: 'poa_rejected',\n            header: localize('We could not verify your proof of address'),\n            message: (\n                <Localize i18n_default_text='We have disabled trading, deposits and withdrawals for this account.' />\n            ),\n            type: 'danger',\n        },\n        poi_expired: {\n            action: {\n                route: routes.proof_of_identity,\n                text: localize('Proof of identity'),\n            },\n            key: 'poi_expired',\n            header: localize('Proof of identity expired'),\n            message: localize('Your proof of identity document has expired. Please submit a new one.'),\n            type: 'danger',\n        },\n        new_version_available: {\n            action: {\n                onClick: () => window.location.reload(),\n                text: localize('Refresh now'),\n            },\n            key: 'new_version_available',\n            header: localize('A new version of Deriv is available'),\n            message: localize('This page will automatically refresh in 5 minutes to load the latest version.'),\n            type: 'warning',\n            should_hide_close_btn: true,\n            timeout: 300000,\n            timeoutMessage: remaining => localize('Auto update in {{ remaining }} seconds', { remaining }),\n        },\n    };\n    return notifications;\n};\n\nconst hasMissingRequiredField = (account_settings, client) => {\n    if (!account_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica';\n\n    // TODO: [deriv-eu] refactor into its own function once more exceptions are added.\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    return required_fields.some(field => !account_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse(\n            'landing_company.financial_company.requirements.withdrawal'\n        );\n        const necessary_signup_fields = State.getResponse(\n            'landing_company.financial_company.requirements.signup'\n        ).map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence',\n        ];\n        const address_postcode_is_required = residence === 'gb' || landing_company_shortcode === 'iom';\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst getStatusValidations = status_arr =>\n    status_arr.reduce((validations, stats) => {\n        validations[stats] = true;\n        return validations;\n    }, {});\n\nconst addVerificationNotifications = (identity, document, addNotificationMessage) => {\n    if (identity.status === 'expired') addNotificationMessage(clientNotifications().poi_expired);\n\n    if (document.status === 'expired') addNotificationMessage(clientNotifications().poa_expired);\n};\n\nconst checkAccountStatus = (account_status, client, addNotificationMessage, loginid) => {\n    if (isEmptyObject(account_status)) return {};\n    if (loginid !== LocalStore.get('active_loginid')) return {};\n\n    const {\n        authentication: { document, identity, needs_verification },\n        prompt_client_to_authenticate,\n        risk_classification,\n        status,\n    } = account_status;\n\n    const {\n        authenticated,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        professional,\n        max_turnover_limit_not_set,\n        allow_document_upload,\n    } = getStatusValidations(status);\n\n    addVerificationNotifications(identity, document, addNotificationMessage);\n\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n    const should_show_max_turnover = client.landing_company_shortcode === 'iom' && max_turnover_limit_not_set;\n\n    const needs_authentication = needs_verification.length || allow_document_upload;\n    const has_risk_assessment = getRiskAssessment(account_status);\n    const needs_poa = needs_authentication && needs_verification.includes('document');\n    const needs_poi = needs_authentication && needs_verification.includes('identity');\n\n    if (needs_poa) addNotificationMessage(clientNotifications().needs_poa);\n    if (needs_poi) addNotificationMessage(clientNotifications().needs_poi);\n    if (cashier_locked) addNotificationMessage(clientNotifications().cashier_locked);\n    if (withdrawal_locked) {\n        // if client is withdrawal locked but it's because they need to authenticate\n        // and they have submitted verification documents,\n        // we should wait for review of documents to be done and show a different message\n        const is_high_risk = risk_classification === 'high';\n        const should_authenticate = !authenticated || prompt_client_to_authenticate;\n        const doc_is_under_review = document.status === 'pending';\n        if (is_high_risk && should_authenticate && doc_is_under_review) {\n            addNotificationMessage(clientNotifications().withdrawal_locked_review);\n        } else {\n            addNotificationMessage(clientNotifications().withdrawal_locked);\n        }\n    }\n    if (mt5_withdrawal_locked) addNotificationMessage(clientNotifications().mt5_withdrawal_locked);\n    if (document_needs_action) addNotificationMessage(clientNotifications().document_needs_action);\n    if (unwelcome && !should_show_max_turnover) addNotificationMessage(clientNotifications().unwelcome);\n    if (is_mf_retail) addNotificationMessage(clientNotifications().mf_retail);\n\n    if (has_risk_assessment) addNotificationMessage(clientNotifications().risk);\n    if (shouldCompleteTax(account_status)) addNotificationMessage(clientNotifications().tax);\n\n    if (should_show_max_turnover) addNotificationMessage(clientNotifications().max_turnover_limit_not_set);\n    return {\n        has_risk_assessment,\n    };\n};\n\nexport const excluded_notifications = isMobile()\n    ? ['contract_sold']\n    : [\n          'you_are_offline',\n          'password_changed',\n          'switch_to_tick_chart',\n          'contract_sold',\n          'maintenance',\n          'bot_switch_account',\n          'new_version_available',\n      ];\n\nexport const handleClientNotifications = (\n    client,\n    account_settings,\n    account_status,\n    addNotificationMessage,\n    loginid,\n    ui\n) => {\n    const { currency, excluded_until } = client;\n    if (loginid !== LocalStore.get('active_loginid')) return {};\n    if (!currency) addNotificationMessage(clientNotifications(ui).currency);\n    if (excluded_until) {\n        addNotificationMessage(clientNotifications(ui).self_exclusion(excluded_until));\n    }\n\n    const { has_risk_assessment } = checkAccountStatus(account_status, client, addNotificationMessage, loginid);\n\n    if (shouldAcceptTnc(account_settings)) addNotificationMessage(clientNotifications(ui).tnc);\n\n    const has_missing_required_field = hasMissingRequiredField(account_settings, client);\n    if (has_missing_required_field) {\n        addNotificationMessage(clientNotifications(ui).required_fields);\n    }\n\n    return {\n        has_missing_required_field,\n        has_risk_assessment,\n    };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Counter } from '@deriv/components';\nimport { connect } from 'Stores/connect';\n\nconst CashierNotifications = ({ p2p_notification_count }) => (\n    <React.Fragment>\n        <Icon icon='IcCashier' className='header__icon' />\n        {!!p2p_notification_count && <Counter className='cashier__counter' count={p2p_notification_count} />}\n    </React.Fragment>\n);\n\nCashierNotifications.propTypes = {\n    p2p_notification_count: PropTypes.number,\n};\n\nexport default connect(({ modules }) => ({\n    p2p_notification_count: modules.cashier.p2p_notification_count,\n}))(CashierNotifications);\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport CashierNotifications from 'Modules/Cashier/Containers/cashier-notifications.jsx';\n\nexport const header_links = [\n    {\n        id: 'dt_reports_tab',\n        icon: <Icon icon='IcReports' className='header__icon' />,\n        text: () => localize('Reports'),\n        link_to: routes.reports,\n        login_only: true,\n    },\n    {\n        id: 'dt_cashier_tab',\n        icon: <CashierNotifications />,\n        text: () => localize('Cashier'),\n        link_to: routes.cashier,\n        login_only: true,\n    },\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Div100vhContainer, Icon, MobileDrawer, ToggleSwitch } from '@deriv/components';\nimport { routes } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\nimport { WS } from 'Services';\nimport { NetworkStatus } from 'App/Components/Layout/Footer';\nimport ServerTime from 'App/Containers/server-time.jsx';\nimport { BinaryLink } from 'App/Components/Routes';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport LiveChat from '../../Elements/live-chat.jsx';\n\nconst MenuLink = ({ link_to, icon, is_disabled, suffix_icon, text, onClickLink }) => (\n    <React.Fragment>\n        {!link_to ? (\n            <div\n                className={classNames('header__menu-mobile-link', {\n                    'header__menu-mobile-link--disabled': is_disabled,\n                })}\n            >\n                <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                <span className='header__menu-mobile-link-text'>{text}</span>\n                {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n            </div>\n        ) : (\n            <BinaryLink\n                to={link_to}\n                className={classNames('header__menu-mobile-link', {\n                    'header__menu-mobile-link--disabled': is_disabled,\n                })}\n                active_class='header__menu-mobile-link--active'\n                onClick={onClickLink}\n            >\n                <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                <span className='header__menu-mobile-link-text'>{text}</span>\n                {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n            </BinaryLink>\n        )}\n    </React.Fragment>\n);\n\nclass ToggleMenuDrawer extends React.Component {\n    constructor(props) {\n        super(props);\n        // TODO: find better fix for no-op issue\n        this.is_mounted = false;\n        this.state = {\n            needs_financial_assessment: false,\n            is_open: false,\n            needs_verification: false,\n            primary_routes_config: [],\n            secondary_routes_config: [],\n            is_submenu_expanded: false,\n        };\n    }\n\n    componentDidMount() {\n        this.is_mounted = true;\n        WS.wait('authorize', 'get_account_status').then(() => {\n            if (this.props.account_status) {\n                const { authentication, status } = this.props.account_status;\n                const needs_financial_assessment =\n                    this.props.is_high_risk || status.includes('financial_information_not_complete');\n                const needs_verification =\n                    authentication.needs_verification.includes('identity') ||\n                    authentication.needs_verification.includes('document');\n\n                if (this.is_mounted) this.setState({ needs_financial_assessment, needs_verification });\n            }\n        });\n        this.processRoutes();\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n    }\n\n    toggleDrawer = () => {\n        this.setState({ is_open: !this.state.is_open, is_submenu_expanded: false });\n    };\n\n    onToggleSubmenu = is_submenu_expanded => {\n        this.setState({ is_submenu_expanded });\n    };\n\n    getFilteredRoutesConfig = (all_routes_config, routes_to_filter) => {\n        const subroutes_config = all_routes_config.flatMap(i => i.routes || []);\n\n        return routes_to_filter\n            .map(path => all_routes_config.find(r => r.path === path) || subroutes_config.find(r => r.path === path))\n            .filter(route => route);\n    };\n\n    getRoutesWithSubMenu = route_config => {\n        const { needs_financial_assessment, needs_verification } = this.state;\n        const has_access = route_config.is_authenticated ? this.props.is_logged_in : true;\n        if (!has_access) return null;\n\n        if (!route_config.routes) {\n            return (\n                <MobileDrawer.Item key={route_config.title}>\n                    <MenuLink\n                        link_to={route_config.path}\n                        icon={route_config.icon_component}\n                        text={route_config.title}\n                        onClickLink={this.toggleDrawer}\n                    />\n                </MobileDrawer.Item>\n            );\n        }\n\n        const has_subroutes = route_config.routes.some(route => route.subroutes);\n        return (\n            <MobileDrawer.SubMenu\n                key={route_config.title}\n                has_subheader\n                submenu_icon={route_config.icon_component}\n                submenu_title={route_config.title}\n                submenu_suffix_icon='IcChevronRight'\n                onToggle={this.onToggleSubmenu}\n            >\n                {!has_subroutes &&\n                    route_config.routes.map(route => {\n                        if (\n                            (route.path !== routes.cashier_pa || this.props.is_payment_agent_visible) &&\n                            (route.path !== routes.cashier_pa_transfer ||\n                                this.props.is_payment_agent_transfer_visible) &&\n                            (route.path !== routes.cashier_p2p || this.props.is_p2p_visible) &&\n                            (route.path !== routes.cashier_onramp || this.props.is_onramp_tab_visible)\n                        ) {\n                            return (\n                                <MobileDrawer.Item key={route.title}>\n                                    <MenuLink\n                                        link_to={route.path}\n                                        icon={route.icon_component}\n                                        text={route.title}\n                                        onClickLink={this.toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                            );\n                        }\n                        return undefined;\n                    })}\n                {has_subroutes &&\n                    route_config.routes.map(route => (\n                        <MobileDrawer.SubMenuSection\n                            key={route.title}\n                            section_icon={route.icon}\n                            section_title={route.title}\n                        >\n                            {route.subroutes.map(subroute => (\n                                <MenuLink\n                                    key={subroute.title}\n                                    is_disabled={\n                                        (!needs_verification &&\n                                            !needs_financial_assessment &&\n                                            /proof-of-identity|proof-of-address|financial-assessment/.test(\n                                                subroute.path\n                                            )) ||\n                                        subroute.is_disabled\n                                    }\n                                    link_to={subroute.path}\n                                    text={subroute.title}\n                                    onClickLink={this.toggleDrawer}\n                                />\n                            ))}\n                        </MobileDrawer.SubMenuSection>\n                    ))}\n            </MobileDrawer.SubMenu>\n        );\n    };\n\n    processRoutes() {\n        const routes_config = getRoutesConfig();\n        const primary_routes = [routes.reports, routes.account, routes.cashier];\n        const secondary_routes = [];\n\n        this.setState({\n            primary_routes_config: this.getFilteredRoutesConfig(routes_config, primary_routes),\n            secondary_routes_config: this.getFilteredRoutesConfig(routes_config, secondary_routes),\n        });\n    }\n\n    render() {\n        const { primary_routes_config, secondary_routes_config } = this.state;\n\n        return (\n            <React.Fragment>\n                <a id='dt_mobile_drawer_toggle' onClick={this.toggleDrawer} className='header__mobile-drawer-toggle'>\n                    <Icon icon='IcHamburger' width='16px' height='16px' className='header__mobile-drawer-icon' />\n                </a>\n                <MobileDrawer\n                    alignment='left'\n                    icon_class='header__menu-toggle'\n                    is_open={this.state.is_open}\n                    toggle={this.toggleDrawer}\n                    id='dt_mobile_drawer'\n                    enableApp={this.props.enableApp}\n                    disableApp={this.props.disableApp}\n                    title={localize('Menu')}\n                    livechat={<LiveChat is_mobile_drawer />}\n                    height='100vh'\n                    width='295px'\n                >\n                    <Div100vhContainer height_offset='40px'>\n                        <div className='header__menu-mobile-body-wrapper'>\n                            <MobileDrawer.SubHeader\n                                className={classNames({\n                                    'dc-mobile-drawer__subheader--hidden': this.state.is_submenu_expanded,\n                                })}\n                            >\n                                {this.props.platform_switcher}\n                            </MobileDrawer.SubHeader>\n                            <MobileDrawer.Body>\n                                <div className='header__menu-mobile-platform-switcher' id='mobile_platform_switcher' />\n                                <MobileDrawer.Item>\n                                    <MenuLink\n                                        link_to={routes.trade}\n                                        icon='IcTrade'\n                                        text={localize('Trade')}\n                                        onClickLink={this.toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                                {primary_routes_config.map(route_config => this.getRoutesWithSubMenu(route_config))}\n                                <MobileDrawer.Item\n                                    className='header__menu-mobile-theme'\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        this.props.toggleTheme(!this.props.is_dark_mode);\n                                    }}\n                                >\n                                    <div\n                                        className={classNames('header__menu-mobile-link', {\n                                            'header__menu-mobile-link--active': this.props.is_dark_mode,\n                                        })}\n                                    >\n                                        <Icon className='header__menu-mobile-link-icon' icon={'IcTheme'} />\n                                        <span className='header__menu-mobile-link-text'>{localize('Dark theme')}</span>\n                                        <ToggleSwitch\n                                            id='dt_mobile_drawer_theme_toggler'\n                                            classNameLabel='header__menu-mobile-link-toggler-label'\n                                            classNameButton={classNames('header__menu-mobile-link-toggler-button', {\n                                                'header__menu-mobile-link-toggler-button--active': this.props\n                                                    .is_dark_mode,\n                                            })}\n                                            handleToggle={() => this.props.toggleTheme(!this.props.is_dark_mode)}\n                                            is_enabled={this.props.is_dark_mode}\n                                        />\n                                    </div>\n                                </MobileDrawer.Item>\n                                {secondary_routes_config.map(route_config => this.getRoutesWithSubMenu(route_config))}\n                                {this.props.is_logged_in && (\n                                    <MobileDrawer.Item\n                                        onClick={() => {\n                                            this.props.logoutClient();\n                                            this.toggleDrawer();\n                                        }}\n                                    >\n                                        <MenuLink icon='IcLogout' text={localize('Log out')} />\n                                    </MobileDrawer.Item>\n                                )}\n                            </MobileDrawer.Body>\n                        </div>\n                        <MobileDrawer.Footer>\n                            <ServerTime is_mobile />\n                            <NetworkStatus is_mobile />\n                        </MobileDrawer.Footer>\n                    </Div100vhContainer>\n                </MobileDrawer>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ToggleMenuDrawer;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\nimport { routes, isMobile, getDecimalPlaces } from '@deriv/shared';\n\nimport { AccountActions, MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport platform_config from 'App/Constants/platform-config';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport { connect } from 'Stores/connect';\nimport { clientNotifications } from 'Stores/Helpers/client-notifications';\nimport { header_links } from 'App/Constants/header-links';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport { AccountsInfoLoader } from 'App/Components/Layout/Header/Components/Preloader';\n\nclass Header extends React.Component {\n    toggle_menu_drawer_ref = React.createRef();\n\n    addUpdateNotification = () => {\n        this.props.addNotificationMessage(clientNotifications().new_version_available);\n    };\n\n    onClickDeposit = () => {\n        this.props.history.push(routes.cashier_deposit);\n    };\n\n    render() {\n        const {\n            account_status,\n            acc_switcher_disabled_message,\n            app_routing_history,\n            balance,\n            currency,\n            enableApp,\n            header_extension,\n            is_acc_switcher_on,\n            is_acc_switcher_disabled,\n            is_app_disabled,\n            is_dark_mode,\n            is_high_risk,\n            is_logged_in,\n            is_logging_in,\n            is_mt5_allowed,\n            is_notifications_visible,\n            is_p2p_visible,\n            is_payment_agent_visible,\n            is_payment_agent_transfer_visible,\n            is_route_modal_on,\n            is_virtual,\n            disableApp,\n            logoutClient,\n            notifications_count,\n            setDarkMode,\n            toggleAccountsDialog,\n            toggleNotifications,\n            openRealAccountSignup,\n        } = this.props;\n\n        const filterPlatformsForClients = payload =>\n            payload.filter(config => {\n                // non-CR clients cannot open MT5 account\n                const is_mt5_eligible = !(is_logged_in && config.link_to === routes.mt5 && !is_mt5_allowed);\n                return is_mt5_eligible;\n            });\n\n        return (\n            <header\n                className={classNames('header', {\n                    'header--is-disabled': is_app_disabled || is_route_modal_on,\n                })}\n            >\n                <div className='header__menu-items'>\n                    <div className='header__menu-left'>\n                        <DesktopWrapper>\n                            <PlatformSwitcher\n                                app_routing_history={app_routing_history}\n                                platform_config={filterPlatformsForClients(platform_config)}\n                            />\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            <ToggleMenuDrawer\n                                ref={this.toggle_menu_drawer_ref}\n                                account_status={account_status}\n                                enableApp={enableApp}\n                                disableApp={disableApp}\n                                location={this.props.location}\n                                logoutClient={logoutClient}\n                                is_dark_mode={is_dark_mode}\n                                is_high_risk={is_high_risk}\n                                is_logged_in={is_logged_in}\n                                is_p2p_visible={is_p2p_visible}\n                                is_payment_agent_transfer_visible={is_payment_agent_transfer_visible}\n                                is_payment_agent_visible={is_payment_agent_visible}\n                                toggleTheme={setDarkMode}\n                                platform_switcher={\n                                    <PlatformSwitcher\n                                        app_routing_history={app_routing_history}\n                                        is_mobile\n                                        platform_config={filterPlatformsForClients(platform_config)}\n                                        toggleDrawer={this.toggle_menu_drawer_ref.current?.toggleDrawer}\n                                    />\n                                }\n                            />\n                            {header_extension && is_logged_in && (\n                                <div className='header__menu-left-extensions'>{header_extension}</div>\n                            )}\n                        </MobileWrapper>\n                        <MenuLinks is_logged_in={is_logged_in} items={header_links} />\n                    </div>\n                    <div\n                        className={classNames('header__menu-right', {\n                            'header__menu-right--mobile': isMobile(),\n                        })}\n                    >\n                        {is_logging_in && (\n                            <div\n                                className={classNames('acc-info__preloader', {\n                                    'acc-info__preloader--no-currency': !currency,\n                                    'acc-info__preloader--is-crypto': getDecimalPlaces(currency) > 2,\n                                })}\n                            >\n                                <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={isMobile()} speed={3} />\n                            </div>\n                        )}\n                        <div className='acc-info__container'>\n                            <AccountActions\n                                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                                balance={balance}\n                                currency={currency}\n                                disableApp={disableApp}\n                                enableApp={enableApp}\n                                is_acc_switcher_on={is_acc_switcher_on}\n                                is_acc_switcher_disabled={is_acc_switcher_disabled}\n                                is_notifications_visible={is_notifications_visible}\n                                is_logged_in={is_logged_in}\n                                is_virtual={is_virtual}\n                                onClickDeposit={this.onClickDeposit}\n                                notifications_count={notifications_count}\n                                toggleAccountsDialog={toggleAccountsDialog}\n                                toggleNotifications={toggleNotifications}\n                                openRealAccountSignup={openRealAccountSignup}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <RealAccountSignup />\n                <SetAccountCurrencyModal />\n                <NewVersionNotification onUpdate={this.addUpdateNotification} />\n            </header>\n        );\n    }\n}\n\nHeader.propTypes = {\n    account_status: PropTypes.object,\n    acc_switcher_disabled_message: PropTypes.string,\n    app_routing_history: PropTypes.array,\n    balance: PropTypes.string,\n    currency: PropTypes.string,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_acc_switcher_disabled: PropTypes.bool,\n    is_acc_switcher_on: PropTypes.bool,\n    is_app_disabled: PropTypes.bool,\n    is_dark_mode: PropTypes.bool,\n    is_high_risk: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    is_notifications_visible: PropTypes.bool,\n    is_payment_agent_visible: PropTypes.bool,\n    is_payment_agent_transfer_visible: PropTypes.bool,\n    is_p2p_visible: PropTypes.bool,\n    is_route_modal_on: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    logoutClient: PropTypes.func,\n    notifications_count: PropTypes.any,\n    setDarkMode: PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    toggleNotifications: PropTypes.func,\n};\n\nexport default connect(({ client, common, ui, modules }) => ({\n    acc_switcher_disabled_message: ui.account_switcher_disabled_message,\n    account_status: client.account_status,\n    app_routing_history: common.app_routing_history,\n    is_p2p_visible: modules.cashier.is_p2p_visible,\n    is_payment_agent_visible: modules.cashier.is_payment_agent_visible,\n    is_payment_agent_transfer_visible: modules.cashier.is_payment_agent_transfer_visible,\n    balance: client.balance,\n    currency: client.currency,\n    is_logged_in: client.is_logged_in,\n    is_logging_in: client.is_logging_in,\n    logoutClient: client.logout,\n    is_virtual: client.is_virtual,\n    enableApp: ui.enableApp,\n    header_extension: ui.header_extension,\n    is_acc_switcher_disabled: ui.is_account_switcher_disabled,\n    is_acc_switcher_on: !!ui.is_accounts_switcher_on,\n    is_dark_mode: ui.is_dark_mode_on,\n    is_app_disabled: ui.is_app_disabled,\n    is_high_risk: client.is_high_risk,\n    is_loading: ui.is_loading,\n    is_mt5_allowed: client.is_mt5_allowed,\n    notifications_count: ui.notifications.length,\n    is_notifications_visible: ui.is_notifications_visible,\n    is_route_modal_on: ui.is_route_modal_on,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    disableApp: ui.disableApp,\n    toggleAccountsDialog: ui.toggleAccountsDialog,\n    setDarkMode: ui.setDarkMode,\n    toggleNotifications: ui.toggleNotificationsModal,\n    addNotificationMessage: ui.addNotificationMessage,\n}))(withRouter(Header));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button className={className} type='button' onClick={onClick} aria-label={localize('Close')} />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const icon_types = {\n    danger: 'IcAlertDanger',\n    info: 'IcAlertInfo',\n    success: 'IcAlertSuccess',\n    warning: 'IcAlertWarning',\n    contract_sold: 'IcAlertInfo',\n};\n\nexport const types = {\n    danger: 'notification--danger',\n    info: 'notification--info',\n    success: 'notification--success',\n    warning: 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger: 2,\n        warning: 3,\n        info: 4,\n        success: 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { icon_types } from './constants';\n\nconst NotificationStatusIcons = ({ type, class_suffix }) => {\n    // we cannot lazyload danger icon for notification message as its also meant for offline status notification\n    // if danger icon is not lazyloaded and user loses internet connection, it will crash with missing chunk error\n    if (type && type === 'danger') {\n        return (\n            <Icon\n                icon='IcAlertDanger'\n                className={classNames('inline-icon', 'notification__icon-type', {\n                    [`notification__icon-type--${class_suffix}`]: class_suffix,\n                })}\n            />\n        );\n    }\n    return (\n        <React.Fragment>\n            {!!type && (\n                <Icon\n                    icon={icon_types[type]}\n                    className={classNames('notification__icon-type', {\n                        [`notification__icon-type--${class_suffix}`]: class_suffix,\n                    })}\n                    color={type === 'success' ? 'green' : undefined}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nNotificationStatusIcons.propTypes = {\n    class_suffix: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport default NotificationStatusIcons;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, LinearProgress } from '@deriv/components';\nimport { isEmptyObject } from '@deriv/shared';\nimport CloseButton from './close-button.jsx';\nimport NotificationStatusIcons from './notification-status-icons.jsx';\nimport { default_delay, types } from './constants';\nimport { BinaryLink } from '../../Routes';\n\nconst Notification = ({ data, removeNotificationMessage }) => {\n    const destroy = is_closed_by_user => {\n        removeNotificationMessage(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div\n            className={classNames('notification', types[data.type], {\n                'notification--small': data.size === 'small',\n            })}\n        >\n            <div className='notification__icon-background'>\n                <NotificationStatusIcons type={data.type} class_suffix='is-background' />\n            </div>\n            <div className='notification__icon'>\n                <NotificationStatusIcons type={data.type} />\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                {data.timeout && (\n                    <LinearProgress\n                        className='notification__timeout'\n                        timeout={data.timeout}\n                        action={data.action.onClick}\n                        render={data.timeoutMessage}\n                    />\n                )}\n                <p className='notification__text-body'>{data.message}</p>\n                {!isEmptyObject(data.action) && (\n                    <React.Fragment>\n                        {data.action.route ? (\n                            <BinaryLink\n                                className={classNames('dc-btn', 'dc-btn--secondary', 'notification__cta-button')}\n                                to={data.action.route}\n                            >\n                                <span className='dc-btn__text'>{data.action.text}</span>\n                            </BinaryLink>\n                        ) : (\n                            <Button\n                                className='notification__cta-button'\n                                onClick={data.action.onClick}\n                                text={data.action.text}\n                                secondary\n                            />\n                        )}\n                    </React.Fragment>\n                )}\n            </div>\n            {!data.should_hide_close_btn && <CloseButton className='notification__close-button' onClick={onClick} />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        action: PropTypes.shape({\n            onClick: PropTypes.func,\n            route: PropTypes.string,\n            text: PropTypes.string,\n        }),\n        closeOnClick: PropTypes.func,\n        delay: PropTypes.number,\n        header: PropTypes.string,\n        is_auto_close: PropTypes.bool,\n        message: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size: PropTypes.oneOf(['small']),\n        type: PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotificationMessage: PropTypes.func,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport Notification, { max_display_notifications } from '../Components/Elements/NotificationMessage';\nimport 'Sass/app/_common/components/app-notification-message.scss';\n\nclass AppNotificationMessages extends React.Component {\n    state = {};\n    setRef = el => {\n        if (el && el.parentElement) {\n            this.setState({\n                bounds: el.parentElement.getBoundingClientRect(),\n            });\n        }\n    };\n\n    render() {\n        const allowed_on_mobile = ['mf_retail', 'unwelcome', 'contract_sold'];\n\n        const { marked_notifications, notification_messages, removeNotificationMessage } = this.props;\n        const { bounds } = this.state;\n        const style = isMobile()\n            ? {\n                  top: bounds && bounds.top + 8,\n              }\n            : null;\n\n        const notifications = notification_messages\n            .filter(\n                message =>\n                    !marked_notifications.includes(message.key) &&\n                    (isMobile() ? allowed_on_mobile.includes(message.key) : true)\n            )\n            .slice(0, max_display_notifications);\n\n        if (notifications.length === 0) return null;\n\n        const content = (\n            <div className='notification-messages' style={style}>\n                <TransitionGroup component='div'>\n                    {notifications.map((notification, idx) => (\n                        <CSSTransition\n                            appear\n                            key={idx}\n                            in={!!notification.header}\n                            timeout={150}\n                            classNames={{\n                                appear: 'notification--enter',\n                                enter: 'notification--enter',\n                                enterDone: 'notification--enter-done',\n                                exit: 'notification--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <Notification data={notification} removeNotificationMessage={removeNotificationMessage} />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </div>\n        );\n\n        const portal = ReactDOM.createPortal(content, document.getElementById('deriv_app'));\n\n        return (\n            <React.Fragment>\n                <DesktopWrapper>{content}</DesktopWrapper>\n                <MobileWrapper>\n                    <div ref={this.setRef} className='notification-messages-bounds'>\n                        {portal}\n                    </div>\n                </MobileWrapper>\n            </React.Fragment>\n        );\n    }\n}\n\nAppNotificationMessages.propTypes = {\n    notification_messages: PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick: PropTypes.func,\n            delay: PropTypes.number,\n            header: PropTypes.string,\n            is_auto_close: PropTypes.bool,\n            message: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n            size: PropTypes.oneOf(['small']),\n            type: PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']),\n        })\n    ),\n    removeNotificationMessage: PropTypes.func,\n};\n\nexport default connect(({ ui }) => ({\n    marked_notifications: ui.marked_notifications,\n    notification_messages: ui.notification_messages,\n    removeNotificationMessage: ui.removeNotificationMessage,\n}))(AppNotificationMessages);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport { website_name } from 'App/Constants/app-config';\n\nconst DenialOfServiceModal = ({ disableApp, enableApp, is_loading, is_visible, onCancel, onConfirm }) => (\n    <Dialog\n        title={localize(\"That's not ready yet!\")}\n        confirm_button_text={localize('Stay on {{website_domain}}', { website_domain: website_name })}\n        cancel_button_text={localize('Go to Binary.com')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        disableApp={disableApp}\n        enableApp={enableApp}\n        is_loading={is_loading}\n        is_closed_on_cancel={false}\n        is_visible={is_visible}\n    >\n        <Localize i18n_default_text='Real money accounts are currently unavailable.' />\n    </Dialog>\n);\n\nDenialOfServiceModal.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nexport default connect(({ ui }) => ({\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_loading: ui.is_loading,\n}))(DenialOfServiceModal);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\n\nconst MT5AccountNeededModal = ({\n    is_open,\n    account_needed_modal_props: { target, target_label, target_dmt5_label },\n    onClose,\n    disableApp,\n    enableApp,\n    openRealAccountSignup,\n}) => {\n    const createAccount = () => {\n        onClose();\n        openRealAccountSignup(target);\n    };\n\n    return (\n        <Dialog\n            title={localize('You’ll need a {{deriv_account}} account', {\n                deriv_account: target_label,\n            })}\n            confirm_button_text={localize('Add {{deriv_account}} account', {\n                deriv_account: target_label,\n            })}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Cancel')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n        >\n            <Localize\n                i18n_default_text='Please add a {{deriv_account}} account first before adding a {{dmt5_account}} account. Deposits and withdrawals for your DMT5 account are done by transferring funds to and from your Deriv account.'\n                values={{\n                    deriv_account: target_label,\n                    dmt5_account: target_dmt5_label,\n                }}\n            />\n        </Dialog>\n    );\n};\n\nMT5AccountNeededModal.propTypes = {\n    is_open: PropTypes.bool,\n    required_account: PropTypes.object,\n    onClose: PropTypes.func,\n};\n\nexport default connect(({ ui }) => ({\n    is_open: ui.is_account_needed_modal_on,\n    account_needed_modal_props: ui.account_needed_modal_props,\n    onClose: ui.closeAccountNeededModal,\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    openRealAccountSignup: ui.openRealAccountSignup,\n}))(MT5AccountNeededModal);\n","import React from 'react';\nimport { isBot, isMT5, urlFor } from '@deriv/shared';\n\nimport DenialOfServiceModal from 'App/Components/Elements/Modals/DenialOfServiceModal';\nimport MT5AccountNeededModal from 'App/Components/Elements/Modals/mt5-account-needed-modal.jsx';\nimport { connect } from 'Stores/connect';\n\nconst AccountSignupModal = React.lazy(() =>\n    import(/* webpackChunkName: \"account-signup-modal\" */ '../AccountSignupModal')\n);\nconst ResetPasswordModal = React.lazy(() =>\n    import(/* webpackChunkName: \"reset-password-modal\" */ '../ResetPasswordModal')\n);\nconst SetResidenceModal = React.lazy(() =>\n    import(/* webpackChunkName: \"set-residence-modal\"  */ '../SetResidenceModal')\n);\nconst RealityCheckModal = React.lazy(() =>\n    import(/* webpackChunkName: \"reality-check-modal\"  */ '../RealityCheckModal')\n);\nconst AccountTypesModal = React.lazy(() =>\n    import(/* webpackChunkName: \"account-types-modal\"  */ '../AccountTypesModal')\n);\n\nconst AppModals = ({\n    is_account_needed_modal_on,\n    is_account_types_modal_visible,\n    is_denial_of_service_modal_visible,\n    is_reality_check_visible,\n    is_set_residence_modal_visible,\n    url_action_param,\n    switchAccount,\n    virtual_account_loginid,\n}) => {\n    let ComponentToLoad = null;\n    switch (url_action_param) {\n        case 'reset_password':\n            ComponentToLoad = <ResetPasswordModal />;\n            break;\n        case 'signup':\n            ComponentToLoad = <AccountSignupModal />;\n            break;\n        default:\n            // TODO: [deriv-eu] Remove this pop up after EU merge into production\n            if (is_denial_of_service_modal_visible) {\n                const denialOfServiceOnCancel = () => {\n                    const trade_link = isMT5() ? 'user/metatrader' : 'trading';\n                    const link_to = isBot() ? 'bot' : trade_link;\n                    window.open(urlFor(link_to, { legacy: true }));\n                };\n\n                const denialOfServiceOnConfirm = async () => {\n                    await switchAccount(virtual_account_loginid);\n                };\n\n                ComponentToLoad = (\n                    <DenialOfServiceModal\n                        onConfirm={denialOfServiceOnConfirm}\n                        onCancel={denialOfServiceOnCancel}\n                        is_visible={is_denial_of_service_modal_visible}\n                    />\n                );\n            } else if (is_set_residence_modal_visible) {\n                ComponentToLoad = <SetResidenceModal />;\n            }\n            break;\n    }\n\n    if (is_account_types_modal_visible) {\n        ComponentToLoad = <AccountTypesModal />;\n    }\n\n    if (is_account_needed_modal_on) {\n        ComponentToLoad = <MT5AccountNeededModal />;\n    }\n\n    if (is_reality_check_visible) {\n        ComponentToLoad = <RealityCheckModal />;\n    }\n\n    return ComponentToLoad ? <React.Suspense fallback={<div />}>{ComponentToLoad}</React.Suspense> : null;\n};\n\nexport default connect(({ client, ui }) => ({\n    is_account_types_modal_visible: ui.is_account_types_modal_visible,\n    is_account_needed_modal_on: ui.is_account_needed_modal_on,\n    is_set_residence_modal_visible: ui.is_set_residence_modal_visible,\n    is_real_acc_signup_on: ui.is_real_acc_signup_on,\n    is_denial_of_service_modal_visible: !client.is_client_allowed_to_visit,\n    is_reality_check_visible: client.is_reality_check_visible,\n    switchAccount: client.switchAccount,\n    virtual_account_loginid: client.virtual_account_loginid,\n}))(AppModals);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport BinaryRoutes from 'App/Components/Routes';\nimport { connect } from 'Stores/connect';\n\nconst Error = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: UILoader,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nclass Routes extends React.Component {\n    unlisten_to_change = null;\n    initial_route = null;\n\n    componentDidMount() {\n        if (!this.unlisten_to_change && !this.initial_route) {\n            this.initial_route = this.props.location.pathname;\n        }\n\n        this.props.setInitialRouteHistoryItem(this.props.history.location);\n\n        this.unlisten_to_change = this.props.history.listen((route_to, action) => {\n            if (action === 'PUSH') this.props.addRouteHistoryItem({ ...route_to, action });\n        });\n\n        this.props.setAppRouterHistory(this.props.history);\n    }\n\n    componentWillUnmount() {\n        if (typeof this.unlisten_to_change === 'function') {\n            this.unlisten_to_change();\n            this.unlisten_to_change = null;\n            this.initial_route = null;\n        }\n    }\n\n    render() {\n        const { error, has_error, is_logged_in, passthrough } = this.props;\n\n        if (has_error) {\n            return <Error {...error} />;\n        }\n\n        return <BinaryRoutes is_logged_in={is_logged_in} passthrough={passthrough} />;\n    }\n}\n\nRoutes.propTypes = {\n    error: MobxPropTypes.objectOrObservableObject,\n    has_error: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(\n    connect(({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error: common.error,\n        has_error: common.has_error,\n        setAppRouterHistory: common.setAppRouterHistory,\n        addRouteHistoryItem: common.addRouteHistoryItem,\n        setInitialRouteHistoryItem: common.setInitialRouteHistoryItem,\n    }))(Routes)\n);\n","import { action } from 'mobx';\nimport NetworkMonitorBase from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = store => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template } from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input = input;\n        this.rules = rules;\n        this.store = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [\n                rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`,\n            ]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name: is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import { action, intercept, observable, reaction, toJS, when } from 'mobx';\nimport { isProduction, isEmptyObject } from '@deriv/shared';\n\nimport Validator from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    onPreSwitchAccount(listener) {\n        this.preSwitchAccountDisposer = when(\n            () => this.root_store.client.pre_switch_broadcast,\n            async () => {\n                try {\n                    const result = this.pre_switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setPreSwitchAccount(false);\n                            this.onPreSwitchAccount(this.pre_switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Pre-switch account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.pre_switch_account_listener = listener;\n    }\n\n    @action.bound\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    @action.bound\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    @action.bound\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    @action.bound\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    @action.bound\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    @action.bound\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    @action.bound\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    @action.bound\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    @action.bound\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    @action.bound\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import { isCryptocurrency } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const buildCurrenciesList = payout_currencies => {\n    const fiat = [];\n    const crypto = [];\n\n    payout_currencies.forEach(cur => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]: fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency = supported_currencies.find(c => c.value === currency)\n        ? currency\n        : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import moment from 'moment';\nimport { action, computed, observable, runInAction, when, reaction, toJS } from 'mobx';\nimport {\n    setCurrencies,\n    isEmptyObject,\n    getPropertyValue,\n    removeEmptyPropertiesFromObject,\n    isDesktopOs,\n    getUrlSmartTrader,\n    toMoment,\n} from '@deriv/shared';\n\nimport { requestLogout, WS } from 'Services';\nimport ClientBase from '_common/base/client_base';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket from '_common/base/socket_base';\nimport * as SocketCache from '_common/base/socket_cache';\nimport { localize } from '@deriv/translations';\n\nimport { LocalStore, State } from '_common/storage';\nimport { isEuCountry } from '_common/utility';\nimport BinarySocketGeneral from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore from './base-store';\nimport { getClientAccountType, getMT5AccountType } from './Helpers/client';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nconst store_name = 'client_store';\nconst eu_shortcode_regex = new RegExp('^(maltainvest|malta|iom)$');\nconst eu_excluded_regex = new RegExp('^mt$');\n\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable email;\n    @observable accounts = {};\n    @observable pre_switch_broadcast = false;\n    @observable switched = '';\n    @observable is_switching = false;\n    @observable switch_broadcast = false;\n    @observable initialized_broadcast = false;\n    @observable currencies_list = {};\n    @observable residence_list = [];\n    @observable states_list = [];\n    @observable selected_currency = '';\n    @observable is_populating_account_list = false;\n    @observable is_populating_mt5_account_list = true;\n    @observable has_reality_check = false;\n    @observable is_reality_check_dismissed;\n    @observable reality_check_dur;\n    @observable reality_check_timeout;\n    @observable website_status = {};\n    @observable account_settings = {};\n    @observable account_status = {};\n    @observable device_data = {};\n    @observable is_logging_in = false;\n    @observable has_logged_out = false;\n    @observable landing_companies = {\n        financial_company: {},\n        gaming_company: {},\n    };\n\n    @observable upgradeable_landing_companies = [];\n    @observable mt5_login_list = [];\n    @observable statement = [];\n    @observable obj_total_balance = {\n        amount_real: undefined,\n        amount_mt5: undefined,\n        currency: '',\n    };\n\n    @observable verification_code = {\n        signup: '',\n        reset_password: '',\n        payment_withdraw: '',\n        payment_agent_withdraw: '',\n    };\n    @observable account_limits = {};\n\n    @observable local_currency_config = {\n        currency: '',\n        decimal_places: undefined,\n    };\n\n    is_mt5_account_list_updated = false;\n\n    constructor(root_store) {\n        const local_storage_properties = ['device_data'];\n        super({ root_store, local_storage_properties, store_name });\n\n        when(\n            () => this.should_have_real_account,\n            () => {\n                this.root_store.ui.showAccountTypesModalForEuropean();\n                this.onRealAccountSignupEnd(() => {\n                    if (!this.has_any_real_account) {\n                        this.root_store.ui.showAccountTypesModalForEuropean();\n                    }\n\n                    return Promise.resolve();\n                });\n\n                if (!this.root_store.ui.is_real_acc_signup_on) {\n                    this.root_store.ui.toggleAccountTypesModal(true);\n                }\n            }\n        );\n        when(\n            () => !this.is_logged_in && this.root_store.ui && this.root_store.ui.is_real_acc_signup_on,\n            () => this.root_store.ui.closeRealAccountSignup()\n        );\n    }\n\n    @computed\n    get balance() {\n        if (isEmptyObject(this.accounts)) return undefined;\n        return this.accounts[this.loginid] && 'balance' in this.accounts[this.loginid]\n            ? this.accounts[this.loginid].balance.toString()\n            : undefined;\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        // TODO: [deriv-eu] Remove this after complete EU merge into production\n        return !!(\n            this.root_store.ui.is_eu_enabled || // TODO: [deriv-eu] Remove this after complete EU merge into production\n            !this.is_logged_in ||\n            this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get is_reality_check_visible() {\n        if (!this.loginid || !this.landing_company) {\n            return false;\n        }\n        return !!(this.has_reality_check && !this.reality_check_dismissed && this.root_store.ui.is_eu_enabled); // TODO [deriv-eu] remove is_eu_enabled check once EU is ready for production\n    }\n\n    @computed\n    get reality_check_duration() {\n        return this.has_reality_check ? this.reality_check_dur || +LocalStore.get('reality_check_duration') : undefined;\n    }\n\n    @computed\n    get reality_check_dismissed() {\n        return this.has_reality_check\n            ? this.is_reality_check_dismissed || JSON.parse(LocalStore.get('reality_check_dismissed') || false)\n            : undefined;\n    }\n\n    @computed\n    get has_active_real_account() {\n        return this.active_accounts.some(acc => acc.is_virtual === 0);\n    }\n\n    @computed\n    get has_maltainvest_account() {\n        return this.active_accounts.some(acc => acc.landing_company_shortcode === 'maltainvest');\n    }\n\n    @computed\n    get has_malta_account() {\n        return this.active_accounts.some(acc => acc.landing_company_shortcode === 'malta');\n    }\n\n    @computed\n    get has_any_real_account() {\n        return this.account_list.some(acc => acc.is_virtual === 0);\n    }\n\n    @computed\n    get first_switchable_real_loginid() {\n        const result = this.active_accounts.find(\n            acc => acc.is_virtual === 0 && acc.landing_company_shortcode === 'svg'\n        );\n        return result.loginid || undefined;\n    }\n\n    @computed\n    get can_change_fiat_currency() {\n        const has_no_mt5 = !this.has_mt5_login;\n        const has_no_transaction = this.statement.count === 0 && this.statement.transactions.length === 0;\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n        return !this.is_virtual && has_account_criteria && this.current_currency_type === 'fiat';\n    }\n\n    @computed\n    get legal_allowed_currencies() {\n        if (!this.landing_companies) return [];\n        if (this.root_store.ui && this.root_store.ui.real_account_signup_target) {\n            const target = this.root_store.ui.real_account_signup_target === 'maltainvest' ? 'financial' : 'gaming';\n            if (this.landing_companies[`${target}_company`]) {\n                return this.landing_companies[`${target}_company`].legal_allowed_currencies;\n            }\n        }\n        if (this.landing_companies.gaming_company) {\n            return this.landing_companies.gaming_company.legal_allowed_currencies;\n        }\n        if (this.landing_companies.financial_company) {\n            return this.landing_companies.financial_company.legal_allowed_currencies;\n        }\n        return [];\n    }\n\n    @computed\n    get upgradeable_currencies() {\n        if (!this.legal_allowed_currencies || !this.website_status.currencies_config) return [];\n        return this.legal_allowed_currencies.map(currency => ({\n            value: currency,\n            ...this.website_status.currencies_config[currency],\n        }));\n    }\n\n    @computed\n    get current_currency_type() {\n        if (this.account_type === 'virtual') return 'virtual';\n        if (\n            this.website_status &&\n            this.website_status.currencies_config &&\n            this.website_status.currencies_config[this.currency]\n        ) {\n            return this.website_status.currencies_config[this.currency].type;\n        }\n\n        return undefined;\n    }\n\n    @computed\n    get available_crypto_currencies() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            acc.push(item.currency);\n            return acc;\n        }, []);\n\n        return this.upgradeable_currencies.filter(acc => !values.includes(acc.value) && acc.type === 'crypto');\n    }\n\n    @computed\n    get has_iom_account() {\n        return this.active_accounts.some(acc => acc.landing_company_shortcode === 'iom');\n    }\n\n    @computed\n    get has_fiat() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            if (!item.is_virtual) {\n                acc.push(item.currency);\n            }\n            return acc;\n        }, []);\n\n        return !!this.upgradeable_currencies.filter(acc => values.includes(acc.value) && acc.type === 'fiat').length;\n    }\n\n    @computed\n    get current_fiat_currency() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            if (!item.is_virtual) {\n                acc.push(item.currency);\n            }\n            return acc;\n        }, []);\n\n        return this.has_fiat\n            ? this.upgradeable_currencies.filter(acc => values.includes(acc.value) && acc.type === 'fiat')[0].value\n            : undefined;\n    }\n\n    // return the landing company object that belongs to the current client by matching shortcode\n    // note that it will be undefined for logged out and virtual clients\n    @computed\n    get current_landing_company() {\n        const landing_company = Object.keys(this.landing_companies).find(\n            company => this.landing_companies[company]?.shortcode === this.landing_company_shortcode\n        );\n        return landing_company ? this.landing_companies[landing_company] : undefined;\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => this.getAccountInfo(id)).filter(account => account);\n    }\n\n    @computed\n    get has_mt5_login() {\n        return this.mt5_login_list.length > 0;\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return !isEmptyObject(this.accounts) ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return ClientBase.getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n\n        return this.default_currency;\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            // Fix for edge case when logging out from crypto accounts causes Fiat list to be empty\n            if (this.currencies_list[localize('Fiat')].length < 1) return 'USD';\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        }\n\n        return 'USD';\n    }\n\n    @computed\n    get is_authentication_needed() {\n        if (!this.account_status.status) return false;\n        return this.account_status.authentication.needs_verification.length;\n    }\n\n    @computed\n    get is_tnc_needed() {\n        return ClientBase.shouldAcceptTnc(this.account_settings);\n    }\n\n    @computed\n    get is_financial_information_incomplete() {\n        if (!this.account_status.status) return false;\n        return this.account_status.status.some(status => status === 'financial_information_not_complete');\n    }\n\n    @computed\n    get is_withdrawal_lock() {\n        if (!this.account_status.status) return false;\n        return this.account_status.status.some(status_name =>\n            /^(withdrawal_locked|no_withdrawal_or_trading)$/.test(status_name)\n        );\n    }\n\n    @computed\n    get is_trading_experience_incomplete() {\n        if (!this.account_status.status) return false;\n        return this.account_status.status.some(status => status === 'trading_experience_not_complete');\n    }\n\n    @computed\n    get is_fully_authenticated() {\n        if (!this.account_status.status) return false;\n        return this.account_status.status.some(status => status === 'authenticated');\n    }\n\n    @computed\n    get is_pending_authentication() {\n        if (!this.account_status.status) return false;\n        return this.account_status.status.some(status => status === 'document_under_review');\n    }\n\n    @computed\n    get is_financial_account() {\n        if (!this.landing_companies) return false;\n        return this.account_type === 'financial';\n    }\n\n    @computed\n    get is_age_verified() {\n        if (!this.account_status.status) return false;\n        return this.account_status.status.some(status => status === 'age_verification');\n    }\n\n    @computed\n    get landing_company_shortcode() {\n        if (this.accounts[this.loginid]) {\n            return this.accounts[this.loginid].landing_company_shortcode;\n        }\n        return undefined;\n    }\n\n    @computed\n    get landing_company() {\n        return this.landing_companies;\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            !isEmptyObject(this.accounts) &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !isEmptyObject(this.accounts) && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get is_eu() {\n        if (!this.landing_companies) return false;\n        const { gaming_company, financial_company } = this.landing_companies;\n        const financial_shortcode = financial_company?.shortcode;\n        const gaming_shortcode = gaming_company?.shortcode;\n        return financial_shortcode || gaming_shortcode\n            ? eu_shortcode_regex.test(financial_shortcode) || eu_shortcode_regex.test(gaming_shortcode)\n            : eu_excluded_regex.test(this.residence);\n    }\n\n    @computed\n    get is_uk() {\n        return this.residence === 'gb';\n    }\n\n    // this is true when a user needs to have a active real account for trading\n    @computed\n    get should_have_real_account() {\n        // TODO [deriv-eu] remove is_eu_enabled check once EU is ready for production\n        return (\n            this.standpoint.iom &&\n            this.is_uk &&\n            !this.has_any_real_account &&\n            this.root_store.ui &&\n            this.root_store.ui.is_eu_enabled\n        );\n    }\n\n    // Shows all possible landing companies of user between all\n    @computed\n    get standpoint() {\n        const result = {\n            iom: false,\n            svg: false,\n            malta: false,\n            maltainvest: false,\n            gaming_company: false,\n            financial_company: false,\n        };\n        if (!this.landing_companies) return result;\n        const { gaming_company, financial_company } = this.landing_companies;\n        if (gaming_company?.shortcode) {\n            Object.assign(result, {\n                [gaming_company.shortcode]: !!gaming_company?.shortcode,\n                gaming_company: gaming_company?.shortcode ?? false,\n            });\n        }\n        if (financial_company?.shortcode) {\n            Object.assign(result, {\n                [financial_company.shortcode]: !!financial_company?.shortcode,\n                financial_company: financial_company?.shortcode ?? false,\n            });\n        }\n\n        return result;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && this.upgrade_info.can_upgrade_to;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids.find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return (\n            Object.keys(this.currencies_list)\n                .map(type => Object.values(this.currencies_list[type]).length)\n                .reduce((acc, cur) => acc + cur, 0) === 1\n        );\n    }\n\n    @computed\n    get account_type() {\n        return getClientAccountType(this.loginid);\n    }\n\n    @computed\n    get is_mt5_allowed() {\n        if (!this.landing_companies || !Object.keys(this.landing_companies).length) return false;\n        const has_mt5 =\n            'mt_financial_company' in this.landing_companies || 'mt_gaming_company' in this.landing_companies;\n\n        // TODO: [deriv-eu] Remove the if statement once EU is enabled in dev\n        if (this.is_eu && !this.root_store.ui.is_eu_enabled) {\n            return false;\n        } else if (this.is_eu && this.root_store.ui.is_eu_enabled) {\n            return has_mt5;\n        }\n\n        if (has_mt5) {\n            const { gaming_company, financial_company } = this.landing_companies;\n            // eslint-disable-next-line no-nested-ternary\n            return gaming_company\n                ? gaming_company.shortcode === 'svg'\n                : financial_company\n                ? financial_company.shortcode === 'svg'\n                : false;\n        }\n\n        return false;\n    }\n\n    @computed\n    get is_eu_country() {\n        const country = this.website_status.clients_country;\n        if (country) return isEuCountry(country);\n        return false;\n    }\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.syncWithSmartTrader(loginid, toJS(this.accounts));\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = [\n            ...new Set(State.getResponse('authorize.upgradeable_landing_companies')),\n        ];\n        let can_open_multi = false;\n        let type, can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi =\n                upgradeable_landing_companies.indexOf(this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) =>\n                landing_companies.find(\n                    landing_company =>\n                        landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                        upgradeable_landing_companies.indexOf(landing_company) !== -1\n                );\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    getLimits() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getLimits().then(data => {\n                runInAction(() => {\n                    if (data.error) {\n                        this.account_limits = {\n                            api_initial_load_error: data.error.message,\n                        };\n                        resolve(data);\n                    } else {\n                        this.account_limits = {\n                            ...data.get_limits,\n                            is_loading: false,\n                        };\n                        resolve(data);\n                    }\n                });\n            });\n        });\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email = response.authorize.email;\n        this.accounts[this.loginid].currency = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start = parseInt(\n            moment()\n                .utc()\n                .valueOf() / 1000\n        );\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.accounts[this.loginid].country = response.country;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id = response.authorize.user_id;\n        this.upgradeable_landing_companies = [...new Set(response.authorize.upgradeable_landing_companies)];\n        this.local_currency_config.currency = Object.keys(response.authorize.local_currencies)[0];\n\n        // For residences without local currency (e.g. ax)\n        const default_fractional_digits = 2;\n        this.local_currency_config.decimal_places = isEmptyObject(response.authorize.local_currencies)\n            ? default_fractional_digits\n            : +response.authorize.local_currencies[this.local_currency_config.currency].fractional_digits;\n\n        ClientBase.responseAuthorize(response);\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @action.bound\n    accountRealReaction(response) {\n        return new Promise(async resolve => {\n            runInAction(() => {\n                this.is_populating_account_list = true;\n            });\n            const client_accounts = JSON.parse(LocalStore.get(storage_key));\n            const { oauth_token, client_id } = response.new_account_real ?? response.new_account_maltainvest;\n            const authorize_response = await BinarySocket.authorize(oauth_token);\n\n            const new_data = {};\n            new_data.token = oauth_token;\n            new_data.residence = authorize_response.authorize.country;\n            new_data.currency = authorize_response.authorize.currency;\n            new_data.is_virtual = authorize_response.authorize.is_virtual;\n            new_data.landing_company_name = authorize_response.authorize.landing_company_fullname;\n            new_data.landing_company_shortcode = authorize_response.authorize.landing_company_name;\n\n            runInAction(() => (client_accounts[client_id] = new_data));\n            this.setLoginInformation(client_accounts, client_id);\n            this.setAccountSettings((await WS.authorized.storage.getSettings()).get_settings);\n            resolve();\n        });\n    }\n\n    @action.bound\n    setLoginInformation(client_accounts, client_id) {\n        this.accounts = client_accounts;\n        localStorage.setItem(storage_key, JSON.stringify(client_accounts));\n        LocalStore.set(storage_key, JSON.stringify(client_accounts));\n        this.is_populating_account_list = false;\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.setSwitched(client_id);\n    }\n\n    @action.bound\n    realAccountSignup(form_values) {\n        return new Promise(async (resolve, reject) => {\n            const is_maltainvest_account = this.root_store.ui.real_account_signup_target === 'maltainvest';\n            let currency = '';\n            form_values.residence = this.residence;\n            if (is_maltainvest_account) {\n                currency = form_values.currency;\n                form_values.accept_risk = 1;\n                delete form_values.currency;\n            }\n            const response = is_maltainvest_account\n                ? await WS.newAccountRealMaltaInvest(form_values)\n                : await WS.newAccountReal(form_values);\n            if (!response.error) {\n                await this.accountRealReaction(response);\n                // Set currency after account is created\n                // Maltainvest only\n                if (is_maltainvest_account) {\n                    await this.setAccountCurrency(currency);\n                }\n                localStorage.removeItem('real_account_signup_wizard');\n                this.root_store.gtm.pushDataLayer({ event: 'real_signup' });\n                resolve({\n                    ...response,\n                    ...(is_maltainvest_account\n                        ? {\n                              new_account_maltainvest: {\n                                  ...response.new_account_maltainvest,\n                                  currency,\n                              },\n                          }\n                        : {}),\n                });\n            } else {\n                reject(response.error);\n            }\n        });\n    }\n\n    @action.bound\n    setAccountCurrency(currency) {\n        return new Promise(async (resolve, reject) => {\n            const response = await WS.setAccountCurrency(currency, {\n                previous_currency: this.currency,\n            });\n            if (!response.error) {\n                runInAction(() => {\n                    const new_account = Object.assign({}, this.accounts[this.loginid]);\n                    new_account.currency = currency;\n                    this.accounts[this.loginid] = new_account;\n                });\n                localStorage.setItem(storage_key, JSON.stringify(this.accounts));\n                LocalStore.setObject(storage_key, JSON.parse(JSON.stringify(this.accounts)));\n                this.selectCurrency(currency);\n                this.root_store.ui.removeNotificationMessage({\n                    key: 'currency',\n                });\n                this.root_store.ui.removeNotificationByKey({\n                    key: 'currency',\n                });\n                await this.init();\n                resolve(response);\n            } else {\n                reject(response.error.message);\n            }\n        });\n    }\n\n    @action.bound\n    createCryptoAccount(crr) {\n        const { date_of_birth, first_name, last_name } = this.account_settings;\n        const residence = this.residence;\n\n        return new Promise(async (resolve, reject) => {\n            const response = await WS.newAccountReal({\n                first_name,\n                last_name,\n                residence,\n                currency: crr,\n                date_of_birth: toMoment(date_of_birth).format('YYYY-MM-DD'),\n            });\n            if (!response.error) {\n                this.accountRealReaction(response);\n                resolve(response);\n            } else {\n                reject(response.error.message);\n            }\n        });\n    }\n\n    @computed\n    get residence() {\n        // TODO Instead of return residence from each individual loginid, set in once in login, this is bound by user.\n        return this.accounts[this.loginid]?.residence ?? '';\n    }\n\n    @computed\n    get email_address() {\n        if (this.accounts && this.accounts[this.loginid]) {\n            return this.accounts[this.loginid].email;\n        }\n\n        return '';\n    }\n\n    @computed\n    get is_website_status_ready() {\n        return this.website_status && this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach(account => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach(param => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    async switchAccount(loginid) {\n        this.setPreSwitchAccount(true);\n        this.setIsLoggingIn(true);\n        this.root_store.ui.removeNotifications();\n        this.root_store.ui.removeAllNotificationMessages();\n        this.setSwitched(loginid);\n        this.responsePayoutCurrencies(await WS.authorized.payoutCurrencies());\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    @action.bound\n    refreshNotifications() {\n        this.root_store.ui.removeNotifications();\n        this.root_store.ui.removeAllNotificationMessages();\n        const client = this.accounts[this.loginid];\n        const { has_missing_required_field } = handleClientNotifications(\n            client,\n            this.account_settings,\n            this.account_status,\n            this.root_store.ui.addNotificationMessage,\n            this.loginid,\n            this.root_store.ui\n        );\n        this.setHasMissingRequiredField(has_missing_required_field);\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init(login_new_user) {\n        this.setIsLoggingIn(true);\n        const authorize_response = await this.setUserLogin(login_new_user);\n\n        this.setDeviceData();\n\n        // On case of invalid token, no need to continue with additional api calls.\n        if (authorize_response?.error) {\n            await this.logout();\n            this.root_store.common.setError(true, {\n                header: authorize_response.error.message,\n                message: localize('Please Log in'),\n                should_show_refresh: false,\n                redirect_label: localize('Log in'),\n                redirectOnClick: redirectToLogin,\n            });\n            this.setIsLoggingIn(false);\n            this.setInitialized(false);\n            this.setSwitched('');\n            return false;\n        }\n\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        let client = this.accounts[this.loginid];\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n\n                // Client comes back from oauth and logs in\n                await this.root_store.segment.identifyEvent();\n\n                this.root_store.gtm.pushDataLayer({\n                    event: 'login',\n                });\n            } else {\n                // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.authorize(client.token);\n            }\n            runInAction(() => {\n                this.is_populating_account_list = false;\n            });\n        }\n\n        /**\n         * Set up reaction for account_settings, account_status\n         */\n        reaction(\n            () => [this.account_settings, this.account_status],\n            () => {\n                client = this.accounts[this.loginid];\n                BinarySocket.wait('landing_company').then(() => {\n                    this.root_store.ui.removeNotifications();\n                    this.root_store.ui.removeAllNotificationMessages();\n                    if (client && !client.is_virtual) {\n                        const { has_missing_required_field } = handleClientNotifications(\n                            client,\n                            this.account_settings,\n                            this.account_status,\n                            this.root_store.ui.addNotificationMessage,\n                            this.loginid,\n                            this.root_store.ui\n                        );\n                        this.setHasMissingRequiredField(has_missing_required_field);\n                    }\n                });\n            }\n        );\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.authorized.payoutCurrencies());\n        if (this.is_logged_in) {\n            WS.storage.mt5LoginList().then(this.responseMt5LoginList);\n            this.responseStatement(\n                await BinarySocket.send({\n                    statement: 1,\n                })\n            );\n            const account_settings = (await WS.authorized.cache.getSettings()).get_settings;\n            if (account_settings && !account_settings.residence) {\n                await this.fetchResidenceList();\n                this.root_store.ui.toggleSetResidenceModal(true);\n            }\n            WS.authorized.cache.landingCompany(this.residence).then(this.responseLandingCompany);\n            this.getLimits();\n        } else {\n            this.resetMt5AccountListPopulation();\n        }\n        this.responseWebsiteStatus(await WS.wait('website_status'));\n\n        this.registerReactions();\n        this.setIsLoggingIn(false);\n        this.setInitialized(true);\n        return true;\n    }\n\n    @action.bound\n    resetMt5AccountListPopulation() {\n        this.is_populating_mt5_account_list = false;\n    }\n\n    @action.bound\n    responseWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        if (this.website_status.message && this.website_status.message.length) {\n            this.root_store.ui.addNotificationMessage({\n                key: 'maintenance',\n                header: localize('Site is being updated'),\n                message: localize(this.website_status.message),\n                type: 'warning',\n                is_persistent: true,\n            });\n        } else {\n            this.root_store.ui.removeNotificationMessage({\n                key: 'maintenance',\n            });\n        }\n    }\n\n    @action.bound\n    responseLandingCompany(response) {\n        this.landing_companies = response.landing_company;\n        this.setRealityCheck();\n    }\n\n    @action.bound\n    setRealityCheck() {\n        this.has_reality_check = this.current_landing_company?.has_reality_check;\n        // if page reloaded after reality check was submitted\n        // use the submitted values to initiate rather than asking again\n        if (\n            this.has_reality_check &&\n            this.reality_check_duration &&\n            typeof this.reality_check_timeout === 'undefined'\n        ) {\n            this.setRealityCheckDuration(this.reality_check_duration);\n        }\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    @action.bound\n    setHasMissingRequiredField(has_missing_required_field) {\n        this.has_missing_required_field = has_missing_required_field;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account = this.getAccount(loginid);\n        const currency = account.currency;\n        const is_disabled = account.is_disabled;\n        const is_virtual = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : ClientBase.getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_disabled,\n            is_virtual,\n            icon: account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    setIsLoggingIn(bool) {\n        this.is_logging_in = bool;\n    }\n\n    @action.bound\n    setPreSwitchAccount(is_pre_switch) {\n        this.pre_switch_broadcast = is_pre_switch;\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    broadcastAccountChangeAfterAuthorize() {\n        return BinarySocket.wait('authorize').then(() => {\n            this.broadcastAccountChange();\n        });\n    }\n\n    handleNotFoundLoginId() {\n        // Logout if the switched_account doesn't belong to any loginid.\n        this.root_store.ui.addNotificationMessage({\n            message: localize('Could not switch to default account.'),\n            type: 'danger',\n        });\n        // request a logout\n        this.logout();\n    }\n\n    isUnableToFindLoginId() {\n        return !this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid;\n    }\n\n    @action.bound\n    async switchAccountHandler() {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            if (this.isUnableToFindLoginId()) {\n                this.handleNotFoundLoginId();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotificationMessage({\n                message: localize('Switching to default account.'),\n                type: 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n\n        runInAction(() => (this.is_switching = true));\n        const from_login_id = this.loginid;\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n\n        // if real to virtual --> switch to blue\n        // if virtual to real --> switch to green\n        // else keep the existing connection\n        const should_switch_socket_connection = this.is_virtual || /VRTC/.test(from_login_id);\n\n        if (should_switch_socket_connection) {\n            BinarySocket.closeAndOpenNewConnection(this.getToken());\n            await BinarySocket.wait('authorize');\n        } else {\n            await WS.forgetAll('balance');\n            await BinarySocket.authorize(this.getToken());\n        }\n        if (this.root_store.common.has_error) this.root_store.common.setError(false, null);\n        sessionStorage.setItem('active_tab', '1');\n\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n\n        await this.init();\n        this.broadcastAccountChange();\n        this.getLimits();\n\n        runInAction(() => (this.is_switching = false));\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            () => {\n                // Remove real account notifications upon switching to virtual\n                if (this.accounts[this.switched]?.is_virtual) {\n                    this.root_store.ui.removeNotifications();\n                    this.root_store.ui.removeAllNotificationMessages();\n                }\n\n                this.switchAccountHandler();\n            }\n        );\n    }\n\n    @action.bound\n    setBalanceActiveAccount(obj_balance) {\n        if (this.accounts[obj_balance?.loginid] && obj_balance.loginid === this.loginid) {\n            this.accounts[obj_balance.loginid].balance = obj_balance.balance;\n            this.resetLocalStorageValues(this.loginid);\n        }\n    }\n\n    // This callback is used for balance: all\n    // Balance: all is very slow\n    // --> so we keep a separate balance subscription for the active account\n    @action.bound\n    setBalanceOtherAccounts(obj_balance) {\n        // Only the first response of balance:all will include all accounts\n        // subsequent requests will be single account balance updates\n        if (this.accounts[obj_balance?.loginid] && !obj_balance.accounts && obj_balance.loginid !== this.loginid) {\n            this.accounts[obj_balance.loginid].balance = obj_balance.balance;\n        }\n\n        if (this.accounts[obj_balance?.loginid] && obj_balance.accounts) {\n            Object.keys(obj_balance.accounts).forEach(account_id => {\n                const is_active_account_id = account_id === this.loginid;\n\n                if (!is_active_account_id && this.accounts[account_id]) {\n                    this.accounts[account_id].balance = +obj_balance.accounts[account_id].balance;\n                }\n            });\n        }\n\n        if (obj_balance.total) {\n            const total_real = getPropertyValue(obj_balance, ['total', 'deriv']);\n            const total_mt5 = getPropertyValue(obj_balance, ['total', 'mt5']);\n            // in API streaming responses MT5 balance is not re-sent, so we need to reuse the first mt5 total sent\n            const has_mt5 = !isEmptyObject(total_mt5);\n            this.obj_total_balance = {\n                amount_real: +total_real.amount,\n                amount_mt5: has_mt5 ? +total_mt5.amount : this.obj_total_balance.amount_mt5,\n                currency: total_real.currency,\n            };\n        }\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n        this.email = email;\n    }\n\n    @action.bound\n    setAccountSettings(settings) {\n        this.account_settings = settings;\n    }\n\n    @action.bound\n    setAccountStatus(status) {\n        this.account_status = status;\n    }\n\n    @action.bound\n    setInitialized(is_initialized) {\n        this.initialized_broadcast = is_initialized;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({\n            event: 'log_out',\n        });\n        this.loginid = null;\n        this.user_id = null;\n        this.upgrade_info = undefined;\n        this.accounts = {};\n        runInAction(async () => {\n            this.responsePayoutCurrencies(await WS.payoutCurrencies());\n        });\n        this.root_store.ui.removeAllNotificationMessages();\n        this.syncWithSmartTrader(this.loginid, this.accounts);\n        this.cleanupRealityCheck();\n    }\n\n    @action.bound\n    async logout() {\n        // TODO: [add-client-action] - Move logout functionality to client store\n        const logout_promise = requestLogout();\n\n        const response = await logout_promise;\n\n        if (response.logout === 1) {\n            this.cleanUp();\n\n            this.root_store.segment.reset();\n            this.setLogout(true);\n        }\n\n        return response;\n    }\n\n    @action.bound\n    setLogout(is_logged_out) {\n        this.has_logged_out = is_logged_out;\n        if (this.root_store.common.has_error) this.root_store.common.setError(false, null);\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country: 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        // TODO: [deriv-eu] Remove this after full merging of EU. When EU is enabled all landing companies are allowed.\n        account_list.forEach(account => {\n            if (\n                !this.root_store.ui &&\n                this.root_store.ui.is_eu_enabled &&\n                !/^virtual|svg$/.test(account.landing_company_name)\n            ) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) {\n                            // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${i}`]) {\n            const loginid = obj_params[`acct${i}`];\n            const token = obj_params[`token${i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin(login_new_user) {\n        // login_new_user is populated only on virtual sign-up\n        let obj_params = {};\n        const search = window.location.search;\n\n        if (search) {\n            let search_params = new URLSearchParams(window.location.search);\n\n            search_params.forEach((value, key) => {\n                const account_keys = ['acct', 'token', 'cur'];\n                const is_account_param = account_keys.some(\n                    account_key => key?.includes(account_key) && key !== 'affiliate_token'\n                );\n\n                if (is_account_param) {\n                    obj_params[key] = value;\n                }\n            });\n\n            // delete account query params - but keep other query params (e.g. utm)\n            Object.keys(obj_params).forEach(key => search_params.delete(key));\n            search_params = search_params?.toString();\n            const search_param_without_account = search_params ? `?${search_params}` : '/';\n            history.replaceState(null, null, `${search_param_without_account}${window.location.hash}`);\n        }\n\n        const is_client_logging_in = login_new_user ? login_new_user.token1 : obj_params.token1;\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, sessionStorage.getItem('redirect_url'));\n            SocketCache.clear();\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.authorize(is_client_logging_in);\n\n            if (login_new_user) {\n                // overwrite obj_params if login is for new virtual account\n                obj_params = login_new_user;\n            }\n\n            if (authorize_response.error) {\n                return authorize_response;\n            }\n\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                this.upgradeable_landing_companies = [...new Set(authorize_response.upgradeable_landing_companies)];\n\n                if (this.canStoreClientAccounts(obj_params, account_list)) {\n                    this.storeClientAccounts(obj_params, account_list);\n                } else {\n                    // Since there is no API error, we have to add this to manually trigger checks in other parts of the code.\n                    authorize_response.error = {\n                        code: 'MismatchedAcct',\n                        message: localize('Invalid token'),\n                    };\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    canStoreClientAccounts(obj_params, account_list) {\n        const is_ready_to_process = account_list && isEmptyObject(this.accounts);\n        const accts = Object.keys(obj_params).filter(value => /^acct./.test(value));\n\n        const is_cross_checked = accts.every(acct =>\n            account_list.some(account => account.loginid === obj_params[acct])\n        );\n\n        return is_ready_to_process && is_cross_checked;\n    }\n\n    @action.bound\n    setVerificationCode(code, action) {\n        this.verification_code[action] = code;\n        if (code) {\n            LocalStore.set(`verification_code.${action}`, code);\n        } else {\n            LocalStore.remove(`verification_code.${action}`);\n        }\n        if (action === 'signup') {\n            // TODO: add await if error handling needs to happen before AccountSignup is initialised\n            this.fetchResidenceList(); // Prefetch for use in account signup process\n        }\n    }\n\n    @action.bound\n    setDeviceData() {\n        // Set client URL params on init\n        const url_params = new URLSearchParams(window.location.search);\n        const device_data = {\n            ...(url_params.get('affiliate_token') && { affiliate_token: url_params.get('affiliate_token') }),\n            ...(url_params.get('gclid_url') && { gclid_url: url_params.get('gclid_url') }),\n\n            // date_first_contact should be preserved to the first client contact\n            ...(!this.device_data.date_first_contact && {\n                date_first_contact:\n                    url_params.get('date_first_contact') || this.root_store.common.server_time.format('YYYY-MM-DD'),\n            }),\n\n            // signup device can be set anytime even if there is no url parameter by using isDesktopOs function\n            signup_device: url_params.get('signup_device') || isDesktopOs() ? 'desktop' : 'mobile',\n\n            // url params can be stored only if utm_source is available\n            ...(url_params.get('utm_source') && {\n                utm_campaign: url_params.get('utm_campaign') || '',\n                utm_medium: url_params.get('utm_medium') || '',\n                utm_source: url_params.get('utm_source'), // since the check is done previously\n            }),\n        };\n        this.device_data = { ...this.device_data, ...device_data };\n    }\n\n    @action.bound\n    onSetResidence({ residence }, cb) {\n        if (!residence) return;\n        WS.setSettings({\n            residence,\n        }).then(async response => {\n            if (response.error) {\n                cb(response.error.message);\n            } else {\n                await this.setResidence(residence);\n                await WS.authorized.storage\n                    .landingCompany(this.accounts[this.loginid].residence)\n                    .then(this.responseLandingCompany);\n                await WS.authorized.storage.getSettings().then(async response => {\n                    this.setAccountSettings(response.get_settings);\n                });\n                runInAction(async () => {\n                    await BinarySocket.authorize(this.getToken()).then(() => {\n                        runInAction(() => (this.upgrade_info = this.getBasicUpgradeInfo()));\n                    });\n                });\n                cb();\n            }\n        });\n    }\n\n    @action.bound\n    onSignup({ password, residence }, cb) {\n        if (!this.verification_code.signup || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(\n            this.verification_code.signup,\n            password,\n            residence,\n            removeEmptyPropertiesFromObject(this.device_data)\n        ).then(async response => {\n            if (response.error) {\n                cb(response.error.message);\n            } else {\n                cb();\n                // Initialize client store with new user login\n                const { client_id, currency, oauth_token } = response.new_account_virtual;\n                await this.switchToNewlyCreatedAccount(client_id, oauth_token, currency);\n\n                // GTM Signup event\n                this.root_store.gtm.pushDataLayer({\n                    event: 'virtual_signup',\n                });\n\n                if (this.root_store.ui.is_eu_enabled) {\n                    this.root_store.ui.showAccountTypesModalForEuropean();\n                }\n            }\n        });\n    }\n\n    async switchToNewlyCreatedAccount(client_id, oauth_token, currency) {\n        const new_user_login = {\n            acct1: client_id,\n            token1: oauth_token,\n            curr1: currency,\n        };\n        await this.init(new_user_login);\n    }\n\n    @action.bound\n    fetchAccountSettings() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getSettings().then(response => {\n                this.setAccountSettings(response.get_settings);\n                resolve(response);\n            });\n        });\n    }\n\n    @action.bound\n    fetchResidenceList() {\n        return new Promise(resolve => {\n            WS.storage.residenceList().then(response => {\n                this.setResidenceList(response);\n                resolve(response);\n            });\n        });\n    }\n\n    @action.bound\n    setResidenceList(residence_list_response) {\n        this.residence_list = residence_list_response.residence_list || [];\n    }\n\n    @action.bound\n    fetchStatesList() {\n        return new Promise((resolve, reject) => {\n            WS.authorized.storage\n                .statesList({\n                    states_list: this.accounts[this.loginid].residence,\n                })\n                .then(response => {\n                    if (response.error) {\n                        reject(response.error);\n                    } else {\n                        runInAction(() => {\n                            this.states_list = response.states_list || [];\n                        });\n                    }\n                    resolve(response);\n                });\n        });\n    }\n\n    @action.bound\n    resetMt5ListPopulatedState() {\n        this.is_mt5_account_list_updated = false;\n        this.is_populating_mt5_account_list = true;\n    }\n\n    @action.bound\n    async updateMt5LoginList() {\n        if (this.is_logged_in && !this.is_mt5_account_list_updated && !this.is_populating_mt5_account_list) {\n            const response = await WS.mt5LoginList();\n            this.responseMt5LoginList(response);\n        }\n    }\n\n    @action.bound\n    responseMt5LoginList(response) {\n        this.is_populating_mt5_account_list = false;\n        this.is_mt5_account_list_updated = true;\n        /** we need to update mt5_login_list on mount of account switcher\n         *  to get the new MT5 balances (balance does not stream for MT5 accounts due to API restriction)\n         *  but to avoid spamming this call since the rate limit is strict\n         *  keep the current mt5_login_list response cached for one minute\n         *  after one minute consider it outdated and allow re-requesting it */\n        setTimeout(() => {\n            this.is_mt5_account_list_updated = false;\n        }, 60000);\n\n        if (!response.error) {\n            this.mt5_login_list = response.mt5_login_list\n                .filter(account => !/inactive/.test(account.group)) // remove disabled mt5 accounts\n                .map(account => ({\n                    ...account,\n                    group: getMT5AccountType(account.group),\n                    display_login: account.login.replace(/^(MT[DR]?)/i, ''),\n                }));\n        }\n    }\n\n    @action.bound\n    responseStatement(response) {\n        if (!response.error) {\n            this.statement = response.statement;\n        }\n    }\n\n    @action.bound\n    getChangeableFields() {\n        const landing_company = State.getResponse('landing_company');\n        const has_changeable_field =\n            (this.root_store.ui.is_eu_enabled || this.landing_company_shortcode === 'svg') &&\n            !this.is_fully_authenticated;\n        const changeable = ClientBase.getLandingCompanyValue(this.loginid, landing_company, 'changeable_fields');\n        if (has_changeable_field) {\n            let changeable_fields = [];\n            if (changeable && changeable.only_before_auth) {\n                changeable_fields = [...changeable.only_before_auth];\n            }\n            return changeable_fields;\n        }\n        return [];\n    }\n\n    @action.bound\n    syncWithSmartTrader(active_loginid, client_accounts) {\n        const iframe_window = document.getElementById('localstorage-sync');\n        if (iframe_window) {\n            const origin = getUrlSmartTrader();\n            if (origin) {\n                // Keep client.accounts in sync (in case user wasn't logged in).\n                iframe_window.contentWindow.postMessage(\n                    {\n                        key: 'client.accounts',\n                        value: JSON.stringify(client_accounts),\n                    },\n                    origin\n                );\n                iframe_window.contentWindow.postMessage(\n                    {\n                        key: 'active_loginid',\n                        value: active_loginid,\n                    },\n                    origin\n                );\n            }\n        }\n    }\n\n    @computed\n    get is_high_risk() {\n        if (isEmptyObject(this.account_status)) return false;\n        return this.account_status.risk_classification === 'high';\n    }\n\n    @computed\n    get has_residence() {\n        return !!this.accounts[this.loginid]?.residence;\n    }\n\n    @action.bound\n    setVisibilityRealityCheck(is_visible) {\n        // if reality check timeout has been set, don't make it visible until it runs out\n        if (is_visible && typeof this.reality_check_timeout === 'number') {\n            return;\n        }\n        this.is_reality_check_dismissed = !is_visible;\n        // store in localstorage to keep track of across tabs/on refresh\n        LocalStore.set('reality_check_dismissed', !is_visible);\n    }\n\n    @action.bound\n    clearRealityCheckTimeout() {\n        clearTimeout(this.reality_check_timeout);\n        this.reality_check_timeout = undefined;\n    }\n\n    @action.bound\n    setRealityCheckDuration(duration) {\n        this.reality_check_dur = +duration;\n        this.clearRealityCheckTimeout();\n        // store in localstorage to keep track of across tabs/on refresh\n        LocalStore.set('reality_check_duration', +duration);\n        this.reality_check_timeout = setTimeout(() => {\n            // set reality_check_timeout to undefined\n            this.clearRealityCheckTimeout();\n            // after this duration passes, show the summary pop up\n            this.setVisibilityRealityCheck(1);\n        }, +duration * 60 * 1000);\n    }\n\n    @action.bound\n    cleanupRealityCheck() {\n        this.has_reality_check = false;\n        this.is_reality_check_dismissed = undefined;\n        this.reality_check_dur = undefined;\n        this.clearRealityCheckTimeout();\n        LocalStore.remove('reality_check_duration');\n        LocalStore.remove('reality_check_dismissed');\n    }\n}\n/* eslint-enable */\n","import { action, observable } from 'mobx';\nimport { routes, toMoment, getUrlSmartTrader } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore from './base-store';\nimport { clientNotifications } from './Helpers/client-notifications';\n\nexport default class CommonStore extends BaseStore {\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @observable server_time = ServerTime.get() || toMoment(); // fallback: get current time from moment.js\n    @observable current_language = currentLanguage;\n    @observable has_error = false;\n\n    @observable error = {\n        type: 'info',\n        message: '',\n    };\n\n    @observable network_status = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened = false;\n    @observable was_socket_opened = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @observable app_routing_history = [];\n    @observable app_router = { history: null };\n\n    setInitialRouteHistoryItem(location) {\n        if (window.location.href.indexOf('?ext_platform_url=') !== -1) {\n            const ext_url = decodeURI(new URL(window.location.href).searchParams.get('ext_platform_url'));\n\n            if (ext_url?.indexOf(getUrlSmartTrader()) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH', is_external: true });\n            } else if (ext_url?.indexOf(routes.cashier_p2p) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH' });\n            } else {\n                this.addRouteHistoryItem({ ...location, action: 'PUSH' });\n            }\n\n            window.history.replaceState({}, document.title, window.location.pathname);\n        } else {\n            this.addRouteHistoryItem({ ...location, action: 'PUSH' });\n        }\n    }\n\n    @action.bound\n    setServerTime(server_time) {\n        this.server_time = server_time;\n    }\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        // note that it's not for account switch that we're doing this,\n        // but rather to reset account related stores like portfolio and contract-trade\n        const should_broadcast_account_change = this.was_socket_opened && is_socket_opened;\n\n        this.is_socket_opened = is_socket_opened;\n        this.was_socket_opened = this.was_socket_opened || is_socket_opened;\n\n        if (should_broadcast_account_change) {\n            this.root_store.client.broadcastAccountChangeAfterAuthorize();\n        }\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n\n        const ui_store = this.root_store.ui;\n        if (!is_online) {\n            ui_store.addNotificationMessage(clientNotifications().you_are_offline);\n        } else {\n            ui_store.removeNotificationMessage(clientNotifications().you_are_offline);\n        }\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header: error.header,\n                message: error.message,\n                redirect_label: error.redirect_label,\n                redirectOnClick: error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n\n    @action.bound\n    setServicesError(error) {\n        this.services_error = error;\n    }\n\n    @action.bound\n    setAppRouterHistory(history) {\n        this.app_router.history = history;\n    }\n\n    @action.bound\n    routeTo(pathname) {\n        if (this.app_router.history) this.app_router.history.push(pathname);\n    }\n\n    @action.bound\n    addRouteHistoryItem(router_action) {\n        const check_existing = this.app_routing_history.findIndex(\n            i => i.pathname === router_action.pathname && i.action === 'PUSH'\n        );\n        if (check_existing > -1) {\n            this.app_routing_history.splice(check_existing, 1);\n        }\n        this.app_routing_history.unshift(router_action);\n    }\n\n    @action.bound\n    routeBackInApp(history, additional_platform_path = []) {\n        let route_to_item_idx = -1;\n        const route_to_item = this.app_routing_history.find((history_item, idx) => {\n            if (history_item.action === 'PUSH') {\n                if (history_item.is_external) {\n                    return true;\n                }\n\n                const parent_path = history_item.pathname.split('/')[1];\n                const platform_parent_paths = [routes.mt5, routes.bot, routes.trade].map(i => i.split('/')[1]); // map full path to just base path (`/mt5/abc` -> `mt5`)\n\n                if (\n                    platform_parent_paths.includes(parent_path) ||\n                    additional_platform_path.includes(history_item.pathname)\n                ) {\n                    route_to_item_idx = idx;\n                    return true;\n                }\n            }\n\n            return false;\n        });\n\n        if (route_to_item) {\n            if (route_to_item.is_external) {\n                window.location.href = route_to_item.pathname;\n                return;\n            } else if (route_to_item_idx > -1) {\n                this.app_routing_history.splice(0, route_to_item_idx + 1);\n                // remove once p2p is ready\n                const ui_store = this.root_store.ui;\n                if (route_to_item.pathname === routes.cashier_p2p && ui_store.is_mobile)\n                    history.push(`${route_to_item.pathname}#verification`);\n                else history.push(route_to_item.pathname);\n                return;\n            }\n        }\n\n        history.push(routes.trade);\n    }\n}\n","import * as Cookies from 'js-cookie';\nimport { action, computed } from 'mobx';\nimport { getAppId, toMoment, epochToMoment } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport BinarySocket from '_common/base/socket_base';\nimport { isLoginPages } from '_common/base/login';\n\nimport BaseStore from './base-store';\nimport { getMT5AccountType } from './Helpers/client';\n\nexport default class GTMStore extends BaseStore {\n    is_gtm_applicable =\n        window.location.hostname === 'deriv-app.binary.sx' || /^(16303|16929|19111|19112)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        const platform = () => {\n            const url = new URL(window.location.href);\n            const domain = url.hostname;\n            const path = url.pathname;\n\n            // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n            if (\n                /^(deriv-app\\.binary.sx|app.deriv.com|staging-app.deriv.com|deriv.app|staging.deriv.app|localhost.binary.sx)$/.test(\n                    domain\n                )\n            ) {\n                if (path === 'bot') {\n                    return 'DBot';\n                } else if (path === 'mt5') {\n                    return 'MT5';\n                }\n                return 'DTrader';\n            }\n            return 'undefined';\n        };\n        return {\n            language: getLanguage(),\n            ...(this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency: this.root_store.client.currency,\n                userId: this.root_store.client.user_id,\n            }),\n            ...(this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            }),\n            platform: platform(),\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async resolve => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                const gtm_object = { ...this.common_variables, ...data };\n                if (!gtm_object.event) return;\n\n                dataLayer.push(gtm_object);\n            });\n        }\n    }\n\n    /**\n     * Pushes deposit & withdrawal data from transaction-stream to GTM\n     *\n     * @param {object} response\n     * @param {object} extra_data\n     */\n    @action.bound\n    pushTransactionData(response, extra_data = {}) {\n        if (!this.is_gtm_applicable || this.root_store.client.is_virtual) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now = toMoment();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(epochToMoment(gtm_transactions.timestamp), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event: 'transaction',\n                bom_account_type: this.root_store.client.account_type,\n                bom_today: moment_now.unix(),\n                transaction: {\n                    id: response.transaction.transaction_id,\n                    type: response.transaction.action,\n                    time: response.transaction.transaction_time,\n                    amount: response.transaction.amount,\n                },\n            };\n            Object.assign(data, extra_data);\n            this.pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    }\n\n    @action.bound\n    eventHandler(get_settings) {\n        if (!this.is_gtm_applicable) return;\n\n        const login_event = localStorage.getItem('GTM_login');\n        const is_new_account = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            this.pushDataLayer({ affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = toMoment();\n        const data = {\n            visitorId: this.visitorId,\n            account_type: this.root_store.client.account_type,\n            currency: this.root_store.client.currency,\n            country: get_settings.country,\n            country_abbrev: get_settings.country_code,\n            email: get_settings.email,\n            url: window.location.href,\n            today: moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then(response => {\n                (response.mt5_login_list || []).forEach(obj => {\n                    const acc_type = (getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial')\n                        .replace('vanuatu_', '')\n                        .replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                this.pushDataLayer(data);\n            });\n        } else {\n            this.pushDataLayer(data);\n        }\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable && event_name) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import { action } from 'mobx';\nimport { getAppId } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport BinarySocket from '_common/base/socket_base';\nimport { isLoginPages } from '_common/base/login';\nimport BaseStore from './base-store';\n\nexport default class SegmentStore extends BaseStore {\n    // only available on production (bot and deriv)\n    is_applicable = /^(16929|19111)$/.test(getAppId());\n    has_identified = false;\n    current_page = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    /**\n     * Pushes identify event to segment\n     * identify event will store userid in localstorage to be used by\n     * other segment call\n     * @param {object} data\n     */\n    @action.bound\n    identifyEvent = async data =>\n        new Promise(resolve => {\n            if (this.is_applicable && !isLoginPages() && !this.has_identified) {\n                BinarySocket.wait('authorize').then(() => {\n                    const user_id = this.root_store.client.user_id;\n                    if (user_id) {\n                        window.analytics.identify(user_id, {\n                            language: getLanguage().toLowerCase(),\n                            ...data,\n                        });\n                        this.has_identified = true;\n                        this.pageView();\n\n                        resolve();\n                    }\n                    resolve();\n                });\n            } else {\n                resolve();\n            }\n        });\n\n    /**\n     * Pushes page view track event to segment\n     */\n    @action.bound\n    pageView() {\n        const current_page = window.location.href;\n\n        if (\n            this.is_applicable &&\n            !isLoginPages() &&\n            this.root_store.client.is_logged_in &&\n            this.has_identified &&\n            current_page !== this.current_page\n        ) {\n            window.analytics.page();\n            this.current_page = current_page;\n        }\n    }\n\n    /**\n     * Pushes reset event to segment\n     * segment will remove userId from localstorage when logout\n     */\n    @action.bound\n    reset() {\n        if (this.is_applicable) {\n            window.analytics.reset();\n            this.has_identified = false;\n        }\n    }\n\n    /**\n     * Pushes track event to segment\n     */\n    @action.bound\n    track(event_name, options) {\n        if (this.is_applicable && this.has_identified) {\n            window.analytics.track(event_name, options);\n        }\n    }\n}\n","import { action, observable, computed, reaction } from 'mobx';\nimport { localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode, routes, websiteUrl } from '@deriv/shared';\nimport { WS } from 'Services';\nimport BaseStore from '../../base-store';\n\nexport default class OnRampStore extends BaseStore {\n    @observable api_error = null;\n    @observable deposit_address = null;\n    @observable is_deposit_address_loading = true;\n    @observable is_deposit_address_popover_open = false;\n    @observable is_onramp_modal_open = false;\n    @observable selected_provider = null;\n    @observable should_show_widget = false;\n\n    deposit_address_ref = null;\n\n    constructor(root_store) {\n        super({ root_store });\n        this.onramp_providers = [\n            {\n                default_from_currency: 'usd',\n                description: localize(\n                    'Your simple access to crypto. Fast and secure way to exchange and purchase 150+ cryptocurrencies. 24/7 live-chat support.'\n                ),\n                from_currencies: ['usd', 'eur', 'gbp'],\n                widget_script_dependencies: { 'changelly-affiliate-js': 'https://widget.changelly.com/affiliate.js' },\n                getWidgetHtml() {\n                    const currency = getCurrencyDisplayCode(root_store.client.currency).toLowerCase();\n                    return `<iframe src=\"https://widget.changelly.com?from=${this.from_currencies.join(\n                        ','\n                    )}&to=${currency}&amount=50&address=&fromDefault=${\n                        this.default_from_currency\n                    }&toDefault=${currency}&theme=danger&merchant_id=iiq3jdt2p44yrfbx&payment_id=&v=2\" width=\"100%\" height=\"475px\" class=\"changelly\" scrolling=\"no\" onLoad=\"function at(t){var e=t.target,i=e.parentNode,n=e.contentWindow,r=function(){return n.postMessage({width:i.offsetWidth},it.url)};window.addEventListener('resize',r),r()};at.apply(this, arguments);\" style=\"min-height: 100%; min-width: 100%; overflow-y: visible; border: none\">Can't load widget</iframe>`;\n                },\n                icon: 'IcCashierChangelly',\n                name: 'Changelly',\n                payment_icons: ['IcCashierVisa', 'IcCashierMastercard'],\n                to_currencies: ['bch', 'btc', 'etc', 'eth', 'ltc', 'ust'],\n            },\n        ];\n    }\n\n    @action.bound\n    onMount() {\n        this.disposeThirdPartyJsReaction = reaction(\n            () => this.selected_provider,\n            provider => {\n                if (!provider?.widget_script_dependencies) return;\n\n                Object.keys(provider.widget_script_dependencies).forEach(script_name => {\n                    if (!document.querySelector(`#${script_name}`)) {\n                        const el_script = document.createElement('script');\n                        el_script.src = provider.widget_script_dependencies[script_name];\n                        el_script.id = script_name;\n                        document.body.appendChild(el_script);\n                    }\n                });\n            }\n        );\n    }\n\n    @action.bound\n    onUnmount() {\n        if (typeof this.disposeThirdPartyJsReaction === 'function') {\n            this.disposeThirdPartyJsReaction();\n        }\n    }\n\n    @computed\n    get is_onramp_tab_visible() {\n        return this.filtered_onramp_providers.length > 0 && !this.root_store.ui.is_mobile;\n    }\n\n    @computed\n    get filtered_onramp_providers() {\n        const { currency } = this.root_store.client;\n        return this.onramp_providers.filter(provider => provider.to_currencies.includes(currency.toLowerCase()));\n    }\n\n    @computed\n    get onramp_popup_modal_title() {\n        if (this.should_show_widget) {\n            return localize('Payment channel');\n        } else if (this.selected_provider) {\n            if (this.should_show_dialog) {\n                return this.api_error\n                    ? localize('Our server cannot retrieve an address.')\n                    : localize(\"You don't have a crypto address yet.\");\n            }\n            return ' '; // Empty string to render header + close icon.\n        }\n        return undefined;\n    }\n\n    @computed\n    get should_show_dialog() {\n        return this.api_error || !this.deposit_address;\n    }\n\n    @action.bound\n    onClickCopyDepositAddress() {\n        const range = document.createRange();\n        range.selectNodeContents(this.deposit_address_ref);\n\n        const selections = window.getSelection();\n        selections.removeAllRanges();\n        selections.addRange(range);\n\n        navigator.clipboard.writeText(this.deposit_address).then(() => {\n            this.setIsDepositAddressPopoverOpen(true);\n            setTimeout(() => this.setIsDepositAddressPopoverOpen(false), 500);\n        });\n    }\n\n    @action.bound\n    onClickDisclaimerContinue() {\n        this.should_show_widget = true;\n    }\n\n    @action.bound\n    pollApiForDepositAddress(should_allow_empty_address) {\n        this.setIsDepositAddressLoading(true);\n        this.setApiError(null);\n\n        const deposit_address_interval = setInterval(() => getDepositAddressFromApi, 3000);\n        const getDepositAddressFromApi = () => {\n            WS.authorized.cashier('deposit', { provider: 'crypto', type: 'api' }).then(response => {\n                let should_clear_interval = false;\n\n                if (response.error) {\n                    this.setApiError(response.error);\n                    should_clear_interval = true;\n                } else {\n                    const { address } = response.cashier.deposit;\n\n                    if (address || should_allow_empty_address) {\n                        this.setDepositAddress(address);\n                        should_clear_interval = true;\n                    }\n                }\n\n                if (should_clear_interval) {\n                    clearInterval(deposit_address_interval);\n                    this.setIsDepositAddressLoading(false);\n                }\n            });\n        };\n\n        getDepositAddressFromApi();\n        setTimeout(() => {\n            clearInterval(deposit_address_interval);\n            this.setIsDepositAddressLoading(false);\n        }, 30000);\n    }\n\n    @action.bound\n    onClickGoToDepositPage() {\n        this.pollApiForDepositAddress(false);\n        window.open(websiteUrl() + routes.cashier_deposit.substring(1));\n    }\n\n    @action.bound\n    resetPopup() {\n        this.setApiError(null);\n        this.setDepositAddress(null);\n        this.setDepositAddressRef(null);\n        this.setIsDepositAddressLoading(true);\n        this.setSelectedProvider(null);\n        this.setShouldShowWidget(false);\n    }\n\n    @action.bound\n    setApiError(api_error) {\n        this.api_error = api_error;\n    }\n\n    @action.bound\n    setCopyIconRef(ref) {\n        this.copy_icon_ref = ref;\n    }\n\n    @action.bound\n    setDepositAddress(deposit_address) {\n        this.deposit_address = deposit_address;\n    }\n\n    @action.bound\n    setDepositAddressRef(ref) {\n        this.deposit_address_ref = ref;\n    }\n\n    @action.bound\n    setIsDepositAddressLoading(is_loading) {\n        this.is_deposit_address_loading = is_loading;\n    }\n\n    @action.bound\n    setIsOnRampModalOpen(is_open) {\n        this.is_onramp_modal_open = is_open;\n    }\n\n    @action.bound\n    setIsDepositAddressPopoverOpen(is_open) {\n        this.is_deposit_address_popover_open = is_open;\n    }\n\n    @action.bound\n    setSelectedProvider(provider) {\n        if (provider) {\n            this.selected_provider = provider;\n            this.setIsOnRampModalOpen(true);\n            this.pollApiForDepositAddress(true);\n        } else {\n            this.setIsOnRampModalOpen(false);\n            this.selected_provider = null;\n        }\n    }\n\n    @action.bound\n    setShouldShowWidget(should_show) {\n        this.should_show_widget = should_show;\n    }\n}\n","import React from 'react';\nimport { action, computed, observable, toJS, reaction } from 'mobx';\nimport {\n    routes,\n    isCryptocurrency,\n    formatMoney,\n    getCurrencies,\n    getDecimalPlaces,\n    getCurrencyDisplayCode,\n    isEmptyObject,\n    getPropertyValue,\n} from '@deriv/shared';\n\nimport BinarySocket from '_common/base/socket_base';\nimport { localize, Localize } from '@deriv/translations';\nimport { WS } from 'Services';\nimport OnRampStore from './on-ramp-store';\nimport BaseStore from '../../base-store';\nimport { getMT5AccountDisplay } from '../../Helpers/client';\n\nconst bank_default_option = [{ text: localize('All payment agents'), value: 0 }];\n\nconst hasTransferNotAllowedLoginid = loginid => loginid.startsWith('MX');\n\nconst getSelectedError = (selected_value, is_from_account) => {\n    if (is_from_account) {\n        return (\n            <Localize\n                i18n_default_text='Transfer from {{selected_value}} is not allowed, Please choose another account from dropdown'\n                values={{ selected_value }}\n            />\n        );\n    }\n\n    return (\n        <Localize\n            i18n_default_text='Transfer to {{selected_value}} is not allowed, Please choose another account from dropdown'\n            values={{ selected_value }}\n        />\n    );\n};\n\nclass Config {\n    container = '';\n    is_session_timeout = true;\n    onIframeLoaded = '';\n    timeout_session = '';\n\n    @observable iframe_height = 0;\n    @observable iframe_url = '';\n\n    constructor({ container }) {\n        this.container = container;\n    }\n}\n\nclass ConfigError {\n    @observable message = '';\n    @observable code = '';\n    @observable fields = '';\n    @observable is_show_full_page = false;\n    @observable onClickButton = null;\n    @observable is_ask_uk_funds_protection = false;\n    @observable is_self_exclusion_max_turnover_set = false;\n    @observable is_ask_authentication = false;\n    @observable is_ask_financial_risk_approval = false;\n    @observable is_cashier_forward_error = false;\n}\n\nclass ConfigPaymentAgent {\n    list = [];\n\n    @observable agents = [];\n    @observable container = 'payment_agent';\n    @observable error = new ConfigError();\n    @observable filtered_list = [];\n    @observable is_name_selected = true;\n    @observable is_withdraw = false;\n    @observable is_try_withdraw_successful = false;\n    @observable is_withdraw_successful = false;\n    @observable confirm = {};\n    @observable receipt = {};\n    @observable selected_bank = bank_default_option[0].value;\n    @observable supported_banks = bank_default_option;\n    @observable verification = new ConfigVerification();\n}\n\nclass ConfigPaymentAgentTransfer {\n    @observable container = 'payment_agent_transfer';\n    @observable error = new ConfigError();\n    @observable is_payment_agent = false;\n    @observable is_try_transfer_successful = false;\n    @observable is_transfer_successful = false;\n    @observable confirm = {};\n    @observable receipt = {};\n    @observable transfer_limit = {};\n}\n\nclass ConfigAccountTransfer {\n    @observable accounts_list = [];\n    @observable container = 'account_transfer';\n    @observable error = new ConfigError();\n    @observable has_no_account = false;\n    @observable has_no_accounts_balance = false;\n    @observable is_transfer_successful = false;\n    @observable minimum_fee = null;\n    @observable receipt = {};\n    @observable selected_from = {};\n    @observable selected_to = {};\n    @observable transfer_fee = null;\n    @observable transfer_limit = {};\n\n    @action.bound\n    setBalanceByLoginId(loginid, balance) {\n        this.accounts_list.find(acc => loginid === acc.value).balance = balance;\n    }\n\n    @action.bound\n    setBalanceSelectedFrom(balance) {\n        this.selected_from.balance = balance;\n    }\n\n    @action.bound\n    setBalanceSelectedTo(balance) {\n        this.selected_to.balance = balance;\n    }\n}\n\nclass ConfigVerification {\n    is_button_clicked = false;\n    timeout_button = '';\n\n    @observable is_email_sent = false;\n    @observable is_resend_clicked = false;\n    @observable resend_timeout = 60;\n}\n\nexport default class CashierStore extends BaseStore {\n    @observable is_loading = false;\n    @observable is_p2p_visible = false;\n    @observable p2p_notification_count = 0;\n    @observable is_p2p_advertiser = false;\n    @observable cashier_route_tab_index = 0;\n\n    @observable config = {\n        account_transfer: new ConfigAccountTransfer(),\n        deposit: {\n            ...toJS(new Config({ container: 'deposit' })),\n            error: new ConfigError(),\n        },\n        payment_agent: new ConfigPaymentAgent(),\n        payment_agent_transfer: new ConfigPaymentAgentTransfer(),\n        withdraw: {\n            ...toJS(new Config({ container: 'withdraw' })),\n            error: new ConfigError(),\n            verification: new ConfigVerification(),\n        },\n    };\n\n    active_container = this.config.deposit.container;\n    onRemount = () => {};\n    is_populating_values = false;\n\n    containers = [this.config.deposit.container, this.config.withdraw.container];\n\n    map_action = {\n        [this.config.withdraw.container]: 'payment_withdraw',\n        [this.config.payment_agent.container]: 'payment_agent_withdraw',\n    };\n\n    onramp = new OnRampStore(this.root_store);\n\n    @computed\n    get is_payment_agent_visible() {\n        return !!(this.config.payment_agent.filtered_list.length || this.config.payment_agent.agents.length);\n    }\n\n    @computed\n    get is_payment_agent_transfer_visible() {\n        return this.config.payment_agent_transfer.is_payment_agent;\n    }\n\n    @action.bound\n    setAccountSwitchListener() {\n        // cashier inits once and tries to stay active until switching account\n        // since cashier calls take a long time to respond or display in iframe\n        // so we don't have any unmount function here and everything gets reset on switch instead\n        this.disposeSwitchAccount();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    async onMountCommon(should_remount) {\n        if (this.root_store.client.is_logged_in) {\n            // avoid calling this again\n            if (this.is_populating_values) {\n                return;\n            }\n\n            this.is_populating_values = true;\n\n            if (should_remount) {\n                this.onRemount = this.onMountCommon;\n            }\n            // we need to see if client's country has PA\n            // if yes, we can show the PA tab in cashier\n            if (!this.config.payment_agent.list.length) {\n                this.setPaymentAgentList().then(this.filterPaymentAgentList);\n            }\n\n            if (!this.config.payment_agent_transfer.is_payment_agent) {\n                this.checkIsPaymentAgent();\n            }\n\n            if (!this.config.account_transfer.accounts_list.length) {\n                this.sortAccountsTransfer();\n            }\n\n            if (!this.onramp.is_onramp_tab_visible && window.location.pathname.endsWith(routes.cashier_onramp)) {\n                this.root_store.common.routeTo(routes.cashier_deposit);\n            }\n\n            // show p2p if:\n            // 1. we have not already checked this before, and\n            // 2. client is not virtual, and\n            // 3. p2p call does not return error code `PermissionDenied`\n            if (!this.is_p2p_visible && !this.root_store.client.is_virtual) {\n                const advertiser_info = await WS.authorized.p2pAdvertiserInfo();\n                const advertiser_error = getPropertyValue(advertiser_info, ['error', 'code']);\n                if (advertiser_error === 'PermissionDenied') return;\n\n                this.is_p2p_advertiser = !advertiser_error;\n                this.setIsP2pVisible(true);\n            }\n        }\n    }\n\n    @action.bound\n    setCashierTabIndex(index) {\n        this.cashier_route_tab_index = index;\n    }\n    @action.bound\n    setNotificationCount(notification_count) {\n        this.p2p_notification_count = notification_count;\n    }\n\n    @action.bound\n    setIsP2pVisible(is_p2p_visible) {\n        this.is_p2p_visible = is_p2p_visible;\n        if (!is_p2p_visible && window.location.pathname.endsWith(routes.cashier_p2p)) {\n            this.root_store.common.routeTo(routes.cashier_deposit);\n        }\n    }\n\n    @action.bound\n    async onMount(verification_code) {\n        const current_container = this.active_container;\n        this.onRemount = this.onMount;\n        await this.onMountCommon();\n\n        reaction(\n            () => [this.root_store.client.is_tnc_needed],\n            () => {\n                this.onMount();\n            }\n        );\n\n        if (this.containers.indexOf(this.active_container) === -1) {\n            throw new Error('Cashier Store onMount requires a valid container name.');\n        }\n        this.setErrorMessage('');\n        this.setContainerHeight(0);\n        this.setLoading(true);\n\n        if (!this.config[this.active_container].is_session_timeout) {\n            this.checkIframeLoaded();\n            return;\n        }\n\n        // if session has timed out reset everything\n        this.setIframeUrl('');\n        if (\n            (this.active_container === this.config.withdraw.container && !verification_code) ||\n            this.root_store.client.is_virtual\n        ) {\n            // if virtual, clear everything and don't proceed further\n            // if no verification code, we should request again\n            return;\n        }\n\n        const response_cashier = await WS.authorized.cashier(this.active_container, { verification_code });\n\n        // if tab changed while waiting for response, ignore it\n        if (current_container !== this.active_container) {\n            return;\n        }\n        if (response_cashier.error) {\n            this.handleCashierError(response_cashier.error);\n            this.setLoading(false);\n            this.setSessionTimeout(true);\n            this.clearTimeoutCashierUrl();\n            if (verification_code) {\n                // clear verification code on error\n                this.clearVerification();\n            }\n        } else if (isCryptocurrency(this.root_store.client.currency)) {\n            this.setLoading(false);\n            this.setContainerHeight('540');\n            this.setIframeUrl(response_cashier.cashier);\n            // crypto cashier can only be accessed once and the session expires\n            // so no need to set timeouts to keep the session alive\n        } else {\n            await this.checkIframeLoaded();\n            this.setIframeUrl(response_cashier.cashier);\n            this.setSessionTimeout(false);\n            this.setTimeoutCashierUrl();\n        }\n    }\n\n    @computed\n    get is_cashier_locked() {\n        if (!this.root_store.client.account_status.status) return false;\n        const { status } = this.root_store.client.account_status;\n\n        return status.some(status_name => status_name === 'cashier_locked');\n    }\n\n    @computed\n    get is_deposit_locked() {\n        const {\n            is_authentication_needed,\n            is_tnc_needed,\n            is_financial_account,\n            is_financial_information_incomplete,\n            is_trading_experience_incomplete,\n            account_status,\n        } = this.root_store.client;\n        if (!account_status.status) return false;\n\n        const need_authentication = this.config.deposit.error.is_ask_authentication || is_authentication_needed;\n        const need_financial_assessment =\n            is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete);\n\n        return (\n            need_authentication ||\n            is_tnc_needed ||\n            need_financial_assessment ||\n            this.config.deposit.error.is_ask_financial_risk_approval ||\n            this.config.deposit.error.is_cashier_forward_error\n        );\n    }\n\n    @computed\n    get is_withdrawal_locked() {\n        if (!this.root_store.client.account_status.status) return false;\n        const { authentication } = this.root_store.client.account_status;\n        const need_poi = authentication.needs_verification.includes('identity');\n\n        const need_authentication = this.config.withdraw.error.is_ask_authentication && need_poi;\n\n        return (\n            this.root_store.client.is_withdrawal_lock ||\n            need_authentication ||\n            this.config.withdraw.error.is_ask_financial_risk_approval ||\n            this.config.withdraw.error.is_cashier_forward_error\n        );\n    }\n\n    @computed\n    get is_transfer_locked() {\n        const {\n            is_financial_account,\n            is_financial_information_incomplete,\n            is_trading_experience_incomplete,\n            account_status,\n        } = this.root_store.client;\n\n        if (!account_status.status) return false;\n\n        const need_financial_assessment =\n            is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete);\n\n        return need_financial_assessment && this.config.account_transfer.error.is_ask_financial_risk_approval;\n    }\n\n    @action.bound\n    async checkIframeLoaded() {\n        this.removeOnIframeLoaded();\n        this.config[this.active_container].onIframeLoaded = function(e) {\n            if (/cashier|doughflow/.test(e.origin)) {\n                this.setLoading(false);\n                // set the height of the container after content loads so that the\n                // loading bar stays vertically centered until the end\n                this.setContainerHeight(+e.data || '1200');\n                // do not remove the listener\n                // on every iframe screen change we need to update the height to more/less to match the new content\n            }\n        }.bind(this);\n        window.addEventListener('message', this.config[this.active_container].onIframeLoaded, false);\n    }\n\n    removeOnIframeLoaded(container = this.active_container) {\n        if (this.config[container].onIframeLoaded) {\n            window.removeEventListener('message', this.config[container].onIframeLoaded, false);\n            this.config[container].onIframeLoaded = '';\n        }\n    }\n\n    @action.bound\n    setIframeUrl(url, container = this.active_container) {\n        if (url) {\n            this.config[container].iframe_url = `${url}&theme=${this.root_store.ui.is_dark_mode_on ? 'dark' : 'light'}`;\n            // after we set iframe url we can clear verification code\n            this.root_store.client.setVerificationCode('', this.map_action[container]);\n        } else {\n            this.config[container].iframe_url = url;\n        }\n    }\n\n    @action.bound\n    setContainerHeight(height) {\n        this.config[this.active_container].iframe_height = height;\n    }\n\n    @action.bound\n    setErrorMessage(error, onClickButton, is_show_full_page) {\n        // for errors that need to show a button, reset the form\n        this.config[this.active_container].error = {\n            onClickButton,\n            code: error.code,\n            message: error.message,\n            is_show_full_page: is_show_full_page || /InvalidToken|WrongResponse/.test(error.code),\n            ...(getPropertyValue(error, ['details', 'fields']) && {\n                fields: error.details.fields,\n            }),\n        };\n    }\n    @action.bound\n    handleCashierError(error) {\n        switch (error.code) {\n            case 'ASK_TNC_APPROVAL':\n                this.setErrorMessage(error, null, true);\n                break;\n            case 'ASK_FIX_DETAILS':\n                this.setErrorMessage(error, null, true);\n                break;\n            case 'ASK_UK_FUNDS_PROTECTION':\n                this.config[this.active_container].error = {\n                    is_ask_uk_funds_protection: true,\n                };\n                break;\n            case 'ASK_SELF_EXCLUSION_MAX_TURNOVER_SET':\n                this.config[this.active_container].error = {\n                    is_self_exclusion_max_turnover_set: true,\n                };\n                break;\n            case 'ASK_AUTHENTICATE':\n            case 'ASK_AGE_VERIFICATION':\n                this.config[this.active_container].error = {\n                    is_ask_authentication: true,\n                };\n                break;\n            case 'FinancialAssessmentRequired':\n            case 'ASK_FINANCIAL_RISK_APPROVAL':\n                this.config[this.active_container].error = {\n                    is_ask_financial_risk_approval: true,\n                };\n                break;\n            case 'CashierForwardError':\n                this.config[this.active_container].error = {\n                    is_cashier_forward_error: true,\n                };\n                break;\n            default:\n                this.config[this.active_container].error = {\n                    is_ask_uk_funds_protection: false,\n                    is_self_exclusion_max_turnover_set: false,\n                    is_ask_authentication: false,\n                    is_ask_financial_risk_approval: false,\n                    is_cashier_forward_error: false,\n                };\n                this.setErrorMessage(error);\n        }\n    }\n\n    @action.bound\n    setErrorConfig(config_name, value) {\n        this.config[this.active_container].error = {\n            [config_name]: value,\n        };\n    }\n\n    @action.bound\n    submitFundsProtection() {\n        WS.send({ ukgc_funds_protection: 1, tnc_approval: 1 }).then(response => {\n            if (response.error) {\n                this.setErrorConfig('message', response.error.message);\n            } else {\n                this.setErrorConfig('is_ask_uk_funds_protection', false);\n                this.onMount();\n            }\n        });\n    }\n\n    @action.bound\n    setLoading(is_loading) {\n        this.is_loading = is_loading;\n    }\n\n    @action.bound\n    setSessionTimeout(is_session_time_out, container = this.active_container) {\n        this.config[container].is_session_timeout = is_session_time_out;\n        if (is_session_time_out) {\n            this.removeOnIframeLoaded(container);\n        }\n    }\n\n    @action.bound\n    setVerificationButtonClicked(is_button_clicked, container = this.active_container) {\n        this.config[container].verification.is_button_clicked = is_button_clicked;\n    }\n\n    @action.bound\n    setVerificationEmailSent(is_email_sent, container = this.active_container) {\n        this.config[container].verification.is_email_sent = is_email_sent;\n    }\n\n    @action.bound\n    setVerificationResendClicked(is_resend_clicked, container = this.active_container) {\n        this.config[container].verification.is_resend_clicked = is_resend_clicked;\n    }\n\n    @action.bound\n    setVerificationResendTimeout(resend_timeout, container = this.active_container) {\n        this.config[container].verification.resend_timeout = resend_timeout;\n    }\n\n    clearTimeoutCashierUrl(container = this.active_container) {\n        if (this.config[container].timeout_session) {\n            clearTimeout(this.config[container].timeout_session);\n        }\n    }\n\n    // cashier session expires after one minute\n    // so we should resend the request for container (deposit|withdraw) url on next mount\n    @action.bound\n    setTimeoutCashierUrl() {\n        this.clearTimeoutCashierUrl();\n        this.config[this.active_container].timeout_session = setTimeout(() => {\n            this.setSessionTimeout(true);\n        }, 60000);\n    }\n\n    clearTimeoutVerification(container = this.active_container) {\n        if (this.config[container].verification.timeout_button) {\n            clearTimeout(this.config[container].verification.timeout_button);\n        }\n    }\n\n    // verification token expires after one hour\n    // so we should show the verification request button again after that\n    @action.bound\n    setTimeoutVerification() {\n        this.clearTimeoutVerification();\n        this.config[this.active_container].verification.timeout_button = setTimeout(() => {\n            this.clearVerification();\n        }, 3600000);\n    }\n\n    @action.bound\n    async sendVerificationEmail() {\n        if (this.config[this.active_container].verification.is_button_clicked) {\n            return;\n        }\n\n        this.setErrorMessage('');\n        this.setVerificationButtonClicked(true);\n        const withdrawal_type = `payment${\n            this.active_container === this.config.payment_agent.container ? 'agent' : ''\n        }_withdraw`;\n        const response_verify_email = await WS.verifyEmail(this.root_store.client.email, withdrawal_type);\n\n        if (response_verify_email.error) {\n            this.clearVerification();\n            this.setErrorMessage(response_verify_email.error);\n        } else {\n            this.setVerificationEmailSent(true);\n            this.setTimeoutVerification();\n        }\n    }\n\n    @action.bound\n    resendVerificationEmail() {\n        // don't allow clicking while ongoing timeout\n        if (this.config[this.active_container].verification.resend_timeout < 60) {\n            return;\n        }\n        this.setVerificationButtonClicked(false);\n        this.setCountDownResendVerification();\n        this.sendVerificationEmail();\n    }\n\n    setCountDownResendVerification() {\n        this.setVerificationResendTimeout(this.config[this.active_container].verification.resend_timeout - 1);\n        const resend_interval = setInterval(() => {\n            if (!this.config[this.active_container] || !this.config[this.active_container].verification) {\n                clearInterval(resend_interval);\n                return;\n            }\n\n            if (this.config[this.active_container].verification.resend_timeout === 1) {\n                this.setVerificationResendTimeout(60);\n                clearInterval(resend_interval);\n            } else {\n                this.setVerificationResendTimeout(this.config[this.active_container].verification.resend_timeout - 1);\n            }\n        }, 1000);\n    }\n\n    clearVerification(container = this.active_container) {\n        this.clearTimeoutVerification(container);\n        this.setVerificationButtonClicked(false, container);\n        this.setVerificationEmailSent(false, container);\n        this.setVerificationResendClicked(false, container);\n        this.setVerificationResendTimeout(60, container);\n        this.root_store.client.setVerificationCode('', this.map_action[container]);\n    }\n\n    @action.bound\n    setActiveTab(container) {\n        this.active_container = container;\n    }\n\n    @action.bound\n    async onMountPaymentAgentList() {\n        this.setLoading(true);\n        this.onRemount = this.onMountPaymentAgentList;\n        await this.onMountCommon();\n\n        this.setLoading(false);\n    }\n\n    @action.bound\n    async getPaymentAgentList() {\n        if (this.config.payment_agent.list.length) {\n            return BinarySocket.wait('paymentagent_list');\n        }\n\n        // wait for get_settings so residence gets populated in client-store\n        // TODO: set residence in client-store from authorize so it's faster\n        await BinarySocket.wait('get_settings');\n        return WS.authorized.paymentAgentList(this.root_store.client.residence, this.root_store.client.currency);\n    }\n\n    @action.bound\n    addSupportedBank(bank) {\n        const supported_bank_exists = this.config.payment_agent.supported_banks.find(\n            supported_bank => supported_bank.value === bank.toLowerCase()\n        );\n        if (!supported_bank_exists) {\n            this.config.payment_agent.supported_banks.push({ text: bank, value: bank.toLowerCase() });\n        }\n    }\n\n    @action.bound\n    sortSupportedBanks() {\n        // sort supported banks alphabetically by value, the option 'All payment agents' with value 0 should be on top\n        this.config.payment_agent.supported_banks.replace(\n            this.config.payment_agent.supported_banks.slice().sort(function(a, b) {\n                if (a.value < b.value) {\n                    return -1;\n                }\n                if (a.value > b.value) {\n                    return 1;\n                }\n                return 0;\n            })\n        );\n    }\n\n    @action.bound\n    async setPaymentAgentList(pa_list) {\n        const payment_agent_list = pa_list || (await this.getPaymentAgentList());\n        if (!payment_agent_list || !payment_agent_list.paymentagent_list) {\n            return;\n        }\n\n        payment_agent_list.paymentagent_list.list.forEach(payment_agent => {\n            this.config.payment_agent.list.push({\n                email: payment_agent.email,\n                phone: payment_agent.telephone,\n                name: payment_agent.name,\n                supported_banks: payment_agent.supported_banks,\n                url: payment_agent.url,\n            });\n            if (payment_agent.supported_banks) {\n                payment_agent.supported_banks.split(',').forEach(bank => {\n                    this.addSupportedBank(bank);\n                });\n            }\n        });\n\n        this.sortSupportedBanks();\n    }\n\n    @action.bound\n    filterPaymentAgentList(bank) {\n        if (bank) {\n            this.config.payment_agent.filtered_list = [];\n            this.config.payment_agent.list.forEach(payment_agent => {\n                if (\n                    payment_agent.supported_banks &&\n                    payment_agent.supported_banks\n                        .toLowerCase()\n                        .split(',')\n                        .indexOf(bank) !== -1\n                ) {\n                    this.config.payment_agent.filtered_list.push(payment_agent);\n                }\n            });\n        } else {\n            this.config.payment_agent.filtered_list = this.config.payment_agent.list;\n        }\n        if (!this.is_payment_agent_visible && window.location.pathname.endsWith(routes.cashier_pa)) {\n            this.root_store.common.routeTo(routes.cashier_deposit);\n        }\n    }\n\n    @action.bound\n    onChangePaymentMethod({ target }) {\n        const value = target.value === '0' ? parseInt(target.value) : target.value;\n        this.config.payment_agent.selected_bank = value;\n        this.filterPaymentAgentList(value);\n    }\n\n    @action.bound\n    async onMountPaymentAgentWithdraw() {\n        this.setLoading(true);\n        this.onRemount = this.onMountPaymentAgentWithdraw;\n        await this.onMountCommon();\n\n        this.setIsWithdraw(true);\n        this.setIsWithdrawSuccessful(false);\n        this.setReceipt({});\n\n        if (!this.config.payment_agent.agents.length) {\n            const payment_agent_list = await this.getPaymentAgentList();\n            payment_agent_list.paymentagent_list.list.forEach(payment_agent => {\n                this.addPaymentAgent(payment_agent);\n            });\n            if (\n                !payment_agent_list.paymentagent_list.list.length &&\n                window.location.pathname.endsWith(routes.cashier_pa)\n            ) {\n                this.root_store.common.routeTo(routes.cashier_deposit);\n            }\n\n            this.setLoading(false);\n        } else {\n            this.setLoading(false);\n        }\n    }\n\n    @action.bound\n    setIsWithdraw(is_withdraw = !this.config.payment_agent.is_withdraw) {\n        this.config.payment_agent.is_withdraw = is_withdraw;\n    }\n\n    @action.bound\n    setIsTryWithdrawSuccessful(is_try_withdraw_successful) {\n        this.config.payment_agent.is_try_withdraw_successful = is_try_withdraw_successful;\n    }\n\n    @action.bound\n    setIsWithdrawSuccessful(is_withdraw_successful) {\n        this.config.payment_agent.is_withdraw_successful = is_withdraw_successful;\n    }\n\n    @action.bound\n    setConfirmation({ amount, currency, loginid, payment_agent_name }) {\n        this.config.payment_agent.confirm = {\n            amount,\n            currency,\n            loginid,\n            payment_agent_name,\n        };\n    }\n\n    @action.bound\n    setReceipt({\n        amount_transferred,\n        payment_agent_email,\n        payment_agent_id,\n        payment_agent_name,\n        payment_agent_phone,\n        payment_agent_url,\n    }) {\n        this.config.payment_agent.receipt = {\n            amount_transferred,\n            payment_agent_email,\n            payment_agent_id,\n            payment_agent_name,\n            payment_agent_phone,\n            payment_agent_url,\n        };\n    }\n\n    @action.bound\n    addPaymentAgent(payment_agent) {\n        this.config.payment_agent.agents.push({\n            text: payment_agent.name,\n            value: payment_agent.paymentagent_loginid,\n            max_withdrawal: payment_agent.max_withdrawal,\n            min_withdrawal: payment_agent.min_withdrawal,\n            email: payment_agent.email,\n            phone: payment_agent.telephone,\n            url: payment_agent.url,\n        });\n    }\n\n    @action.bound\n    async requestTryPaymentAgentWithdraw({ loginid, currency, amount, verification_code }) {\n        const payment_agent_withdraw = await WS.authorized.paymentAgentWithdraw({\n            loginid,\n            currency,\n            amount,\n            verification_code,\n            dry_run: 1,\n        });\n        if (+payment_agent_withdraw.paymentagent_withdraw === 2) {\n            const selected_agent = this.config.payment_agent.agents.find(agent => agent.value === loginid);\n            this.setConfirmation({\n                amount,\n                currency,\n                loginid,\n                ...(selected_agent && { payment_agent_name: selected_agent.text }),\n            });\n            this.setIsTryWithdrawSuccessful(true);\n        } else {\n            this.setErrorMessage(payment_agent_withdraw.error, this.resetPaymentAgent);\n        }\n    }\n\n    @action.bound\n    async requestPaymentAgentWithdraw({ loginid, currency, amount, verification_code }) {\n        const payment_agent_withdraw = await WS.authorized.paymentAgentWithdraw({\n            loginid,\n            currency,\n            amount,\n            verification_code,\n        });\n        if (+payment_agent_withdraw.paymentagent_withdraw === 1) {\n            const selected_agent = this.config.payment_agent.agents.find(agent => agent.value === loginid);\n            this.setReceipt({\n                amount_transferred: formatMoney(currency, amount, true),\n                ...(selected_agent && {\n                    payment_agent_email: selected_agent.email,\n                    payment_agent_id: selected_agent.value,\n                    payment_agent_name: selected_agent.text,\n                    payment_agent_phone: selected_agent.phone,\n                    payment_agent_url: selected_agent.url,\n                }),\n                ...(!selected_agent && {\n                    payment_agent_id: loginid,\n                }),\n            });\n            this.setIsWithdrawSuccessful(true);\n            this.setIsTryWithdrawSuccessful(false);\n            this.setConfirmation({});\n        } else {\n            this.setErrorMessage(payment_agent_withdraw.error, this.resetPaymentAgent);\n        }\n    }\n\n    @action.bound\n    resetPaymentAgent = () => {\n        this.setErrorMessage('');\n        this.setIsWithdraw(false);\n        this.clearVerification();\n    };\n\n    // possible transfers:\n    // 1. fiat to crypto & vice versa\n    // 2. fiat to mt & vice versa\n    // 3. crypto to mt & vice versa\n    @action.bound\n    async onMountAccountTransfer() {\n        this.setLoading(true);\n        this.onRemount = this.onMountAccountTransfer;\n        await this.onMountCommon();\n        await BinarySocket.wait('website_status');\n\n        // check if some balance update has come in since the last mount\n        const has_updated_account_balance =\n            this.config.account_transfer.has_no_accounts_balance &&\n            Object.keys(this.root_store.client.active_accounts).find(\n                account =>\n                    !this.root_store.client.active_accounts[account].is_virtual &&\n                    this.root_store.client.active_accounts[account].balance\n            );\n        if (has_updated_account_balance) {\n            this.setHasNoAccountsBalance(false);\n        }\n\n        // various issues happen when loading from cache\n        // e.g. new account may have been created, transfer may have been done elsewhere, etc\n        // so on load of this page just call it again\n        if (this.root_store.client.is_logged_in) {\n            const transfer_between_accounts = await WS.authorized.transferBetweenAccounts();\n\n            if (transfer_between_accounts.error) {\n                this.setErrorMessage(transfer_between_accounts.error, this.onMountAccountTransfer);\n                this.setLoading(false);\n                return;\n            }\n\n            if (!this.canDoAccountTransfer(transfer_between_accounts.accounts)) {\n                return;\n            }\n\n            this.sortAccountsTransfer(transfer_between_accounts);\n            this.setTransferFee();\n            this.setMinimumFee();\n            this.setTransferLimit();\n        }\n        this.setLoading(false);\n    }\n\n    canDoAccountTransfer(accounts) {\n        let can_transfer = true;\n        // should have at least one account with balance\n        if (!accounts.find(account => +account.balance > 0)) {\n            can_transfer = false;\n            this.setHasNoAccountsBalance(true);\n        } else {\n            this.setHasNoAccountsBalance(false);\n        }\n        // should have at least two real-money accounts\n        if (accounts.length <= 1) {\n            can_transfer = false;\n            this.setHasNoAccount(true);\n        } else {\n            this.setHasNoAccount(false);\n        }\n        if (!can_transfer) {\n            this.setLoading(false);\n        }\n        return can_transfer;\n    }\n\n    @action.bound\n    setHasNoAccountsBalance(has_no_accounts_balance) {\n        this.config.account_transfer.has_no_accounts_balance = has_no_accounts_balance;\n    }\n\n    @action.bound\n    setHasNoAccount(has_no_account) {\n        this.config.account_transfer.has_no_account = has_no_account;\n    }\n\n    @action.bound\n    setTransferFee() {\n        const transfer_fee = getPropertyValue(getCurrencies(), [\n            this.config.account_transfer.selected_from.currency,\n            'transfer_between_accounts',\n            'fees',\n            this.config.account_transfer.selected_to.currency,\n        ]);\n        this.config.account_transfer.transfer_fee = typeof transfer_fee === 'undefined' ? 1 : +transfer_fee;\n    }\n\n    @action.bound\n    setMinimumFee() {\n        const decimals = getDecimalPlaces(this.config.account_transfer.selected_from.currency);\n        // we need .toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n        this.config.account_transfer.minimum_fee = (1 / Math.pow(10, decimals)).toFixed(decimals);\n    }\n\n    @action.bound\n    setTransferLimit() {\n        const transfer_limit = getPropertyValue(getCurrencies(), [\n            this.config.account_transfer.selected_from.currency,\n            'transfer_between_accounts',\n            'limits',\n        ]);\n        const decimal_places = getDecimalPlaces(this.config.account_transfer.selected_from.currency);\n        // we need .toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n        this.config.account_transfer.transfer_limit = {\n            max: transfer_limit.max ? transfer_limit.max.toFixed(decimal_places) : null,\n            min: transfer_limit.min ? transfer_limit.min.toFixed(decimal_places) : null,\n        };\n    }\n\n    @action.bound\n    async sortAccountsTransfer(response_accounts) {\n        const transfer_between_accounts = response_accounts || (await WS.authorized.transferBetweenAccounts());\n        if (!this.config.account_transfer.accounts_list.length) {\n            // should have more than one account\n            if (transfer_between_accounts.error || transfer_between_accounts.accounts.length <= 1) {\n                return;\n            }\n        }\n        // remove disabled mt5 accounts\n        const accounts = transfer_between_accounts.accounts.filter(account => !/inactive/.test(account.mt5_group));\n        // sort accounts as follows:\n        // for MT5, synthetic, financial, financial stp\n        // for non-MT5, fiat, crypto (alphabetically by currency)\n        accounts.sort((a, b) => {\n            const a_is_mt = a.account_type === 'mt5';\n            const b_is_mt = b.account_type === 'mt5';\n            const a_is_crypto = !a_is_mt && isCryptocurrency(a.currency);\n            const b_is_crypto = !b_is_mt && isCryptocurrency(b.currency);\n            const a_is_fiat = !a_is_mt && !a_is_crypto;\n            const b_is_fiat = !b_is_mt && !b_is_crypto;\n            if (a_is_mt && b_is_mt) {\n                if (/svg$/.test(a.mt5_group)) {\n                    return -1;\n                }\n                // TODO: [remove-standard-advanced] remove standard when API groups are updated\n                if (/vanuatu|svg_(standard|financial)/.test(a.mt5_group)) {\n                    return /svg$/.test(b.mt5_group) ? 1 : -1;\n                }\n                return 1;\n            } else if ((a_is_crypto && b_is_crypto) || (a_is_fiat && b_is_fiat)) {\n                return a.currency < b.currency ? -1 : 1;\n            } else if ((a_is_crypto && b_is_mt) || (a_is_fiat && b_is_crypto) || (a_is_fiat && b_is_mt)) {\n                return -1;\n            }\n            return a_is_mt ? -1 : 1;\n        });\n        const arr_accounts = [];\n        this.setSelectedTo({}); // set selected to empty each time so we can redetermine its value on reload\n        accounts.forEach(account => {\n            const obj_values = {\n                text: account.mt5_group\n                    ? `${localize('DMT5')} ${getMT5AccountDisplay(account.mt5_group)}`\n                    : getCurrencyDisplayCode(account.currency.toUpperCase()),\n                value: account.loginid,\n                balance: account.balance,\n                currency: account.currency,\n                is_crypto: isCryptocurrency(account.currency),\n                is_mt: account.account_type === 'mt5',\n                ...(account.mt5_group && { mt_icon: getMT5AccountDisplay(account.mt5_group) }),\n            };\n            // set current logged in client as the default transfer from account\n            if (account.loginid === this.root_store.client.loginid) {\n                // check if selected from is not allowed account\n                if (hasTransferNotAllowedLoginid(obj_values.value)) {\n                    obj_values.error = getSelectedError(obj_values.value, true);\n                }\n\n                this.setSelectedFrom(obj_values);\n            } else if (isEmptyObject(this.config.account_transfer.selected_to)) {\n                if (hasTransferNotAllowedLoginid(obj_values.value)) {\n                    // check if selected to is not allowed account\n                    obj_values.error = getSelectedError(obj_values.value);\n                }\n                // set the first available account as the default transfer to account\n                this.setSelectedTo(obj_values);\n            }\n            arr_accounts.push(obj_values);\n        });\n        this.setAccounts(arr_accounts);\n    }\n\n    @action.bound\n    setSelectedFrom(obj_values) {\n        this.config.account_transfer.selected_from = obj_values;\n    }\n\n    @action.bound\n    setSelectedTo(obj_values) {\n        this.config.account_transfer.selected_to = obj_values;\n    }\n\n    @action.bound\n    setAccounts(arr_accounts) {\n        this.config.account_transfer.accounts_list = arr_accounts;\n    }\n\n    @action.bound\n    setIsTryTransferSuccessful(is_try_transfer_successful) {\n        this.config[this.active_container].is_try_transfer_successful = is_try_transfer_successful;\n    }\n\n    @action.bound\n    setIsTransferSuccessful(is_transfer_successful) {\n        this.config[this.active_container].is_transfer_successful = is_transfer_successful;\n    }\n\n    @action.bound\n    setReceiptTransfer({ amount }) {\n        this.config.account_transfer.receipt = {\n            amount_transferred: amount,\n        };\n    }\n\n    @action.bound\n    onChangeTransferFrom({ target }) {\n        this.setErrorMessage('');\n        this.config.account_transfer.selected_from.error = '';\n\n        const accounts = this.config.account_transfer.accounts_list;\n        const selected_from = accounts.find(account => account.value === target.value);\n\n        // if new value of selected_from is the same as the current selected_to\n        // switch the value of selected_from and selected_to\n        if (selected_from.value === this.config.account_transfer.selected_to.value) {\n            this.onChangeTransferTo({ target: { value: this.config.account_transfer.selected_from.value } });\n        } else if (selected_from.is_mt && this.config.account_transfer.selected_to.is_mt) {\n            // not allowed to transfer from MT to MT\n            const first_non_mt = this.config.account_transfer.accounts_list.find(account => !account.is_mt);\n            this.onChangeTransferTo({ target: { value: first_non_mt.value } });\n        } else if (selected_from.is_crypto && this.config.account_transfer.selected_to.is_crypto) {\n            // not allowed to transfer crypto to crypto\n            const first_fiat = this.config.account_transfer.accounts_list.find(account => !account.is_crypto);\n            this.onChangeTransferTo({ target: { value: first_fiat.value } });\n        }\n\n        if (hasTransferNotAllowedLoginid(selected_from.value)) {\n            selected_from.error = getSelectedError(selected_from.value, true);\n        }\n\n        this.config.account_transfer.selected_from = selected_from;\n        this.setMinimumFee();\n        this.setTransferLimit();\n    }\n\n    @action.bound\n    onChangeTransferTo({ target }) {\n        this.setErrorMessage('');\n        this.config.account_transfer.selected_to.error = '';\n\n        const accounts = this.config.account_transfer.accounts_list;\n        this.config.account_transfer.selected_to = accounts.find(account => account.value === target.value) || {};\n        if (hasTransferNotAllowedLoginid(this.config.account_transfer.selected_to.value)) {\n            this.config.account_transfer.selected_to.error = getSelectedError(\n                this.config.account_transfer.selected_to.value\n            );\n        }\n        this.setTransferFee();\n    }\n\n    requestTransferBetweenAccounts = async ({ amount }) => {\n        if (!this.root_store.client.is_logged_in) {\n            return null;\n        }\n\n        this.setErrorMessage('');\n        const currency = this.config.account_transfer.selected_from.currency;\n        const transfer_between_accounts = await WS.authorized.transferBetweenAccounts(\n            this.config.account_transfer.selected_from.value,\n            this.config.account_transfer.selected_to.value,\n            currency,\n            amount\n        );\n        if (transfer_between_accounts.error) {\n            this.setErrorMessage(transfer_between_accounts.error);\n        } else {\n            this.setReceiptTransfer({ amount: formatMoney(currency, amount, true) });\n            transfer_between_accounts.accounts.forEach(account => {\n                this.config.account_transfer.setBalanceByLoginId(account.loginid, account.balance);\n                if (account.loginid === this.config.account_transfer.selected_from.value) {\n                    this.config.account_transfer.setBalanceSelectedFrom(account.balance);\n                } else if (account.loginid === this.config.account_transfer.selected_to.value) {\n                    this.config.account_transfer.setBalanceSelectedTo(account.balance);\n                }\n                // if one of the accounts was mt5\n                if (account.mt5_group) {\n                    // update the balance for account switcher by renewing the mt5_login_list response\n                    WS.mt5LoginList().then(this.root_store.client.responseMt5LoginList);\n                    // update total balance since MT5 total only comes in non-stream balance call\n                    WS.balanceAll().then(response => {\n                        this.root_store.client.setBalanceOtherAccounts(response.balance);\n                    });\n                }\n            });\n            this.setIsTransferSuccessful(true);\n        }\n        return transfer_between_accounts;\n    };\n\n    @action.bound\n    resetAccountTransfer = async () => {\n        this.setIsTransferSuccessful(false);\n    };\n\n    @action.bound\n    async onMountPaymentAgentTransfer() {\n        this.setLoading(true);\n        this.onRemount = this.onMountPaymentAgentTransfer;\n        await this.onMountCommon();\n\n        if (!this.config.payment_agent_transfer.transfer_limit.min_withdrawal) {\n            const response = await this.getPaymentAgentList();\n            const current_payment_agent = this.getCurrentPaymentAgent(response);\n            this.setMinMaxPaymentAgentTransfer(current_payment_agent);\n        }\n        this.setLoading(false);\n    }\n\n    getCurrentPaymentAgent(response_payment_agent) {\n        return (\n            response_payment_agent.paymentagent_list.list.find(\n                agent => agent.paymentagent_loginid === this.root_store.client.loginid\n            ) || {}\n        );\n    }\n\n    async checkIsPaymentAgent() {\n        const get_settings = (await WS.authorized.storage.getSettings()).get_settings;\n        this.setIsPaymentAgent(get_settings?.is_authenticated_payment_agent ?? false);\n    }\n\n    @action.bound\n    setIsPaymentAgent(is_payment_agent) {\n        if (!is_payment_agent && window.location.pathname.endsWith(routes.cashier_pa_transfer)) {\n            this.root_store.common.routeTo(routes.cashier_deposit);\n        }\n        this.config.payment_agent_transfer.is_payment_agent = !!is_payment_agent;\n    }\n\n    @action.bound\n    setMinMaxPaymentAgentTransfer({ min_withdrawal, max_withdrawal }) {\n        this.config.payment_agent_transfer.transfer_limit = {\n            min: min_withdrawal,\n            max: max_withdrawal,\n        };\n    }\n\n    @action.bound\n    setConfirmationPaymentAgentTransfer({ amount, client_id, client_name, description }) {\n        this.config.payment_agent_transfer.confirm = {\n            amount,\n            client_id,\n            client_name,\n            description,\n        };\n    }\n\n    @action.bound\n    requestTryPaymentAgentTransfer = async ({ amount, currency, description, transfer_to }) => {\n        const payment_agent_transfer = await WS.authorized.paymentAgentTransfer({\n            amount,\n            currency,\n            description,\n            transfer_to,\n            dry_run: 1,\n        });\n        if (+payment_agent_transfer.paymentagent_transfer === 2) {\n            // show confirmation screen\n            this.setConfirmationPaymentAgentTransfer({\n                client_id: transfer_to,\n                client_name: payment_agent_transfer.client_to_full_name,\n                amount,\n                description,\n            });\n            this.setIsTryTransferSuccessful(true);\n        } else {\n            this.setErrorMessage(payment_agent_transfer.error, this.resetPaymentAgentTransfer);\n        }\n\n        return payment_agent_transfer;\n    };\n\n    @action.bound\n    setReceiptPaymentAgentTransfer({ amount_transferred, client_id, client_name }) {\n        this.config.payment_agent_transfer.receipt = {\n            amount_transferred,\n            client_id,\n            client_name,\n        };\n    }\n\n    @action.bound\n    requestPaymentAgentTransfer = async ({ amount, currency, description, transfer_to }) => {\n        const payment_agent_transfer = await WS.authorized.paymentAgentTransfer({\n            amount,\n            currency,\n            description,\n            transfer_to,\n        });\n        if (+payment_agent_transfer.paymentagent_transfer === 1) {\n            this.setReceiptPaymentAgentTransfer({\n                amount_transferred: amount,\n                client_id: transfer_to,\n                client_name: payment_agent_transfer.client_to_full_name,\n            });\n            this.setIsTransferSuccessful(true);\n            this.setIsTryTransferSuccessful(false);\n            this.setConfirmationPaymentAgentTransfer({});\n        } else {\n            this.setErrorMessage(payment_agent_transfer.error, this.resetPaymentAgentTransfer);\n        }\n\n        return payment_agent_transfer;\n    };\n\n    @action.bound\n    resetPaymentAgentTransfer = () => {\n        this.setIsTransferSuccessful(false);\n        this.setErrorMessage('');\n    };\n\n    accountSwitcherListener() {\n        [this.config.withdraw.container, this.config.payment_agent.container].forEach(container => {\n            this.clearVerification(container);\n        });\n        [this.config.deposit.container, this.config.withdraw.container].forEach(container => {\n            this.setIframeUrl('', container);\n            this.clearTimeoutCashierUrl(container);\n            this.setSessionTimeout(true, container);\n        });\n        this.config.payment_agent = new ConfigPaymentAgent();\n        this.config.account_transfer = new ConfigAccountTransfer();\n        this.config.payment_agent_transfer = new ConfigPaymentAgentTransfer();\n        this.is_populating_values = false;\n        this.setIsP2pVisible(false);\n\n        this.onRemount();\n\n        return Promise.resolve();\n    }\n}\n","import CashierStore from './Cashier/cashier-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier = new CashierStore({ root_store });\n    }\n}\n","import { action, autorun, computed, observable } from 'mobx';\nimport { getPlatformHeader, unique, isEmptyObject } from '@deriv/shared';\n\nimport { MAX_MOBILE_WIDTH, MAX_TABLET_WIDTH } from 'Constants/ui';\nimport { LocalStore } from '_common/storage';\nimport { sortNotifications } from 'App/Components/Elements/NotificationMessage';\nimport { clientNotifications, excluded_notifications } from './Helpers/client-notifications';\nimport BaseStore from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_account_settings_visible = false;\n    @observable is_notifications_visible = false;\n    @observable is_positions_drawer_on = false;\n    @observable is_reports_visible = false;\n    @observable reports_route_tab_index = 0;\n    @observable is_cashier_visible = false;\n    @observable is_history_tab_active = false;\n    // TODO: [cleanup ui-store]\n    // Take profit, Stop loss & Deal cancellation checkbox\n    @observable should_show_cancellation_warning = true;\n\n    // Extensions\n    @observable footer_extension = undefined;\n    @observable header_extension = undefined;\n    @observable settings_extension = undefined;\n    @observable notification_messages_ui = undefined;\n\n    @observable is_dark_mode_on = false;\n    @observable is_settings_modal_on = false;\n    @observable is_accounts_switcher_on = false;\n    @observable account_switcher_disabled_message = '';\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible = false;\n    @observable is_set_residence_modal_visible = false;\n    @observable is_reset_password_modal_visible = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible = false;\n    @observable is_chart_layout_default = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n    @observable screen_height = window.innerHeight;\n    @observable is_keyboard_active = false;\n\n    @observable notifications = [];\n    @observable notification_messages = [];\n    @observable marked_notifications = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type = 'duration';\n    @observable simple_duration_unit = 't';\n    @observable duration_t = 5;\n    @observable duration_s = 15;\n    @observable duration_m = 3;\n    @observable duration_h = 1;\n    @observable duration_d = 1;\n\n    // purchase button states\n    @observable purchase_states = [false, false];\n\n    // app states for modal\n    @observable is_app_disabled = false;\n    @observable is_route_modal_on = false;\n\n    // real account signup\n    @observable is_real_acc_signup_on = false;\n    @observable real_account_signup_target = undefined;\n    @observable has_real_account_signup_ended = false;\n\n    // account types modal\n    @observable is_account_types_modal_visible = false;\n\n    // set currency modal\n    @observable is_set_currency_modal_visible = false;\n\n    // position states\n    @observable show_positions_toggle = true;\n\n    @observable modal_index = 0;\n\n    // Mt5 topup\n    @observable is_top_up_virtual_open = false;\n    @observable is_top_up_virtual_success = false;\n\n    // Real account signup\n    @observable real_account_signup = {\n        active_modal_index: -1,\n        previous_currency: '',\n        current_currency: '',\n        success_message: '',\n        error_message: '',\n    };\n\n    // UI Focus retention\n    @observable current_focus = null;\n\n    // Enabling EU users\n    @observable is_eu_enabled = false; // TODO: [deriv-eu] - Remove this constant when all EU sections are done.\n\n    // Mobile\n    @observable should_show_toast_error = false;\n    @observable mobile_toast_error = '';\n    @observable mobile_toast_timeout = 1500;\n\n    @observable is_mt5_page = false;\n    @observable is_nativepicker_visible = false;\n\n    @observable prompt_when = false;\n    @observable promptFn = () => {};\n\n    // MT5 account needed modal\n    @observable is_account_needed_modal_on = false;\n    @observable account_needed_modal_props = {\n        target: '',\n        target_label: '',\n        target_dmt5_label: '',\n    };\n\n    getDurationFromUnit = unit => this[`duration_${unit}`];\n\n    constructor(root_store) {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_account_settings_visible',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n            'should_show_cancellation_warning',\n        ];\n\n        super({ root_store, local_storage_properties, store_name });\n\n        // TODO: [deiv-eu] remove this manual enabler\n        this.toggleIsEuEnabled(localStorage.getItem('is_eu_enabled') === 'true');\n\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            // TODO: [disable-dark-bot] Delete this condition when Bot is ready\n            const new_app_routing_history = this.root_store.common.app_routing_history.slice();\n            const platform = getPlatformHeader(new_app_routing_history);\n            if (platform === 'DBot') {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n                return;\n            }\n\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    init(notification_messages) {\n        this.notification_messages_ui = notification_messages;\n    }\n\n    @action.bound\n    populateFooterExtensions(component) {\n        this.footer_extension = component;\n    }\n\n    @action.bound\n    populateHeaderExtensions(component) {\n        this.header_extension = component;\n    }\n\n    @action.bound\n    populateSettingsExtensions(menu_items) {\n        this.settings_extension = menu_items;\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        if (this.is_mobile) {\n            this.is_keyboard_active =\n                window.innerWidth === this.screen_width && this.screen_height > window.innerHeight;\n        }\n        this.screen_width = window.innerWidth;\n        this.screen_height = window.innerHeight;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @action.bound\n    setPromptHandler(condition, cb = () => {}) {\n        this.prompt_when = condition;\n        this.promptFn = cb;\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @computed\n    get is_account_switcher_disabled() {\n        return !!this.account_switcher_disabled_message;\n    }\n\n    @action.bound\n    setRouteModal() {\n        this.is_route_modal_on = true;\n    }\n\n    @action.bound\n    disableRouteModal() {\n        this.is_route_modal_on = false;\n    }\n\n    @action.bound\n    disableApp() {\n        this.is_app_disabled = true;\n    }\n\n    @action.bound\n    enableApp() {\n        this.is_app_disabled = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog(status = !this.is_accounts_switcher_on) {\n        this.is_accounts_switcher_on = status;\n    }\n\n    @action.bound\n    setAccountSwitcherDisabledMessage(message) {\n        if (message) {\n            this.is_accounts_switcher_on = false;\n            this.account_switcher_disabled_message = message;\n        } else {\n            this.account_switcher_disabled_message = '';\n        }\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, el => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [false, false];\n    }\n\n    @action.bound\n    setChartLayout(is_default) {\n        this.is_chart_layout_default = is_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // setChartAssetInfo(is_visible) {\n    //     this.is_chart_asset_info_visible = is_visible;\n    // }\n\n    @action.bound\n    setChartCountdown(is_visible) {\n        this.is_chart_countdown_visible = is_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // setPurchaseLock(is_locked) {\n    //     this.is_purchase_lock_on = is_locked;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    setDarkMode(is_dark_mode_on) {\n        if (this.is_dark_mode_on !== is_dark_mode_on) {\n            this.is_dark_mode_on = is_dark_mode_on;\n            // This GTM call is here instead of the GTM store due to frequency of use\n            this.root_store.gtm.pushDataLayer({ event: 'switch theme' });\n        }\n\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSetCurrencyModal() {\n        this.is_set_currency_modal_visible = !this.is_set_currency_modal_visible;\n    }\n\n    @action.bound\n    toggleCashier() {\n        this.is_cashier_visible = !this.is_cashier_visible;\n    }\n\n    @action.bound\n    setModalIndex(index = 0) {\n        this.modal_index = index;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() {\n        // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    openRealAccountSignup(target = this.root_store.client.upgradeable_landing_companies?.[0]) {\n        this.is_real_acc_signup_on = true;\n        this.real_account_signup_target = target;\n        this.is_accounts_switcher_on = false;\n    }\n\n    @action.bound\n    closeRealAccountSignup() {\n        this.is_real_acc_signup_on = false;\n        setTimeout(() => {\n            this.resetRealAccountSignupParams();\n            this.setRealAccountSignupEnd(true);\n        }, 300);\n    }\n\n    @action.bound\n    openAccountNeededModal(target, target_label, target_dmt5_label) {\n        this.is_account_needed_modal_on = true;\n        this.account_needed_modal_props = {\n            target,\n            target_label,\n            target_dmt5_label,\n        };\n    }\n\n    @action.bound\n    closeAccountNeededModal() {\n        this.is_account_needed_modal_on = false;\n        this.account_needed_modal_props = {\n            target: '',\n            target_label: '',\n            target_dmt5_label: '',\n        };\n    }\n\n    @action.bound\n    togglePositionsDrawer() {\n        // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleNotificationsModal() {\n        this.is_notifications_visible = !this.is_notifications_visible;\n    }\n\n    @action.bound\n    toggleAccountSettings(is_visible) {\n        this.is_account_settings_visible = is_visible;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    updateNotifications(notifications_array) {\n        this.notifications = notifications_array.filter(message => !excluded_notifications.includes(message.key));\n    }\n\n    @action.bound\n    removeNotifications() {\n        this.notifications = [];\n    }\n\n    @action.bound\n    removeNotificationByKey({ key }) {\n        this.notifications = this.notifications.filter(n => n.key !== key);\n    }\n\n    @action.bound\n    addNotificationMessageByKey(key) {\n        if (key) this.addNotificationMessage(clientNotifications()[key]);\n    }\n\n    @action.bound\n    markNotificationMessage({ key }) {\n        this.marked_notifications.push(key);\n    }\n\n    @action.bound\n    addNotificationMessage(notification) {\n        if (!notification) return;\n        if (!this.notification_messages.find(item => item.header === notification.header)) {\n            this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n            if (!excluded_notifications.includes(notification.key)) {\n                this.updateNotifications(this.notification_messages);\n            }\n            // Remove notification messages if it was already closed by user and exists in LocalStore\n            const active_loginid = LocalStore.get('active_loginid');\n            const messages = LocalStore.getObject('notification_messages');\n            if (active_loginid && !isEmptyObject(messages)) {\n                // Check if is existing message to remove already closed messages stored in LocalStore\n                const is_existing_message = Array.isArray(messages[active_loginid])\n                    ? messages[active_loginid].includes(notification.key)\n                    : false;\n                if (is_existing_message) {\n                    this.markNotificationMessage({ key: notification.key });\n                }\n            }\n        }\n    }\n\n    @action.bound\n    removeNotificationMessage({ key } = {}) {\n        if (!key) return;\n        this.notification_messages = this.notification_messages.filter(n => n.key !== key);\n        // Add notification messages to LocalStore when user closes, check for redundancy\n        const active_loginid = LocalStore.get('active_loginid');\n        if (!excluded_notifications.includes(key) && active_loginid) {\n            const messages = LocalStore.getObject('notification_messages');\n            // Check if same message already exists in LocalStore for this account\n            if (messages[active_loginid] && messages[active_loginid].includes(key)) {\n                return;\n            }\n            const current_message = () => {\n                if (Array.isArray(messages[active_loginid])) {\n                    messages[active_loginid].push(key);\n                    return messages[active_loginid];\n                }\n                return [key];\n            };\n            // Store message into LocalStore upon closing message\n            Object.assign(messages, { [active_loginid]: current_message() });\n            LocalStore.setObject('notification_messages', messages);\n        }\n    }\n\n    @action.bound\n    removeAllNotificationMessages(should_close_persistent) {\n        this.notification_messages = should_close_persistent\n            ? []\n            : [...this.notification_messages.filter(notifs => notifs.is_persistent)];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_account_signup_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleSetResidenceModal(state_change = !this.is_set_residence_modal_visible) {\n        this.is_set_residence_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleCancellationWarning(state_change = !this.should_show_cancellation_warning) {\n        this.should_show_cancellation_warning = state_change;\n    }\n\n    @action.bound\n    toggleHistoryTab(state_change = !this.is_history_tab_active) {\n        this.is_history_tab_active = state_change;\n    }\n\n    @action.bound\n    closeTopUpModal() {\n        this.is_top_up_virtual_open = false;\n    }\n\n    @action.bound\n    openTopUpModal() {\n        this.is_top_up_virtual_open = true;\n    }\n\n    @action.bound\n    closeSuccessTopUpModal() {\n        this.is_top_up_virtual_success = false;\n    }\n\n    @action.bound\n    toggleResetPasswordModal(state_change = !this.is_reset_password_modal_visible) {\n        this.is_reset_password_modal_visible = state_change;\n    }\n\n    @action.bound\n    setRealAccountSignupParams(params) {\n        this.real_account_signup = {\n            ...this.real_account_signup,\n            ...params,\n        };\n    }\n\n    @action.bound\n    setRealAccountSignupEnd(has_ended) {\n        this.has_real_account_signup_ended = has_ended;\n    }\n\n    @action.bound\n    resetRealAccountSignupParams() {\n        this.real_account_signup = {\n            active_modal_index: -1,\n            previous_currency: '',\n            current_currency: '',\n            success_message: '',\n            error_message: '',\n        };\n        this.real_account_signup_target = '';\n    }\n\n    @action.bound\n    setCurrentFocus(value) {\n        this.current_focus = value;\n    }\n\n    @action.bound\n    setToastErrorVisibility(status) {\n        this.should_show_toast_error = status;\n    }\n\n    @action.bound\n    setToastErrorMessage(msg, timeout = 1500) {\n        this.mobile_toast_timeout = timeout;\n        this.mobile_toast_error = msg;\n    }\n\n    @action.bound\n    setIsNativepickerVisible(is_nativepicker_visible) {\n        this.is_nativepicker_visible = is_nativepicker_visible;\n    }\n\n    @action.bound\n    setReportsTabIndex(tab_index = 0) {\n        this.reports_route_tab_index = tab_index;\n    }\n\n    @action.bound\n    toggleAccountTypesModal(is_visible = !this.is_account_types_modal_visible) {\n        this.is_account_types_modal_visible = is_visible;\n    }\n\n    @action.bound\n    showAccountTypesModalForEuropean() {\n        this.toggleAccountTypesModal(this.root_store.client.is_uk);\n    }\n\n    @action.bound\n    toggleIsEuEnabled(status = !this.is_eu_enabled) {\n        this.is_eu_enabled = status;\n    }\n}\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","import ClientStore from './client-store';\nimport CommonStore from './common-store';\nimport GTMStore from './gtm-store';\nimport SegmentStore from './segment-store';\nimport ModulesStore from './Modules';\nimport UIStore from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client = new ClientStore(this);\n        this.common = new CommonStore(this);\n        this.modules = new ModulesStore(this);\n        this.ui = new UIStore(this);\n        this.gtm = new GTMStore(this);\n        this.segment = new SegmentStore(this);\n    }\n}\n","import { configure } from 'mobx';\nimport Client from '_common/base/client_base';\nimport NetworkMonitor from 'Services/network-monitor';\n// import OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore from 'Stores';\n\nconfigure({ enforceActions: 'observed' });\n\nconst setStorageEvents = root_store => {\n    window.addEventListener('storage', evt => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'reality_check_dismissed':\n                if (document.hidden) {\n                    // if new value is true, hide reality check, otherwise show it\n                    root_store.client.setVisibilityRealityCheck(!JSON.parse(evt.newValue));\n                }\n                break;\n            // no default\n        }\n    });\n};\n\nconst initStore = notification_messages => {\n    Client.init();\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    // TODO: Re-enable and update browser checking\n    // OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.ui.init(notification_messages);\n    // root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// Initialize i18n by importing it here\n// eslint-disable-next-line no-unused-vars\nimport { DesktopWrapper } from '@deriv/components';\nimport { checkAndSetEndpointFromUrl, setUrlLanguage, isMobile } from '@deriv/shared';\nimport { initializeTranslations, getLanguage } from '@deriv/translations';\nimport Client from '_common/base/client_base';\nimport WS from 'Services/ws-methods';\nimport { MobxContentProvider } from 'Stores/connect';\nimport SmartTraderIFrame from 'Modules/SmartTraderIFrame';\nimport ErrorBoundary from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents from './Containers/Layout/app-contents.jsx';\nimport Footer from './Containers/Layout/footer.jsx';\nimport Header from './Containers/Layout/header.jsx';\nimport AppNotificationMessages from './Containers/app-notification-messages.jsx';\nimport AppModals from './Containers/Modals';\nimport Routes from './Containers/Routes/routes.jsx';\n// eslint-disable-next-line import/extensions\nimport initStore from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    const has_base = /^\\/(br_)/.test(l.pathname);\n    const url_params = new URLSearchParams(l.search);\n    React.useEffect(() => {\n        checkAndSetEndpointFromUrl();\n        initializeTranslations();\n        setUrlLanguage(getLanguage());\n    }, []);\n    if (isMobile()) {\n        React.useEffect(() => {\n            const el_landscape_blocker = document.getElementById('landscape_blocker');\n\n            const onFocus = () => {\n                /* Prevent from showing Landscape blocker UI when keyboard is visible */\n                el_landscape_blocker.classList.add('landscape-blocker--keyboard-visible');\n                root_store.ui.setIsNativepickerVisible(true);\n            };\n\n            const onFocusOut = e => {\n                if (e.target.classList.contains('dc-dropdown__display')) {\n                    // if the next target is a dropdown, keep native picker open\n                    return;\n                }\n                root_store.ui.setIsNativepickerVisible(false);\n            };\n\n            const onTouchStart = () => {\n                if (document.activeElement.tagName !== 'INPUT') {\n                    el_landscape_blocker.classList.remove('landscape-blocker--keyboard-visible');\n                }\n            };\n            /**\n             * Adding `focus` and `focusout` event listeners to document here to detect for on-screen keyboard on mobile browsers\n             * and storing this value in UI-store to be used across the app stores.\n             *  - when document gets `focus` event - keyboard is visible\n             *  - when document gets `focusout` or `touchstart` event - keyboard is hidden\n             *  - note: the `touchstart` event comes after `focusout` and and we want to\n             *          remove `landscape-blocker--keyboard-visible` class as late as possible\n             * [TODO]: find an alternative solution to detect for on-screen keyboard\n             */\n            document.addEventListener('focus', onFocus, true);\n            document.addEventListener('focusout', onFocusOut, false);\n            document.addEventListener('touchstart', onTouchStart, true);\n\n            // componentWillUnmount lifecycle\n            return () => {\n                document.removeEventListener('focus', onFocus);\n                document.removeEventListener('focusout', onFocusOut);\n                document.removeEventListener('touchstart', onTouchStart);\n            };\n        }, []);\n    }\n\n    const platform_passthrough = {\n        root_store,\n        WS,\n        client_base: Client,\n    };\n\n    return (\n        <Router basename={has_base ? `/${base}` : null}>\n            <MobxContentProvider store={root_store}>\n                <React.Fragment>\n                    <Header />\n                    <ErrorBoundary>\n                        <AppContents>\n                            {/* TODO: [trader-remove-client-base] */}\n                            <Routes passthrough={platform_passthrough} />\n                        </AppContents>\n                    </ErrorBoundary>\n                    <DesktopWrapper>\n                        <Footer />\n                    </DesktopWrapper>\n                    <AppModals url_action_param={url_params.get('action')} />\n                    <SmartTraderIFrame />\n                </React.Fragment>\n            </MobxContentProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore(AppNotificationMessages);\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","import 'babel-polyfill';\nimport 'promise-polyfill';\nimport registerServiceWorker from 'Utils/pwa';\n\nimport 'event-source-polyfill';\n\nif (\n    !!window?.localStorage.getItem?.('debug_service_worker') || // To enable local service worker related development\n    (!window.location.hostname.startsWith('localhost') && !/binary\\.sx/.test(window.location.hostname)) ||\n    window.location.hostname === 'deriv-app.binary.sx'\n) {\n    registerServiceWorker();\n}\n\n// eslint-disable-next-line\nimport App from 'App/app.jsx';\n","const template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[+index - 1]);\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach(attr => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash =\n        static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nconst copyToClipboard = text => {\n    const textField = document.createElement('textarea');\n    textField.innerText = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n};\n// eu countries to support\nconst eu_countries = [\n    'it',\n    'de',\n    'fr',\n    'lu',\n    'gr',\n    'mf',\n    'es',\n    'sk',\n    'lt',\n    'nl',\n    'at',\n    'bg',\n    'si',\n    'cy',\n    'be',\n    'ro',\n    'hr',\n    'pt',\n    'pl',\n    'lv',\n    'ee',\n    'cz',\n    'fi',\n    'hu',\n    'dk',\n    'se',\n    'ie',\n    'im',\n    'gb',\n    'mt',\n];\n// check if client is from EU\nconst isEuCountry = country => eu_countries.includes(country);\n\nmodule.exports = {\n    template,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n    isEuCountry,\n    copyToClipboard,\n};\n","import { localize } from '@deriv/translations';\n\n// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getClientAccountType = loginid => {\n    let account_type;\n    if (/^VR/.test(loginid)) account_type = 'virtual';\n    else if (/^MF/.test(loginid)) account_type = 'financial';\n    else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n    return account_type;\n};\n\n// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getMT5AccountType = group =>\n    group\n        ? group\n              .replace('\\\\', '_')\n              .replace(/_(\\d+|master|EUR|GBP|Bbook|HighRisk)/i, '')\n              // TODO: [remove-standard-advanced] remove standard and advanced when API groups are updated\n              .replace(/_standard$/, '_financial')\n              .replace(/_advanced$/, '_financial_stp')\n        : '';\n\nexport const getMT5AccountDisplay = group => {\n    if (!group) return {};\n\n    const value = getMT5AccountType(group);\n    let display_text = localize('MT5');\n    if (/svg$/.test(value) || /malta$/.test(value)) {\n        display_text = localize('Synthetic');\n    } else if (\n        /vanuatu/.test(value) ||\n        /svg_(standard|financial)/.test(value) ||\n        /maltainvest_financial$/.test(value)\n    ) {\n        // TODO: [remove-standard-advanced] remove standard when API groups are updated\n        display_text = localize('Financial');\n    } else if (/labuan/.test(value)) {\n        display_text = localize('Financial STP');\n    }\n\n    return display_text;\n};\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\")):\"function\"==typeof define&&define.amd?define([\"react\"],t):\"object\"==typeof exports?exports[\"@deriv/account\"]=t(require(\"react\")):e[\"@deriv/account\"]=t(e.react)}(window,(function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"/\",r(r.s=\"./Components/form-sub-header/index.js\")}({\"../node_modules/classnames/index.js\":function(e,t,r){var n;\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/!function(){\"use strict\";var r={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var a=typeof n;if(\"string\"===a||\"number\"===a)e.push(n);else if(Array.isArray(n)&&n.length){var u=o.apply(null,n);u&&e.push(u)}else if(\"object\"===a)for(var c in n)r.call(n,c)&&n[c]&&e.push(c)}}return e.join(\" \")}e.exports?(o.default=o,e.exports=o):void 0===(n=function(){return o}.apply(t,[]))||(e.exports=n)}()},\"./Components/form-sub-header/index.js\":function(e,t,r){\"use strict\";r.r(t);var n=r(\"../node_modules/classnames/index.js\"),o=r.n(n),a=r(\"react\"),u=r.n(a);t.default=function(e){var t=e.title,r=e.subtitle,n=e.description;return u.a.createElement(u.a.Fragment,null,u.a.createElement(\"div\",{className:o()(\"account-form__header\",{\"account-form__header--has-description\":!!n})},u.a.createElement(\"div\",{className:\"account-form__header-section\"},u.a.createElement(\"h1\",{className:\"account-form__title\"},t),r&&u.a.createElement(\"h2\",{className:\"account-form__subtitle\"},r))),n&&u.a.createElement(\"p\",{className:\"account-form__description\"},n))}},react:function(t,r){t.exports=e}}).default}));\n//# sourceMappingURL=form-sub-header.js.map","const moment = require('moment');\nconst isEmptyObject = require('@deriv/shared').isEmptyObject;\nconst getPropertyValue = require('@deriv/shared').getPropertyValue;\nconst getStaticHash = require('_common/utility.js').getStaticHash;\nconst LocalStore = require('../storage').LocalStore;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    const config = {\n        payout_currencies: { expire: 120 },\n        proposal_open_contract: { expire: 10 },\n        active_symbols: { expire: 10 },\n        contracts_for: { expire: 10 },\n        exchange_rates: { expire: 60 },\n        trading_times: { expire: 120 },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10 },\n        // profit_table          : { expire: 10 },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const set = (key, response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // check if response has subscription, since we only want to cache non-streaming responses\n        if (response.subscription || response.echo_req.end === 'latest') return;\n\n        // TODO: remove once caching is fixed to distinguish non-streaming/expired contracts from poc calls\n        if (msg_type === 'proposal_open_contract') {\n            if (!response.proposal_open_contract.is_sold) return;\n        }\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message = cached_response[msg_type];\n        const new_message = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            return;\n        }\n\n        const expires = moment()\n            .add(config[msg_type].expire, 'm')\n            .valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires, msg_type };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = data => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const reloadDataObj = () => {\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) {\n            // new release\n            clear();\n        }\n    };\n\n    const getData = key => getPropertyValue(data_obj, key) || {};\n\n    const get = key => {\n        reloadDataObj();\n\n        const response_obj = getData(key);\n\n        let response;\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else {\n            // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const getByMsgType = msg_type => {\n        reloadDataObj();\n\n        const key = Object.keys(data_obj).find(k => getData(k).msg_type === msg_type);\n\n        if (!key) return undefined;\n\n        const response_obj = getData(key);\n\n        let response;\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else {\n            // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const has = key => {\n        return !!get(key);\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach(data_key => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        getByMsgType,\n        has,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n"],"sourceRoot":""}