{"version":3,"sources":["webpack:///./App/Containers/WelcomeModal/welcome-modal.jsx"],"names":["WelcomeColumn","button_text","className","description","icons","is_hovered","onButtonClick","onMouseEnter","onMouseLeave","platforms","title","classNames","map","icon","index","key","size","localize","platform","onClick","large","primary","isMobile","secondary","propTypes","PropTypes","string","array","func","arrayOf","object","withRouter","connect","toggleWelcomeModal","ui","history","React","hovered","setHovered","switchPlatform","route","is_visible","should_persist","push","width","is_open","toggleModal","has_close_icon","has_outer_content","height","routes","mt5","trade"],"mappings":"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","file":"js/core.welcome-modal.43a9d032d252ab9b3e05.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Modal, Icon, Button, ThemedScrollbars } from '@deriv/components';\nimport { routes, isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\n\nconst WelcomeColumn = ({\n    button_text,\n    className,\n    description,\n    icons,\n    is_hovered,\n    onButtonClick,\n    onMouseEnter,\n    onMouseLeave,\n    platforms,\n    title,\n}) => {\n    return (\n        <div\n            className={classNames('welcome-column', className)}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n        >\n            <div className='welcome-column__icons'>\n                {icons.map((icon, index) => (\n                    <Icon className='welcome-column__icon' icon={icon} key={index} size={48} />\n                ))}\n            </div>\n            <div className='welcome-column__title'>{title}</div>\n            <div className='welcome-column__description'>{description}</div>\n            <div className='welcome-column__platforms'>\n                <p className='welcome-column__platforms__title'>{localize('Platforms')}</p>\n                <div className='welcome-column__platforms__container'>\n                    {platforms.map((platform, index) => (\n                        <div className='welcome-column__platform' key={index}>\n                            <Icon className='welcome-column__platform__icon' icon={platform.icon} size={32} />\n                            <h3 className='welcome-column__platform__title'>{platform.title}</h3>\n                            <p className='welcome-column__platform__description'>{platform.description}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <Button\n                className='welcome-column__button'\n                onClick={onButtonClick}\n                large\n                primary={is_hovered || isMobile()}\n                secondary={!(is_hovered || isMobile())}\n            >\n                {button_text}\n            </Button>\n        </div>\n    );\n};\n\nWelcomeColumn.propTypes = {\n    button_text: PropTypes.string,\n    description: PropTypes.string,\n    icons: PropTypes.array,\n    onButtonClick: PropTypes.func,\n    platforms: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n};\n\nconst WelcomeModal = ({ toggleWelcomeModal, history }) => {\n    const [hovered, setHovered] = React.useState(null);\n\n    const switchPlatform = React.useCallback(\n        route => {\n            toggleWelcomeModal({ is_visible: false, should_persist: true });\n            history.push(route);\n        },\n        [toggleWelcomeModal, history]\n    );\n\n    return (\n        <Modal\n            width='760px'\n            className='welcome'\n            is_open={true}\n            toggleModal={() => {}}\n            has_close_icon={false}\n            has_outer_content={true}\n        >\n            <ThemedScrollbars height={700}>\n                <h2 className='welcome__title'>{localize('Where would you like to start?')}</h2>\n                <div\n                    className={classNames('welcome__message', 'welcome__message--left', {\n                        'welcome__message--visible': hovered === 'left',\n                    })}\n                >\n                    <p className='welcome__message__text'>{localize('The choice of professionals')}</p>\n                    <Icon icon='IcArrowRightCurly' size={43} />\n                </div>\n                <div\n                    className={classNames('welcome__message', 'welcome__message--right', {\n                        'welcome__message--visible': hovered === 'right',\n                    })}\n                >\n                    <Icon icon='IcArrowLeftCurly' size={43} />\n                    <p className='welcome__message__text'>{localize('Not sure? Try this')}</p>\n                </div>\n                <div className='welcome__body'>\n                    <WelcomeColumn\n                        button_text={localize('Start here')}\n                        className='welcome-column--left'\n                        description={localize(\n                            'Trade with leverage and low spreads for better returns on successful trades.'\n                        )}\n                        icons={['IcPercentSolid']}\n                        is_hovered={hovered === 'left'}\n                        onButtonClick={() => switchPlatform(routes.mt5)}\n                        platforms={[\n                            {\n                                icon: 'IcBrandDmt5',\n                                title: localize('Deriv MetaTrader 5 (DMT5)'),\n                                description: localize('The platform of choice for professionals.'),\n                            },\n                        ]}\n                        title={localize('Margin (MetaTrader 5)')}\n                        onMouseEnter={() => {\n                            setHovered('left');\n                        }}\n                        onMouseLeave={() => {\n                            setHovered(null);\n                        }}\n                    />\n                    <WelcomeColumn\n                        button_text={localize('Start here')}\n                        className='welcome-column--right'\n                        description={localize(\n                            'Earn fixed payouts with options, or trade multipliers to combine the upside of margin trading with the simplicity of options.'\n                        )}\n                        icons={['IcUpDownSolid', 'IcCrossSolid']}\n                        is_hovered={hovered === 'right'}\n                        onButtonClick={() => switchPlatform(routes.trade)}\n                        platforms={[\n                            {\n                                icon: 'IcBrandDtrader',\n                                title: localize('DTrader'),\n                                description: localize('Start trading with a powerful, yet easy-to-use platform.'),\n                            },\n                            {\n                                icon: 'IcBrandDbot',\n                                title: localize('DBot'),\n                                description: localize('Automate your trading ideas without coding.'),\n                            },\n                        ]}\n                        title={localize('Options & Multipliers')}\n                        onMouseEnter={() => {\n                            setHovered('right');\n                        }}\n                        onMouseLeave={() => {\n                            setHovered(null);\n                        }}\n                    />\n                </div>\n                <p className='welcome__footer'>\n                    {localize(\n                        'Whatever you choose, you will always be able to access Margin or Options & Multipliers at any time'\n                    )}\n                </p>\n            </ThemedScrollbars>\n        </Modal>\n    );\n};\n\nexport default withRouter(\n    connect(({ ui }) => ({\n        toggleWelcomeModal: ui.toggleWelcomeModal,\n    }))(WelcomeModal)\n);\n"],"sourceRoot":""}