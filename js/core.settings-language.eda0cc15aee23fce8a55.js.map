{"version":3,"sources":["webpack:///./App/Containers/SettingsModal/settings-language.jsx"],"names":["isCurrentLanguage","lang","currentLanguage","NonClickableLink","children","id","className","classNames","LanguageLink","icon","type","replace","toLowerCase","getAllowedLanguages","propTypes","PropTypes","string","oneOfType","arrayOf","node","isRequired","LanguageSettings","i18n_default_text","Object","keys","map","key","href","getURL"],"mappings":"4GAAA,0EAOMA,EAAoB,SAAAC,GAAI,OAAIA,IAASC,KAErCC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUH,EAAb,EAAaA,KAAb,OACrB,uBACII,GAAE,sBAAiBJ,EAAjB,WACFK,UAAWC,IAAW,mCAAoC,CACtD,2CAA4CP,EAAkBC,MAGjEG,IAIHI,EAAe,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAH,OACjB,gBAAC,WAAD,KACI,gBAAC,OAAD,CACIQ,KAAK,WACLH,UAAW,yEACXI,KAAMT,EAAKU,QAAQ,SAAU,KAAKC,gBAEtC,wBACIN,UAAWC,IAAW,mCAAoC,CACtD,2CAA4CP,EAAkBC,MAGjEY,cAAsBZ,MAmCnCO,EAAaM,UAAY,CACrBb,KAAMc,IAAUC,QAGpBb,EAAiBW,UAAY,CACzBV,SAAUW,IAAUE,UAAU,CAACF,IAAUG,QAAQH,IAAUI,MAAOJ,IAAUI,OAAOC,WACnFnB,KAAMc,IAAUC,QAGLK,UAvCU,kBACrB,uBAAKf,UAAU,qBACX,uBAAKA,UAAU,sCACX,4BACI,gBAAC,WAAD,CAAUgB,kBAAkB,sBAGpC,uBAAKhB,UAAU,yCACViB,OAAOC,KAAKX,eAAuBY,KAAI,SAAAC,GAAG,OACvC1B,EAAkB0B,GACd,gBAACvB,EAAD,CAAkBF,KAAMyB,EAAKA,IAAKA,GAC9B,gBAAClB,EAAD,CAAcP,KAAMyB,KAGxB,qBACIrB,GAAE,sBAAiBqB,EAAjB,WACFA,IAAKA,EACLC,KAAMC,YAAOF,GACbpB,UAAWC,IAAW,mCAAoC,CACtD,2CAA4CP,EAAkB0B,MAGlE,gBAAClB,EAAD,CAAcP,KAAMyB,EAAKA,IAAKA","file":"js/core.settings-language.eda0cc15aee23fce8a55.js","sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getAllowedLanguages, getURL, currentLanguage } from 'Utils/Language';\n\nconst isCurrentLanguage = lang => lang === currentLanguage;\n\nconst NonClickableLink = ({ children, lang }) => (\n    <div\n        id={`dt_settings_${lang}_button`}\n        className={classNames('settings-language__language-link', {\n            'settings-language__language-link--active': isCurrentLanguage(lang),\n        })}\n    >\n        {children}\n    </div>\n);\n\nconst LanguageLink = ({ lang }) => (\n    <React.Fragment>\n        <Icon\n            icon='IcFlagUk' // TODO: enable other language\n            className={'settings-language__language-link-flag settings-language__language-flag'}\n            type={lang.replace(/(\\s|_)/, '-').toLowerCase()}\n        />\n        <span\n            className={classNames('settings-language__language-name', {\n                'settings-language__language-name--active': isCurrentLanguage(lang),\n            })}\n        >\n            {getAllowedLanguages()[lang]}\n        </span>\n    </React.Fragment>\n);\n\nconst LanguageSettings = () => (\n    <div className='settings-language'>\n        <div className='settings-language__language-header'>\n            <span>\n                <Localize i18n_default_text='Select language' />\n            </span>\n        </div>\n        <div className='settings-language__language-container'>\n            {Object.keys(getAllowedLanguages()).map(key =>\n                isCurrentLanguage(key) ? (\n                    <NonClickableLink lang={key} key={key}>\n                        <LanguageLink lang={key} />\n                    </NonClickableLink>\n                ) : (\n                    <a\n                        id={`dt_settings_${key}_button`}\n                        key={key}\n                        href={getURL(key)}\n                        className={classNames('settings-language__language-link', {\n                            'settings-language__language-link--active': isCurrentLanguage(key),\n                        })}\n                    >\n                        <LanguageLink lang={key} key={key} />\n                    </a>\n                )\n            )}\n        </div>\n    </div>\n);\n\nLanguageLink.propTypes = {\n    lang: PropTypes.string,\n};\n\nNonClickableLink.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n    lang: PropTypes.string,\n};\n\nexport default LanguageSettings;\n"],"sourceRoot":""}